/*	File:		MoreWindows.h	Contains:		Written by:	Pete Gontier	Copyright:	Copyright (c) 1998 Apple Computer, Inc., All Rights Reserved.				You may incorporate this Apple sample source code into your program(s) without				restriction. This Apple sample source code has been provided "AS IS" and the				responsibility for its operation is yours. You are not permitted to redistribute				this Apple sample source code as "Apple sample source code" after having made				changes. If you're going to re-distribute the source, we require that you make				it clear in the source that the code was descended from Apple sample source				code, but that you've made changes.	Change History (most recent first):         <6>    22/12/00    Quinn   Added a bunch of new APIs.         <5>     20/3/00    Quinn   Added GetWindowList for non-Carbon clients.         <4>     1/25/99    PCG     TARGET_CARBON         <3>    11/11/98    PCG     fix headers         <2>    11/11/98    PCG     fix header         <1>    11/10/98    PCG     first big re-org at behest of Quinn	Old Change History (most recent first):         <4>    10/11/98    Quinn   Convert "MorePrefix.h" to "MoreSetup.h".         <3>      9/9/98    PCG     re-work import and export pragmas         <2>     7/24/98    PCG	    coddle linker (C++, CFM-68K)         <1>     6/16/98    PCG     initial checkin*/#pragma once#include "MoreSetup.h"#include <MacWindows.h>#ifdef __cplusplus	extern "C" {#endif#pragma import on // for clients#pragma export on // for building a librarypascal OSStatus		MoveWindowToAlertPosition	(WindowRef);pascal OSErr		MoreNewWindow				(	const Rect *			boundsRect,													ConstStr255Param 		title,													short 					theProc,													Boolean 				goAwayFlag,													long 					refCon,													WindowRef				*window				);#if !TARGET_API_MAC_CARBON	extern pascal WindowRef GetWindowList(void);#endifextern pascal Boolean WindowHasEmbeddingHierarchy(WindowPtr window);	// Returns true if the window has a control embedding hierarchy.extern pascal OSStatus MoreGetWindowRegion(WindowRef window, WindowRegionCode inRegionCode, RgnHandle ioWinRgn);	// A version of MoreGetWindowRegion that supports an inRegionCode 	// of kWindowStructureRgn or kWindowContentRgn on all platforms, 	// not just 8.5 and higher.extern pascal RgnHandle MoreGetWindowContentRegion  (WindowRef window);extern pascal RgnHandle MoreGetWindowStructureRegion(WindowRef window);extern pascal RgnHandle MoreGetWindowVisibleRegion  (WindowRef window);	// These routines all return a region handle for one of the windows 	// well known regions.  These routines are not reentrant.  Each routine 	// has a global variable in which it returns the handle, and thus calling 	// the routine a second time will invalidate the results of the first call.  	// You are expected to either stop using the handle immediately or 	// make a copy of it for your own purposes.	//	// While this API is a little cheesy it makes it a lot easier to 	// port code that was just looking at the regions in the WindowRecord.	// The client does not have to allocate memory, or dispose memory 	// that this module allocated.extern pascal Boolean MoreTitleBarOnScreen(WindowRef window);	// This routine returns true if the windowÕs title bar region 	// in on the screen (any screen).  It is useful when restoring 	// a windowÕs position from a save preference file.  If the title 	// bar isnÕt somewhere on screen you have to reposition the window 	// so that the user can at least see it.extern pascal void MoreGetWindowGlobalRect(WindowRef theWindow, Rect *windowRect);	// This routine returns, in windowRect, the bounds of theWindow 	// context region in global coordinates.  It is useful when saving 	// the window position in a preferences file.#pragma import reset // for clients#pragma export reset // for building a library#ifdef __cplusplus	}#endif#if !TARGET_CARBON#	define GetWindowPortBounds(x,r)		do { *(r) = (x)->portRect; } while (false)#endif