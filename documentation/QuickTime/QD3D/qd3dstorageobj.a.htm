<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Accessing Handle Storage Objects</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3399"> </A>Creating and Accessing Handle Storage Objects</H1><P CLASS="T1.Text1"><A NAME="pgfId=3404"> </A><A NAME="marker=3400"> </A>QuickDraw&nbsp;3D provides routines for creating and managing handle storage objects.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3405"> </A>Q3HandleStorage_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=3406"> </A><A NAME="marker=809"> </A>You can use the <TT CLASS="cv">Q3HandleStorage_New</TT> function to create a new handle storage object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5643"> </A>TQ3StorageObject Q3HandleStorage_New (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Handle handle, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long validSize);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5645"> </A><TT CLASS="cv">handle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3408"> </A>A handle to a buffer in memory, or <TT CLASS="cv">NULL</TT>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5654"> </A><TT CLASS="cv">validSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3409"> </A>The size, in bytes, of the specified buffer.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3410"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3411"> </A>The <TT CLASS="cv">Q3HandleStorage_New</TT> function returns, as its function result, a new handle storage object associated with the buffer specified by the <TT CLASS="cv">handle</TT> and <TT CLASS="cv">validSize</TT> parameters. Your application must not access that buffer until the associated storage object is closed or disposed of. If <TT CLASS="cv">Q3HandleStorage_New</TT> cannot create a new storage object, it returns the value <TT CLASS="cv">NULL</TT>. If you pass the value <TT CLASS="cv">NULL</TT> in the <TT CLASS="cv">handle</TT> parameter, QuickDraw&nbsp;3D allocates a buffer of the specified size and later disposes of that buffer when the associated storage object is closed or disposed of.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3415"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3416"> </A><TT CLASS="cv">kQ3ErrorOutOfMemory</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3417"> </A>Q3HandleStorage_Get</H2><P CLASS="T1.Text1"><A NAME="pgfId=3418"> </A><A NAME="marker=823"> </A>You can use the <TT CLASS="cv">Q3HandleStorage_Get</TT> function to get information about a handle storage object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5665"> </A>TQ3Status Q3HandleStorage_Get (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3StorageObject storage, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Handle *handle, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long *validSize);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5667"> </A><TT CLASS="cv">storage</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3420"> </A>A handle storage object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5676"> </A><TT CLASS="cv">handle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3421"> </A>On entry, a pointer to a handle. On exit, a pointer to a handle to the block of memory associated with the specified storage object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5685"> </A><TT CLASS="cv">validSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3422"> </A>On exit, the size, in bytes, of the block of memory whose address is returned through the <TT CLASS="cv">buffer</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3423"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3424"> </A>The <TT CLASS="cv">Q3HandleStorage_Get</TT> function returns, in the <TT CLASS="cv">handle</TT> and <TT CLASS="cv">validSize</TT> parameters, the handle and size of the block of memory currently associated with the handle storage object specified by the <TT CLASS="cv">storage</TT> parameter. Note that the returned handle is a handle to the storage object's data, not of a <I CLASS="italics">copy</I> of that data.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3425"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3426"> </A><TT CLASS="cv">kQ3ErrorInvalidObjectParameter kQ3ErrorNULLParameter</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3427"> </A>Q3HandleStorage_Set</H2><P CLASS="T1.Text1"><A NAME="pgfId=3428"> </A><A NAME="marker=835"> </A>You can use the <TT CLASS="cv">Q3HandleStorage_Set</TT> function to set information about a handle storage object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5703"> </A>TQ3Status Q3HandleStorage_Set (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3StorageObject storage, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Handle handle, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long validSize);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5705"> </A><TT CLASS="cv">storage</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3430"> </A>A handle storage object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5714"> </A><TT CLASS="cv">handle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3431"> </A>A handle to a contiguous block of memory to be associated with the specified storage object, or <TT CLASS="cv">NULL</TT>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5723"> </A><TT CLASS="cv">validSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3432"> </A>The size, in bytes, of the specified buffer.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3433"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3434"> </A>The <TT CLASS="cv">Q3HandleStorage_Set</TT> function sets the buffer location and size of the handle storage object specified by the <TT CLASS="cv">storage</TT> parameter to the values specified in the <TT CLASS="cv">handle</TT> and <TT CLASS="cv">validSize</TT> parameters. If you pass the value <TT CLASS="cv">NULL</TT> in the <TT CLASS="cv">handle</TT> parameter, QuickDraw&nbsp;3D allocates a buffer of the specified size and later disposes of that buffer when the associated storage object is closed or disposed of. If you pass <TT CLASS="cv">NULL</TT> in <TT CLASS="cv">handle</TT> and 0 in <TT CLASS="cv">validSize</TT>, QuickDraw&nbsp;3D allocates a buffer of a private default size.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3441"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3442"> </A>You must not use <TT CLASS="cv">Q3HandleStorage_Set</TT> with an open handle storage object.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3443"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3445"> </A><TT CLASS="cv">kQ3ErrorInvalidObjectParameter</TT><A NAME="marker=3444"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>