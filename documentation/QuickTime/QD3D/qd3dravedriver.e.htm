<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Writing Public Draw Context Methods</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=50248"> </A>Writing Public Draw Context Methods</H1><P CLASS="T1.Text1"><A NAME="pgfId=53762"> </A><A NAME="marker=53761"> </A>As you've seen, the draw context structure (of type <TT CLASS="cv">TQADrawContext</TT>) contains function pointers to the public draw context methods supported by your drawing engine. These methods are called whenever an application calls one of the public functions provided by QuickDraw&nbsp;3D RAVE. For example, when an application calls the <TT CLASS="cv">QADrawPoint</TT> function for a draw context associated with your drawing engine, your engine's <TT CLASS="cv">TQADrawPoint</TT> method (pointed to by the <TT CLASS="cv">drawPoint</TT> field) is called. The <TT CLASS="cv">TQADrawPoint</TT> method is declared like this:<A NAME="marker=53766"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=64000"> </A>typedef void (*TQADrawPoint) (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQADrawContext *drawContext, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQAVGouraud *v);<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=50640"> </A>A draw context structure is passed as the first parameter to all the public draw context methods you need to define. This allows your methods to find the private data associated with the draw context (which is pointed to by the <TT CLASS="cv">drawPrivate</TT> field).</P><P CLASS="T1.Text1"><A NAME="pgfId=50662"> </A>Notice that the function prototype for a point-drawing method passes the draw context as a <TT CLASS="cv">const</TT> parameter. This indicates that your method should not alter any of the fields of the draw context structure passed to it. Only three draw context methods (namely <TT CLASS="cv">TQASetInt</TT>, <TT CLASS="cv">TQASetFloat</TT>, and <TT CLASS="cv">TQASetPtr</TT>) are allowed to alter the draw context.</P><P CLASS="T1.Text1"><A NAME="pgfId=50679"> </A><A HREF="qd3dravedriver.e.htm#38790" CLASS="XRef">Listing&nbsp;10</A> shows a sample definition for a point-drawing method.</P><P CLASS="L.Listing"><A NAME="pgfId=50680"> </A>Listing&nbsp;10<A NAME="38790"> </A>A <TT CLASS="cv">TQADrawPoint</TT> method</P><CODE CLASS="CvF.CodeFull"><A NAME="pgfId=64004"> </A>void MyDrawPoint (const TQADrawContext *drawContext, const TQAVGouraud *v)<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;MyPrivateData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*myData;&nbsp;&nbsp;&nbsp;&nbsp;/*our actual private data type*/<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;/*Cast generic drawPrivate pointer to our actual private data type.*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;myData = (MyPrivateData *) drawContext-&gt;drawPrivate;<BR>&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;/*Call our z-buffered pixel drawing function with xyz and argb, and<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;also pass it the current zfunction, which is stored in the private draw <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context data structure. Note that this isn't a complete implementation!<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(We should be using kQATag_Width, for example.)*/<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;MyDrawPixelWithZ(v-&gt;x, v-&gt;y, v-&gt;z, v-&gt;a, v-&gt;r, v-&gt;g, v-&gt;b,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myData-&gt;stateVariable[kQATag_ZFunction]);<BR>}<BR></CODE><P CLASS="Note"><A NAME="pgfId=50779"> </A><A NAME="marker=64006"> </A>See <A HREF="qd3dravedriver.47.htm#41790" CLASS="XRef">&quot;Public Draw Context Methods&quot;</A> for complete information on the public draw context methods your drawing engine must define. </P><P CLASS="T1.Text1"><A NAME="pgfId=50787"> </A>Once you've defined the necessary public draw context methods, you need to insert pointers to those methods into a draw context structure. You accomplish this step in your <TT CLASS="cv">TQADrawPrivateNew</TT> method, described in the next section.<A NAME="marker=51461"> </A></P><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>