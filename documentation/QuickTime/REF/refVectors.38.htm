<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Specifying Joins</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>Inside Macintosh: QuickTime Reference</I><P>| <A HREF="refVectors.37.htm">Previous</A> | <A HREF="refVectors.1.htm">Chapter Contents</A> | <A HREF="refVectors.htm">Chapter Top</A> | <A HREF="refVectors.39.htm">Next</A> | <!-- QTnavbar end --><H1 CLASS="H2.Heading2"><A NAME="pgfId=13430"> </A>Specifying Joins</H1><P CLASS="T1.Text1"><A NAME="pgfId=12965"> </A>You specify attributes of joins by including <TT CLASS="cv">kCurveJoinAttributesAtom</TT> and <TT CLASS="cv">kCurveMiterLimitAtom</TT> atoms in a vector data stream. The <TT CLASS="cv">kCurveJoinAttributesAtom</TT> atom specifies the type of join, and the <TT CLASS="cv">kCurveMiterLimitAtom</TT> specifies the miter limit for joins. For more information about join types and miter limits, see <A HREF="refVectors.1c.htm#39870" CLASS="XRef">&quot;Joins&quot;</A>.</P><P CLASS="T1.Text1"><A NAME="pgfId=36328"> </A>As with other atoms that specify path attributes, an attribute value specified by a <TT CLASS="cv">kCurveJoinAttributesAtom</TT> or <TT CLASS="cv">kCurveMiterLimitAtom</TT> atom is used for subsequent paths in the vector data stream until another atom of the same type appears in the stream or the end of the stream is reached.</P><P CLASS="T1.Text1"><A NAME="pgfId=36412"> </A><A HREF="refVectors.38.htm#13844" CLASS="XRef">Listing&nbsp;5</A> shows how to specify a sharp join for an angle.</P><P CLASS="L.Listing"><A NAME="pgfId=12972"> </A>Listing&nbsp;5 <A NAME="13844"> </A>Adding a sharp join to an angle</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43586"> </A>ComponentInstance vectorCodec;<BR>Handle streamH;<BR>Handle pathH;<BR>gxPoint points[3];<BR>Boolean isOnCurve[3];<BR>int i;<BR>long value;<BR><BR>/* open the vector codec component */<BR>OpenADefaultComponent (decompressorComponentType,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kVectorCodecType, &amp;vectorCodec);<BR><BR>/* create a new vector data stream */<BR>CurveCreateVectorStream (vectorCodec, streamH);<BR>value=gxOpenFrameFill;<BR>value=ff(15);<BR>value=gxSharpJoin;<BR>value=gxPositiveInfinity;<BR><BR>/* add an atom to the vector data stream that specifies that <BR>&nbsp;&nbsp;&nbsp;subsequent paths are to be drawn with open frame fill */<BR>CurveAddAtomToVectorStream (ci, kCurveFillTypeAtom, sizeof(long),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;value, streamH);<BR><BR>/* add an atom to the vector data stream that specifies that <BR>&nbsp;&nbsp;&nbsp;subsequent paths are to be drawn with a pen width of 15 */<BR>CurveAddAtomToVectorStream (ci, kCurvePenThicknessAtom, sizeof(Fixed),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;value, streamH);<BR><BR>/* add an atom to the vector data stream that specifies that <BR>&nbsp;&nbsp;&nbsp;subsequent paths are to be drawn with sharp angle joins*/<BR>CurveAddAtomToVectorStream (ci, kCurveJoinAttributesAtom,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sizeof(gxJoinAttribute),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;value, streamH);<BR><BR>/* add an atom to the vector data stream that specifies that <BR>&nbsp;&nbsp;&nbsp;subsequent paths are to have no miter limit for joins */<BR>CurveAddAtomToVectorStream (ci, kCurveMiterLimitAtom, sizeof(Fixed),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;value, streamH);<BR><BR>/* specify the points for the path and whether each one is <BR>&nbsp;&nbsp;&nbsp;on the path */<BR>points[0].x = ff(20);<BR>points[0].y = ff(20);<BR>isOnCurve[0] = TRUE;<BR>points[1].x = ff(250);<BR>points[1].y = ff(60);<BR>isOnCurve[1] = FALSE;<BR>points[2].x = ff(20);<BR>points[2].y = ff(100);<BR>isOnCurve[2] = TRUE;<BR><BR>/* create the path and add the points to it */<BR>CurveNewPath (vectorCodec, &amp;pathH);<BR>for (i = 0; i &lt;= 2; i++)<BR>&nbsp;&nbsp;&nbsp;&nbsp;CurveInsertPointIntoPath (vectorCodec, &amp;points[i], pathH,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, i, isOnCurve[i]);<BR><BR>/* add the path to the vector data stream */<BR>CurveAddPathAtomToVectorStream (vectorCodec, pathH, streamH);<BR><BR>/* mark the end of the vector data stream by adding a <BR>&nbsp;&nbsp;&nbsp;kCurveEndAtom atom to the stream */<BR>CurveAddZeroAtomToVectorStream (vectorCodec, streamH);<BR><BR>/* use the vector codec here to decompress and display the vector data */<BR><BR>/* dispose of stream and path handles when done */<BR>DisposeHandle (streamH);<BR>DisposeHandle (pathH);<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=12974"> </A>Notice that miter limit is set to the constant value <TT CLASS="cv">gxPositiveInfinity</TT>, which indicates the join should be as sharp as necessary.</P><P CLASS="T1.Text1"><A NAME="pgfId=12978"> </A><A HREF="refVectors.38.htm#20854" CLASS="XRef">Figure&nbsp;65</A> shows what is drawn for this vector data stream.</P><P CLASS="Fg.Figure"><A NAME="pgfId=12983"> </A>Figure&nbsp;65 <A NAME="20854"> </A>An angle with a sharp join</P><DIV><IMG SRC="GR3-L-24.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=36369"> </A><A NAME="marker=12984"> </A>If you limit the miter of the sharp join, for example, with the code</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43590"> </A>/* add an atom to the vector data stream that specifies that <BR>&nbsp;&nbsp;&nbsp;subsequent paths are to have no miter limit for joins */<BR>CurveAddAtomToVectorStream (ci, kCurveMiterLimitAtom, sizeof(Fixed),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;value, streamH);<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=12987"> </A>the vector codec limits the distance between the actual corner of the contour as specified in the shape's geometry and the tip of the corner as actually drawn. Since the miter is scaled by the pen width, and the pen width in this example is 15, the vector codec truncates the sharp join 15 points away from the actual corner of the geometry, as shown in <A HREF="refVectors.38.htm#20096" CLASS="XRef">Figure&nbsp;66</A>.<A NAME="marker=12991"> </A><A NAME="marker=12992"> </A></P><P CLASS="Fg.Figure"><A NAME="pgfId=12997"> </A>Figure&nbsp;66 <A NAME="20096"> </A>An angle with a truncated sharp join</P><DIV><IMG SRC="GR3-L-25.gif"></DIV><hr>&#169; 1999 Apple Computer, Inc.<!-- QTnavbar start --><P><I>Inside Macintosh: QuickTime Reference</I><P>| <A HREF="refVectors.37.htm">Previous</A> | <A HREF="refVectors.1.htm">Chapter Contents</A> | <A HREF="refVectors.htm">Chapter Top</A> | <A HREF="refVectors.39.htm">Next</A> | <!-- QTnavbar end --></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>