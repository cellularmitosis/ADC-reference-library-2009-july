<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Draw Contexts</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=44445"> </A>Draw Contexts</H1><P CLASS="T1.Text1"><A NAME="pgfId=44575"> </A><A NAME="marker=51428"> </A>Although a drawing engine may be capable of supporting more than one device, it cannot divide a raster across multiple devices. Instead, every drawing command sent to a drawing engine must be destined for a single device. QuickDraw&nbsp;3D RAVE guarantees this by requiring a calling application to specify a draw context as a parameter for every drawing command. A <B CLASS="bold">draw context</B> is a structure (of type <TT CLASS="cv">TQADrawContext</TT>) that maintains state information and other data associated with a particular drawing engine and device.</P><P CLASS="T1.Text1"><A NAME="pgfId=44587"> </A>As mentioned at the end of the previous section, you need to create several draw contexts if you want to draw into a window that spans several devices. Similarly, you need to create several draw contexts if you want to draw into several different windows on the same device. Each draw context maintains its own state information image buffers and is unaffected by any functions that operate on another draw context.</P><P CLASS="T1.Text1"><A NAME="pgfId=44596"> </A><A NAME="marker=51430"> </A><A NAME="marker=51431"> </A>The state information associated with a draw context is maintained using a large number of <B CLASS="bold">state variables.</B> For example, the background color of a draw context is specified by four state variables, designated by the four identifiers (or <B CLASS="bold">tags</B>) <TT CLASS="cv">kQATag_ColorBG_a</TT>, <TT CLASS="cv">kQATag_ColorBG_r</TT>, <TT CLASS="cv">kQATag_ColorBG_g</TT>, and <TT CLASS="cv">kQATag_ColorBG_b</TT>. See <A HREF="qd3dravedriver.8.htm#18059" CLASS="XRef">&quot;Creating and Configuring a Draw Context&quot;</A>, for some sample code that reads and sets state variables, and <A HREF="qd3dravedriver.1a.htm#24990" CLASS="XRef">&quot;Tags for State Variables&quot;</A>, for a complete list of the available state variables.<A NAME="marker=52223"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=44692"> </A><A NAME="marker=51432"> </A>A hardware device (such as a frame buffer or a video interface) is represented in QuickDraw&nbsp;3D RAVE by a <B CLASS="bold">virtual device,</B> a structure of type <TT CLASS="cv">TQADevice</TT> that determines which one of a variety of types of hardware devices a draw context draws into. On Macintosh computers, QuickDraw&nbsp;3D RAVE supports two kinds of virtual devices: memory devices and graphics devices. A <B CLASS="bold">memory device</B> represents an area of memory, and a <B CLASS="bold">graphics device</B> represents a video device (such as a plug-in video card or built-in video interface) that controls a screen, or an offscreen graphics world (which allows your application to build complex images off the screen before displaying them). In effect, a virtual device specifies the buffers into which all drawing commands associated with a draw context write pixels.<A NAME="marker=51429"> </A></P><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>