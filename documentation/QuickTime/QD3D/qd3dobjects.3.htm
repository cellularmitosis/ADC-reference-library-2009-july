<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> The QuickDraw&nbsp;3D Class Hierarchy</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=3282"> </A>The QuickDraw&nbsp;3D Class Hierarchy</H1><P CLASS="T1.Text1"><A NAME="pgfId=3334"> </A><A NAME="marker=6092"> </A><B CLASS="bold"></B><A NAME="marker=3327"> </A>All QuickDraw&nbsp;3D classes are arranged in the <B CLASS="bold">QuickDraw&nbsp;3D class hierarchy,</B> a hierarchical structure that provides for inheritance and overriding of class data and methods.<B CLASS="bold"> </B><A HREF="qd3dobjects.3.htm#17524" CLASS="XRef">Figure&nbsp;5</A> illustrates the top levels of the QuickDraw&nbsp;3D class hierarchy.</P><P CLASS="Note"><A NAME="pgfId=3356"> </A><A HREF="qd3dobjects.3.htm#17524" CLASS="XRef">Figure&nbsp;5</A> does not show the entire QuickDraw&nbsp;3D class hierarchy. </P><P CLASS="Fg.Figure"><A NAME="pgfId=3375"> </A>Figure&nbsp;5<A NAME="17524"> </A>The top levels of the QuickDraw&nbsp;3D class hierarchy</P><DIV><IMG SRC="qd3dobjects-1.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=3192"> </A>Any particular class in the QuickDraw&nbsp;3D class hierarchy can be a parent class, a child class, or both. A <B CLASS="bold">parent class</B> is a class that is immediately above some other class in the class hierarchy. A <B CLASS="bold">child class</B> is a class that has a parent. A&nbsp;child class that has no children is a <B CLASS="bold">leaf class.</B></P><P CLASS="T1.Text1"><A NAME="pgfId=13966"> </A>A child class can either inherit or override the data and methods of its parent class. By default, a child class <B CLASS="bold">inherits</B> data and methods from its parent (that is, the data and methods of the parent also apply to the child). Occasionally, the child class <B CLASS="bold">overrides</B> the data or methods of its parent (that is, it defines data or methods to replace those of the parent class).</P><P CLASS="T1.Text1"><A NAME="pgfId=3212"> </A>The following sections briefly describe the classes and subclasses of the QuickDraw&nbsp;3D class hierarchy. You can find complete information on these classes in the remainder of this book.</P><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=3196"> </A>QuickDraw&nbsp;3D Objects</H2><P CLASS="T1.Text1"><A NAME="pgfId=3200"> </A>At the very top of the QuickDraw&nbsp;3D class hierarchy is the common root of all QuickDraw&nbsp;3D objects, the class <TT CLASS="cv">TQ3Object</TT>.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=20947"> </A>typedef struct TQ3ObjectPrivate&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*TQ3Object;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3203"> </A><A NAME="marker=20949"> </A>The <TT CLASS="cv">TQ3Object</TT> class provides methods for all its members, including dispose, duplicate, draw, and file I/O methods. For example, you dispose of any QuickDraw&nbsp;3D object by calling the function <TT CLASS="cv">Q3Object_Dispose</TT>. Similarly, you can duplicate any QuickDraw&nbsp;3D object by calling <TT CLASS="cv">Q3Object_Duplicate</TT>. It's important to understand that the methods defined at the root level of the QuickDraw&nbsp;3D class hierarchy may be applied to any object in the class hierarchy, regardless of how far removed from the root level it may be. For instance, if the variable <TT CLASS="cv">mySpotLight</TT> contains a reference to a spot light, then the code <TT CLASS="cv">Q3Object_Dispose(mySpotLight)</TT> disposes of that light.</P><P CLASS="Note"><A NAME="pgfId=3430"> </A>Actually, using <TT CLASS="cv">Q3Object_Dispose</TT> to dispose of a spot light simply reduces the light's <I CLASS="italics">reference count</I> by 1. (This is because a light is a type of shared object.) The light is not disposed of until its reference count falls to 0. See <A HREF="qd3dobjects.4.htm#23868" CLASS="XRef">&quot;Reference Counts&quot;</A> for complete details on reference counts. </P><P CLASS="T1.Text1"><A NAME="pgfId=3479"> </A>The methods defined for all QuickDraw&nbsp;3D objects begin with the prefix <TT CLASS="cv">Q3Object</TT>. Here are the root level methods defined for all objects:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=20953"> </A>Q3Object_Dispose<BR>Q3Object_Duplicate<BR>Q3Object_Submit<BR>Q3Object_IsDrawable<BR>Q3Object_GetType<BR>Q3Object_GetLeafType<BR>Q3Object_IsType<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3548"> </A>You'll use the <TT CLASS="cv">Q3Object_GetType</TT>, <TT CLASS="cv">Q3Object_GetLeafType</TT>, and <TT CLASS="cv">Q3Object_IsType</TT> functions to determine the type or leaf type of an object. See <A HREF="qd3dobjects.6.htm#22650" CLASS="XRef">&quot;Determining the Type of a QuickDraw&nbsp;3D Object&quot;</A> for further information about object types and leaf types.</P><P CLASS="T1.Text1"><A NAME="pgfId=3572"> </A>You'll use the <TT CLASS="cv">Q3Object_Submit</TT> function to submit a QuickDraw&nbsp;3D object for various operations. To <B CLASS="bold">submit</B> an object is to make an object eligible for rendering, picking, writing, or bounding box or sphere calculation. Submission is always done in a loop, known as a <B CLASS="bold">submitting loop.</B> For example, you submit an object for rendering by calling the <TT CLASS="cv">Q3Object_Submit</TT> function inside of a submitting loop. See <A HREF="qd3dintroduction.11.htm#11412" CLASS="XRef">&quot;Rendering a Model&quot;</A> for complete information on submitting loops.</P></DIV><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=3484"> </A><A NAME="40669"> </A>QuickDraw&nbsp;3D Object Subclasses</H2><P CLASS="T1.Text1"><A NAME="pgfId=2825"> </A>There are four subclasses of the <TT CLASS="cv">TQ3Object</TT> class: shared objects, element objects, view objects, and pick objects.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=20959"> </A>typedef TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ElementObject;<BR>typedef TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3PickObject;<BR>typedef TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3SharedObject;<BR>typedef TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3389"> </A>An <B CLASS="bold">element object</B> (or, more briefly, an <B CLASS="bold">element</B>) is any QuickDraw&nbsp;3D object that can be part of a set. Elements are not shared and hence have no reference count; they are always removed from memory whenever they are disposed of. Element objects are stored in sets (objects of type <TT CLASS="cv">TQ3SetObject</TT>), which generally store such information as colors, positions, or application-defined data.<A NAME="marker=3390"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3394"> </A>A <B CLASS="bold">pick object</B> (or, more briefly, a <B CLASS="bold">pick</B>) is a QuickDraw&nbsp;3D object that is used to specify and return information related to picking (that is, selecting objects in a model that are close to a specified geometric object). In general, you'll use pick objects to retrieve data about objects selected by the user in a view.<A NAME="marker=3395"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3287"> </A><A NAME="marker=3283"> </A>A <B CLASS="bold">shared object</B> is a QuickDraw&nbsp;3D object that may be referenced by many objects or the application at the same time. For example, a particular renderer can be associated with several views. Similarly, a single pixmap can be used as a texture for several different objects in a model. The <TT CLASS="cv">TQ3SharedObject</TT> class overrides the dispose method of the <TT CLASS="cv">TQ3Object</TT> class by using a <B CLASS="bold">reference count</B> to keep track of the number of times an object is being shared. When a shared object is referred to by some other object (for example, when a renderer is associated with a view), the reference count is incremented, and whenever a shared object is disposed of, the reference count is decremented. A shared object is not removed from memory until its reference count falls to 0.<A NAME="marker=3291"> </A><A NAME="marker=3292"> </A></P><P CLASS="Note"><A NAME="pgfId=3293"> </A>For more information on reference counts, see <A HREF="qd3dobjects.4.htm#23868" CLASS="XRef">&quot;Reference Counts&quot;</A>. </P><P CLASS="T1.Text1"><A NAME="pgfId=3300"> </A>A <B CLASS="bold">view object</B> (or more briefly, a <B CLASS="bold">view</B>) is a type of QuickDraw&nbsp;3D object used to collect state information that controls the appearance and position of objects at the time of rendering. A view binds together geometric objects in a model and other drawable QuickDraw&nbsp;3D objects to produce a coherent image. A view is essentially a collection of a single camera, a (possibly empty) group of lights, a draw context, a renderer, styles, and attributes.<A NAME="marker=3304"> </A></P></DIV><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=3414"> </A>Shared Object Subclasses</H2><P CLASS="T1.Text1"><A NAME="pgfId=3416"> </A><A NAME="marker=3415"> </A>There are many subclasses of the <TT CLASS="cv">TQ3SharedObject</TT> class.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=20965"> </A>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttachmentObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ControllerStateObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3FileObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3RendererObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3SetObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShapeObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShapePartObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3StorageObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3StringObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TextureObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TrackerObject;<BR>typedef TQ3SharedObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=9376"> </A>Attachment objects and texture objects are used in the QuickDraw&nbsp;3D shading architecture to provide shading in a model. See the chapter <A HREF="qd3dshading.htm#20942" CLASS="XRef">&quot;Shader Objects&quot;</A> for information about these types of objects.<A NAME="marker=9380"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3430"> </A>Controller state objects and tracker objects are used to support user interaction with the objects in a model. See the chapter <A HREF="qd3dpointdevmgr.htm#30605" CLASS="XRef">&quot;Pointing Device Manager&quot;</A> for complete information about these types of objects.<A NAME="marker=9387"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3439"> </A>A <B CLASS="bold">draw context object</B> (or more briefly, a <B CLASS="bold">draw context</B>) is a QuickDraw&nbsp;3D object that maintains information specific to a particular window system or drawing destination.<A NAME="marker=3440"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3441"> </A>A <B CLASS="bold">file object</B> (or, more briefly, a <B CLASS="bold">file</B>) is used to access disk- or memory-based data stored in a container. A file object serves as the interface between the metafile and the storage object.<A NAME="marker=3442"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3445"> </A>A <B CLASS="bold">renderer object</B> (or, more briefly, a <B CLASS="bold">renderer</B>) is used to render a model--that is, to create an image from a view and a model. A renderer controls various aspects of the model and the resulting image, such as the parts of objects that are drawn (for example, only the edges or filled faces).<A NAME="marker=3446"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3447"> </A>A <B CLASS="bold">set object</B> (or, more briefly, a <B CLASS="bold">set</B>) is a collection of zero or more elements, each of which has both an element type and some associated element data. Sets may contain only one element of a given element type.<A NAME="marker=3448"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3452"> </A>A <B CLASS="bold">shape object</B> (or, more briefly, a <B CLASS="bold">shape</B>) is a type of QuickDraw&nbsp;3D object that affects what or how a renderer renders an object in a view. For example, a light is a shape object because it affects the illumination of the objects in a model. See <A HREF="qd3dobjects.3.htm#33998" CLASS="XRef">&quot;Shape Object Subclasses&quot;</A> for a description of the available shapes.<A NAME="marker=3456"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3457"> </A>A <B CLASS="bold">shape part object</B> (or, more briefly, a <B CLASS="bold">shape part</B>) is a distinguishable part of a shape. For example, a mesh (which is a geometric object and hence a shape object) can be distinguished into faces, edges, and vertices. When a user selects some part of a mesh, you can call shape part routines to determine what part of the mesh was selected. See the chapter <A HREF="qd3dpicking.htm#15462" CLASS="XRef">&quot;Pick Objects&quot;</A> for more information about shape parts and mesh parts.<A NAME="marker=3461"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3462"> </A>A <B CLASS="bold">storage object</B> represents any piece of storage in a computer (for example, a file on disk, an area of memory, or some data on the Clipboard).<A NAME="marker=3463"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3467"> </A>A <B CLASS="bold">string object</B> (or, more briefly, a <B CLASS="bold">string</B>) is a QuickDraw&nbsp;3D object that contains a sequence of characters. Strings can be referenced multiple times to maintain common descriptive information.<A NAME="marker=3468"> </A><A NAME="marker=3469"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=5875"> </A>A <B CLASS="bold">view hints object</B> (or, more briefly, a <B CLASS="bold">view hint</B>) is a QuickDraw&nbsp;3D object in a metafile that gives hints about how to render a scene. You can use that information to configure a view object, or you can choose to ignore it.<A NAME="marker=5876"> </A></P></DIV><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=3470"> </A>Set Object Subclasses</H2><P CLASS="T1.Text1"><A NAME="pgfId=3471"> </A>There is one subclass of the <TT CLASS="cv">TQ3SetObject</TT> class, the attribute set.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=20971"> </A>typedef TQ3SetObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet;<BR></CODE></DIV><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=3481"> </A><A NAME="marker=20973"> </A><A NAME="33998"> </A>Shape Object Subclasses</H2><P CLASS="T1.Text1"><A NAME="pgfId=3483"> </A><A NAME="marker=3482"> </A>There are numerous subclasses of the <TT CLASS="cv">TQ3ShapeObject</TT> class.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=20977"> </A>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject;<BR>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject;<BR>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject;<BR>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LightObject;<BR>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ReferenceObject;<BR>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderObject;<BR>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3StyleObject;<BR>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject;<BR>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3UnknownObject;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3485"> </A>A <B CLASS="bold">camera object</B> (or, more briefly, a <B CLASS="bold">camera</B>) is used to define a point of view, a range of visible objects, and a method of projection for generating a two-dimensional image of those objects from a three-dimensional model.<A NAME="marker=3486"> </A><A NAME="marker=3487"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3491"> </A>A <B CLASS="bold">geometric object</B> is a type of QuickDraw&nbsp;3D object that describes a particular kind of drawable shape, such as a triangle or a mesh. QuickDraw&nbsp;3D defines many types of primitive geometric objects. See the chapter <A HREF="qd3dgeometry.htm#25217" CLASS="XRef">&quot;Geometric Objects&quot;</A> for a complete description of the primitive geometric objects.<A NAME="marker=3498"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3502"> </A>A <B CLASS="bold">group object</B> (or, more briefly, a <B CLASS="bold">group</B>) is a type of QuickDraw&nbsp;3D object that you can use to collect objects together into lists or hierarchical models.<A NAME="marker=3503"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3507"> </A>A <B CLASS="bold">light object</B> (or, more briefly, a <B CLASS="bold">light</B>) is a type of QuickDraw&nbsp;3D object that you can use to provide illumination to the surfaces in a scene.<A NAME="marker=3508"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=9580"> </A>A <B CLASS="bold">reference object</B> contains a reference to an object in a file object. Currently, however, there are no functions provided by QuickDraw&nbsp;3D that you can use to create or manipulate reference objects.<A NAME="marker=9584"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3512"> </A><B CLASS="bold">Shader objects</B> are used in the QuickDraw&nbsp;3D shading architecture to provide shading in a model. See the chapter <A HREF="qd3dshading.htm#20942" CLASS="XRef">&quot;Shader Objects&quot;</A> for information about these types of objects.<A NAME="marker=3516"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3520"> </A>A <B CLASS="bold">style object</B> (or more briefly, a <B CLASS="bold">style</B>) is a type of QuickDraw&nbsp;3D object that determines some of the basic characteristics of the renderer used to render the curves and surfaces in a scene.<A NAME="marker=3521"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3522"> </A>A <B CLASS="bold">transform object</B> (or, more briefly, a <B CLASS="bold">transform</B>)<B CLASS="bold"> </B>is an object that you can use to modify or transform the appearance or behavior of a QuickDraw&nbsp;3D object. You can use transforms to alter the coordinate system containing geometric shapes, thereby permitting objects to be repositioned and reoriented in space.<A NAME="marker=3526"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=6435"> </A>An <B CLASS="bold">unknown object</B> is created when QuickDraw&nbsp;3D encounters data it doesn't recognize while reading objects from a metafile. (This might happen, for instance, if you application reads a metafile created by another application that has defined a custom attribute or object type.) You cannot create an unknown object explicitly, but QuickDraw&nbsp;3D provides routines that you can use to look at the contents of an unknown object.<A NAME="marker=6439"> </A></P></DIV><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=3535"> </A>Group Object Subclasses</H2><P CLASS="T1.Text1"><A NAME="pgfId=3536"> </A>There is only one subclass of the <TT CLASS="cv">TQ3GroupObject</TT> class: the display group object.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=20983"> </A>typedef TQ3GroupObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DisplayGroupObject;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3540"> </A>A <B CLASS="bold">display group</B> is a group of objects that are drawable.<A NAME="marker=3538"> </A><A NAME="marker=3539"> </A></P></DIV><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=3541"> </A>Shader Object Subclasses</H2><P CLASS="T1.Text1"><A NAME="pgfId=3542"> </A>There are several subclasses of the <TT CLASS="cv">TQ3ShaderObject</TT> class.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=20989"> </A>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3SurfaceShaderObject;<BR>typedef TQ3ShapeObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3IlluminationShaderObject;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=7023"> </A>Surface shader objects and illumination shader objects are used in the QuickDraw&nbsp;3D shading architecture to provide shading in a model. See the chapter <A HREF="qd3dshading.htm#20942" CLASS="XRef">&quot;Shader Objects&quot;</A> for information about these types of objects.<A NAME="marker=8347"> </A></P></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>