<!-- legacy work start --><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"        "http://www.w3.org/TR/html4/loose.dtd"><!-- legacy work end --><HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><TITLE>Compressing and Expanding Audio Data (deprecated)</title><!-- legacy work start -->        <META NAME="Generator" CONTENT="manual">        <META http-equiv="content-type" CONTENT="text/html;charset=utf-8">        <META NAME = "Copyright" CONTENT="Copyright 2007 Apple Inc. All Rights Reserved.">        <META NAME="IndexTitle" CONTENT="Sound Input Manager (Not Recommended)">        <meta name="xcode-display" content="render">        <LINK REL="stylesheet" TYPE="text/css" HREF="../../../Resources/CSS/frameset_styles.css"> <!-- before submitting, globally replace ".." with "developer.apple.com" -->        <script type="text/javascript" language="JavaScript" src="../../../Resources/JavaScript/page.js"></script><!-- legacy work end --></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>Inside Macintosh: Sound</I><P>| <A target="doc" HREF="imsoundmgr.57.htm">Previous</A> | <A target="doc" HREF="imsoundmgr.1.htm">Chapter contents</A> | <A target="doc" HREF="imsoundmgr.htm">Chapter top</A> | <A target="doc" HREF="imsoundmgr.51.htm">Section top</A> | <A target="doc" HREF="imsoundmgr.59.htm">Next</a> | <!-- QTnavbar end --><!-- legacy work start --><script type="text/javascript"> placeWatermark()</script><div style="width:100%; position:fixed;"><div align="center" id="watermark" style="position: relative; margin-left:auto; margin-right:auto; z-index:20; width:500px;"><div class="legacybox" style="position: relative;"><h1>Legacy Document<span class=closebutton><a href="javascript:closeWatermark()"><img src="../../../Resources/Images/closebutton.png" width="14" height="14" border="0" align="top" alt="close button"></a></span></h1><p><b>Important:</b><i>Sound Input Manager</i> is deprecated as of Mac OS X v10.5. For new audio development in Mac OS X, use Core Audio. See the <a href="http://developer.apple.com/referencelibrary/MusicAudio/" target="_top">Audio</a> page in the ADC Reference Library.</p></div></div></div><!-- legacy work end --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3250"> </A>Compressing and Expanding Audio Data</H1><P CLASS="T0.Text0"><A NAME="pgfId=2132"> </A><A NAME="marker=1508"> </A>You can use the procedures <TT CLASS="cv">Comp3to1</TT> and <TT CLASS="cv">Comp6to1</TT> to compress sound data. You can use the procedures <TT CLASS="cv">Exp1to3</TT> and <TT CLASS="cv">Exp1to6</TT> to expand compressed audio data.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=2234"> </A>Comp3to1<A NAME="marker=853"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=2235"> </A>You can use the <TT CLASS="cv">Comp3to1</TT> procedure to compress sound data at a ratio of 3:1.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12772"> </A>PROCEDURE Comp3to1 (inBuffer: Ptr; outBuffer: Ptr; cnt: LongInt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inState: Ptr; outState: Ptr; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;numChannels: LongInt; whichChannel: LongInt);<BR></CODE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12774"> </A><TT CLASS="cv">inBuffer</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2298"> </A>A pointer to a buffer of samples to be compressed.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12783"> </A><TT CLASS="cv">outBuffer</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2299"> </A>A pointer to a buffer where the samples are to be written.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12792"> </A><TT CLASS="cv">cnt</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2300"> </A>The number of samples to compress.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12801"> </A><TT CLASS="cv">inState</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2301"> </A>A pointer to a 128-byte buffer from which the input state of the algorithm is read, or <TT CLASS="cv">NIL</TT>. To initialize the algorithm, this buffer should be filled with zeros.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12810"> </A><TT CLASS="cv">outState</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2302"> </A>A pointer to a 128-byte buffer to which the output state of the algorithm is written, or <TT CLASS="cv">NIL</TT>. This buffer might be the same as that specified by the <TT CLASS="cv">inState</TT> parameter.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12819"> </A><TT CLASS="cv">numChannels</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2293"> </A> The number of channels in the buffer pointed to by the <TT CLASS="cv">inBuffer</TT> parameter.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12829"> </A><TT CLASS="cv">whichChannel</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2304"> </A> The channel to compress, when <TT CLASS="cv">numChannels</TT> is greater than 1. This parameter must be in the range of 1 to <TT CLASS="cv">numChannels</TT>.</BLOCKQUOTE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2233"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3442"> </A>The <TT CLASS="cv">Comp3to1</TT> procedure compresses <TT CLASS="cv">cnt</TT> samples of sound stored in the buffer specified by <TT CLASS="cv">inBuffer</TT> and places the result in the buffer specified by <TT CLASS="cv">outBuffer</TT>, which must be at least <TT CLASS="cv">cnt/3</TT> bytes in size. The original samples can be monophonic or include multiple channels of sound, but they must be in 8-bit offset binary format. Also, if <TT CLASS="cv">numChannels</TT> is greater than 1, then the noncompressed sound must be stored in interleaved format on a sample basis.</P><P CLASS="T1.Text1"><A NAME="pgfId=3444"> </A>If you compress polyphonic sound, you retain only one channel of sound, which you specify in the <TT CLASS="cv">whichChannel</TT> parameter. Thus, if you use the <TT CLASS="cv">Comp3to1</TT> procedure to&nbsp;compress three-channel sound, you will have effectively compressed the sound to one-ninth its original size in bytes. To retain multiple channels of sound after compression, you must call the <TT CLASS="cv">Comp3to1</TT> procedure for each channel to be compressed and then interleave the compressed sound data on a packet basis.</P><P CLASS="T1.Text1"><A NAME="pgfId=3441"> </A>The <TT CLASS="cv">Comp3to1</TT> procedure compresses every 48 bytes of sound data to exactly 16 bytes of compressed sound data and compresses remaining bytes to no more than one-third the original size.</P><P CLASS="T1.Text1"><A NAME="pgfId=3443"> </A>You can use the <TT CLASS="cv">inState</TT> and <TT CLASS="cv">outState</TT> parameters to allow the MACE compression routines to preserve information about algorithms across calls. Alternatively, you may pass <TT CLASS="cv">NIL</TT> state buffers and let the Sound Manager allocate the buffers internally.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3451"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3446"> </A>Because the <TT CLASS="cv">Comp3to1</TT> procedure might allocate and dispose of memory, you should not call it at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3447"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3448"> </A>The trap macro and routine selector for the <TT CLASS="cv">Comp3to1</TT> procedure are</P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=3450"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4223"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=2131"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=3251"> </A>$00040010<A NAME="marker=184"> </A></P></TD></TR></TABLE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3449"> </A>Comp6to1<A NAME="marker=185"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=3454"> </A>You can use the <TT CLASS="cv">Comp6to1</TT> procedure to compress sound data at a ratio of 6:1.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12841"> </A>PROCEDURE Comp6to1 (inBuffer: Ptr; outBuffer: Ptr; cnt: LongInt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inState: Ptr; outState: Ptr; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;numChannels: LongInt; whichChannel: LongInt);<BR></CODE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12843"> </A><TT CLASS="cv">inBuffer</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3456"> </A>A pointer to a buffer of samples to be compressed.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12852"> </A><TT CLASS="cv">outBuffer</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3457"> </A>A pointer to a buffer where the samples are to be written.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12861"> </A><TT CLASS="cv">cnt</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3458"> </A>The number of samples to compress.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12870"> </A><TT CLASS="cv">inState</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3327"> </A>A pointer to a 128-byte buffer from which the input state of the algorithm is read, or <TT CLASS="cv">NIL</TT>. To initialize the algorithm, this buffer should be filled with zeros.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12879"> </A><TT CLASS="cv">outState</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3459"> </A>A pointer to a 128-byte buffer to which the output state of the algorithm is written, or <TT CLASS="cv">NIL</TT>. This buffer might be the same as that specified by the <TT CLASS="cv">inState</TT> parameter.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12888"> </A><TT CLASS="cv">numChannels</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3460"> </A> The number of channels in the buffer pointed to by the <TT CLASS="cv">inBuffer</TT> parameter.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12898"> </A><TT CLASS="cv">whichChannel</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3461"> </A> The channel to compress, when <TT CLASS="cv">numChannels</TT> is greater than 1. This parameter must be in the range of 1 to <TT CLASS="cv">numChannels</TT>.</BLOCKQUOTE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3463"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3464"> </A>The <TT CLASS="cv">Comp6to1</TT> procedure compresses <TT CLASS="cv">cnt</TT> samples of sound stored in the buffer specified by <TT CLASS="cv">inBuffer</TT> and places the result in the buffer specified by <TT CLASS="cv">outBuffer</TT>, which must be at least <TT CLASS="cv">cnt/6</TT> bytes in size. The <TT CLASS="cv">Comp6to1</TT> procedure works much like the <TT CLASS="cv">Comp3to1</TT> procedure, but compresses every 48 bytes of sound data to exactly 8 bytes of compressed sound data and compresses remaining bytes to no more than one-sixth the original size.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3470"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3471"> </A>Because the <TT CLASS="cv">Comp6to1</TT> procedure might allocate and dispose of memory, you should not call it at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3472"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3473"> </A>The trap macro and routine selector for the <TT CLASS="cv">Comp6to1</TT> procedure are</P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=3475"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4225"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=3453"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4219"> </A>$000C0010<A NAME="marker=1509"> </A><A NAME="marker=854"> </A></P></TD></TR></TABLE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3474"> </A>Exp1to3<A NAME="marker=182"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=2306"> </A><A NAME="marker=1044"> </A>You can use the <TT CLASS="cv">Exp1to3</TT> procedure to expand a buffer of sound samples you previously have compressed with the <TT CLASS="cv">Comp3to1</TT> procedure.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12910"> </A>PROCEDURE Exp1to3 (inBuffer: Ptr; outBuffer: Ptr; cnt: LongInt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inState: Ptr; outState: Ptr; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; numChannels: LongInt; whichChannel: LongInt);<BR></CODE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12912"> </A><TT CLASS="cv">inBuffer</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2307"> </A>A pointer to a buffer of packets to be expanded.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12921"> </A><TT CLASS="cv">outBuffer</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2309"> </A>A pointer to a buffer where the expanded samples will be written.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12930"> </A><TT CLASS="cv">cnt</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2310"> </A>The number of packets to expand.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12939"> </A><TT CLASS="cv">inState</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2311"> </A>A pointer to a 128-byte buffer from which the input state of the algorithm is read, or <TT CLASS="cv">NIL</TT>. To initialize the algorithm, this buffer should be filled with zeros.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12948"> </A><TT CLASS="cv">outState</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2312"> </A>A pointer to a 128-byte buffer to which the output state of the algorithm is written, or <TT CLASS="cv">NIL</TT>. This buffer might be the same as that specified by the <TT CLASS="cv">inState</TT> parameter.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12957"> </A><TT CLASS="cv">numChannels</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2393"> </A> The number of channels in the buffer pointed to by the <TT CLASS="cv">inBuffer</TT> parameter.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12971"> </A><TT CLASS="cv">whichChannel</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3462"> </A> The channel to expand, when <TT CLASS="cv">numChannels</TT> is greater than 1. This parameter must be in the range of 1 to <TT CLASS="cv">numChannels</TT>.</BLOCKQUOTE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3468"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3469"> </A>The <TT CLASS="cv">Exp1to3</TT> procedure expands <TT CLASS="cv">cnt</TT> packets of sound stored in the buffer specified by <TT CLASS="cv">inBuffer</TT> and places the result in the buffer specified by <TT CLASS="cv">outBuffer</TT>, whose size must be at least <TT CLASS="cv">cnt</TT> packets * 2 bytes per packet * 3, or <TT CLASS="cv">cnt * 6</TT> bytes. If <TT CLASS="cv">numChannels</TT> is greater than 1, then the compressed sound must be stored in interleaved format on a packet basis.</P><P CLASS="T1.Text1"><A NAME="pgfId=3476"> </A>If you expand compressed sound data that includes multiple sound channels, you retain only one channel of sound, which you specify in the <TT CLASS="cv">whichChannel</TT> parameter. Thus, if you use the <TT CLASS="cv">Exp1to3</TT> procedure to expand three-channel sound, the output buffer will be the same size as the input buffer since only one channel is retained. To retain multiple channels of sound after expansion, you must call the <TT CLASS="cv">Exp1to3</TT> procedure for each channel to be expanded and then interleave the expanded sound data on a sample basis.</P><P CLASS="T1.Text1"><A NAME="pgfId=3477"> </A>The <TT CLASS="cv">Exp1to3</TT> procedure expands every packet of sampled-sound data to exactly 6 bytes.</P><P CLASS="T1.Text1"><A NAME="pgfId=3478"> </A>You can use the <TT CLASS="cv">inState</TT> and <TT CLASS="cv">outState</TT> parameters to allow the MACE compression routines to preserve information about algorithms across calls. Alternatively, you may pass <TT CLASS="cv">NIL</TT> state buffers and let the Sound Manager allocate the buffers internally.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3481"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3482"> </A>Because the <TT CLASS="cv">Exp1to3</TT> procedure might allocate memory, you should not call it at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3483"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3484"> </A>The trap macro and routine selector for the <TT CLASS="cv">Exp1to3</TT> procedure are</P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=3486"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4227"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=2236"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4220"> </A>$00080010<A NAME="marker=186"> </A></P></TD></TR></TABLE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3485"> </A>Exp1to6<A NAME="marker=187"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=3488"> </A>You can use the <TT CLASS="cv">Exp1to6</TT> procedure to expand a buffer of sound samples you previously have compressed with the <TT CLASS="cv">Comp6to1</TT> procedure.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12983"> </A>PROCEDURE Exp1to6 (inBuffer: Ptr; outBuffer: Ptr; cnt: LongInt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inState: Ptr; outState: Ptr; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; numChannels: LongInt; whichChannel: LongInt);<BR></CODE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12985"> </A><TT CLASS="cv">inBuffer</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3490"> </A>A pointer to a buffer of packets to be expanded.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12994"> </A><TT CLASS="cv">outBuffer</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3491"> </A>A pointer to a buffer where the expanded samples will be written.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=13003"> </A><TT CLASS="cv">cnt</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3492"> </A>The number of packets to expand.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=13012"> </A><TT CLASS="cv">inState</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3467"> </A>A pointer to a 128-byte buffer from which the input state of the algorithm is read, or <TT CLASS="cv">NIL</TT>. To initialize the algorithm, this buffer should be filled with zeros.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=13021"> </A><TT CLASS="cv">outState</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3493"> </A>A pointer to a 128-byte buffer to which the output state of the algorithm is written, or <TT CLASS="cv">NIL</TT>. This buffer might be the same as that specified by the <TT CLASS="cv">inState</TT> parameter.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=13030"> </A><TT CLASS="cv">numChannels</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3494"> </A> The number of channels in the buffer pointed to by the <TT CLASS="cv">inBuffer</TT> parameter.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=13040"> </A><TT CLASS="cv">whichChannel</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3495"> </A> The channel to expand, when <TT CLASS="cv">numChannels</TT> is greater than 1. This parameter must be in the range of 1 to <TT CLASS="cv">numChannels</TT>.</BLOCKQUOTE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3497"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3498"> </A>The <TT CLASS="cv">Exp1to6</TT> procedure expands <TT CLASS="cv">cnt</TT> packets of sound stored in the buffer specified by <TT CLASS="cv">inBuffer</TT> and places the result in the buffer specified by <TT CLASS="cv">outBuffer</TT>, whose size must be at least <TT CLASS="cv">cnt</TT> packets * 1 byte per packet * 6, or <TT CLASS="cv">cnt * 6</TT> bytes. If <TT CLASS="cv">numChannels</TT> is greater than 1, then the compressed sound must be stored in interleaved format on a packet basis. The <TT CLASS="cv">Exp1to6</TT> procedure works just like the <TT CLASS="cv">Exp1to3</TT> procedure, but expands 1-byte packets rather than 2-byte packets.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3504"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3505"> </A>Because the <TT CLASS="cv">Exp1to6</TT> procedure might allocate memory, you should not call it at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3506"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3507"> </A>The trap macro and routine selector for the <TT CLASS="cv">Exp1to6</TT> procedure are<A NAME="marker=1045"> </A><A NAME="marker=1510"> </A></P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=3509"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4229"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=3487"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4221"> </A>$00100010<A NAME="marker=855"> </A></P></TD></TR></TABLE></DIV></DIV><hr>&#169; 1999 Apple Computer, Inc.<!-- QTnavbar start --><P><I>Inside Macintosh: Sound</I><P>| <A target="doc" HREF="imsoundmgr.57.htm">Previous</A> | <A target="doc" HREF="imsoundmgr.1.htm">Chapter contents</A> | <A target="doc" HREF="imsoundmgr.htm">Chapter top</A> | <A target="doc" HREF="imsoundmgr.51.htm">Section top</A> | <A target="doc" HREF="imsoundmgr.59.htm">Next</a> | <!-- QTnavbar end --><!-- legacy work start --><script type="text/javascript"> placeWatermark()</script><div style="width:100%; position:fixed;"><div align="center" id="watermark" style="position: relative; margin-left:auto; margin-right:auto; z-index:20; width:500px;"><div class="legacybox" style="position: relative;"><h1>Legacy Document<span class=closebutton><a href="javascript:closeWatermark()"><img src="../../../Resources/Images/closebutton.png" width="14" height="14" border="0" align="top" alt="close button"></a></span></h1><p><b>Important:</b><i>Sound Input Manager</i> is deprecated as of Mac OS X v10.5. For new audio development in Mac OS X, use Core Audio. See the <a href="http://developer.apple.com/referencelibrary/MusicAudio/" target="_top">Audio</a> page in the ADC Reference Library.</p></div></div></div><!-- legacy work end --></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>