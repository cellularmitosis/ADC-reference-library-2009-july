{\rtf1\ansi\ansicpg1252\cocoartf927
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;}
\deftab720
\pard\pardeftab720\ql\qnatural

\f0\fs24 \cf0 Quartz 2D Shadings demonstrates how to create gradient fills using both the new 
\f1\fs20 CGGradientRef
\f0\fs24  objects introduced in Mac OS X 10.5 and using the older 
\f1\fs20 CGShadingRef
\f0\fs24  and 
\f1\fs20 CGFunctionRef
\f0\fs24  objects available since Mac OS X 10.2. In this sample, both object types are used to obtain identical results, demonstrating how 
\f1\fs20 CGGradientRef
\f0\fs24  objects are easier to use than 
\f1\fs20 CGShadingRef
\f0\fs24  objects. In general 
\f1\fs20 CGShadingRef
\f0\fs24  objects are more flexible, capable of creating shadings that a 
\f1\fs20 CGGradientRef
\f0\fs24  object cannot. If you want a linear interpolation of the colors of the gradient, then it is much simpler to use a 
\f1\fs20 CGGradientRef
\f0\fs24  object. If you require non-linear interpolation or other forms of custom blending, then 
\f1\fs20 CGShadingRef 
\f0\fs24 objects will allow you to express such gradients, as they use a user specified 
\f1\fs20 CGFunctionRef
\f0\fs24  object to generate their colors.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ql\qnatural\pardirnatural
\cf0 \

\f1 WindowController.h/m
\f0 \
Implements a controller object to marshall settings from the UI controls into the 
\f1\fs20 ShadingView
\f0\fs24 , 
\f1\fs20 GradientView
\f0\fs24  and 
\f1\fs20 PreviewView
\f0\fs24  where applicable. \
Of interest are the following methods:\

\f1\fs20 -recalculateGradients
\f0\fs24 \
	updates the 
\f1\fs20 CGFunctionRef
\f0\fs24  object (for the 
\f1\fs20 ShadingView
\f0\fs24 ) and the 
\f1\fs20 CGGradientRef
\f0\fs24  object (for the 
\f1\fs20 GradientView
\f0\fs24 ).\

\f1 -
\fs20 repositionGradients
\f0\fs24 \
	updates the starting & ending location and radii for the gradients.\
\

\f1 ShadingView.h/m
\f0 \
Implements an 
\f1\fs20 NSView
\f0\fs24  subclass that draws a gradient via 
\f1\fs20 CGFunctionRef
\f0\fs24  and 
\f1\fs20 CGShadingRef
\f0\fs24  objects. The actual work done to draw the gradient is contained inside 
\f1\fs20 -drawRect:
\f0\fs24 . The gradient is specified by setting a 
\f1\fs20 CGFunctionRef
\f0\fs24  via 
\f1\fs20 -setShadingFunction:
\f0\fs24  as well as other instance methods that specify other parameters of the gradient.\
\

\f1 GradientView.h/m
\f0 \
Implements an 
\f1\fs20 NSView
\f0\fs24  subclass that draws a gradient via a 
\f1\fs20 CGGradientRef
\f0\fs24  object. The actual work to done to draw the gradient is contained inside 
\f1\fs20 -drawRect:
\f0\fs24 . The gradient is specified by setting a 
\f1\fs20 CGGradientRef
\f0\fs24  via 
\f1\fs20 -setGradient:
\f0\fs24  as well as other instance methods that specify other parameters of the gradient.\
\

\f1 PreviewView.h/m
\f0 \
Implements an 
\f1\fs20 NSView
\f0\fs24  subclass that draws a gradient via a 
\f1\fs20 CGGradientRef
\f0\fs24  object. Like the 
\f1\fs20 GradientView
\f0\fs24  view, the drawing is done inside 
\f1\fs20 -drawRect:
\f0\fs24 , but it is a much simpler as it simply fills the entire area with a linear gradient.\
\

\f1 QuartzDrawing.h/c
\f0 \
Contains simple functions that are used across the sample for rendering.\

\f1\fs20 GetSquarePath
\f0\fs24 , 
\f1\fs20 GetCirclePath
\f0\fs24 , 
\f1\fs20 GetStarPath
\f0\fs24 \
	return a 
\f1\fs20 CGPathRef
\f0\fs24  with the requested shape.\

\f1\fs20 CreateShadingFunction
\f0\fs24 \
	creates and returns a 
\f1\fs20 CGFunctionRef
\f0\fs24  that represents the gradient specified by the colors passed.\

\f1\fs20 CreateGradient
\f0\fs24 \
	creates and returns a 
\f1\fs20 CGGradientRef
\f0\fs24  that represents the gradient specified by the colors passed.\
Both 
\f1\fs20 CreateShadingFunction
\f0\fs24  and 
\f1\fs20 CreateGradient
\f0\fs24  implement the same coloring algorithm, so gradients drawn via either 
\f1\fs20 CGShadingRef 
\f0\fs24 or 
\f1\fs20 CGGradientRef 
\f0\fs24 should look the same.\
\
Additionally, the source file contains some additional declarations required by the 
\f1\fs20 CGFunctionRef
\f0\fs24  APIs.\

\f1\fs20 LinearColorSpec
\f0\fs24 \
	a struct that contains the color information for the evaluator. It is used as an array (of 3) to specify the gradients in this sample.\

\f1\fs20 LinearColorEvaluator
\f0\fs24 \
	a function that does the linear interpolation for the 
\f1\fs20 CGFunctionRef
\f0\fs24  object that we are using for the gradient\

\f1\fs20 LinearColorReleaser
\f0\fs24 \
	called when the 
\f1\fs20 CGFunctionRef
\f0\fs24  object is destroyed to clean up our data.\
	}