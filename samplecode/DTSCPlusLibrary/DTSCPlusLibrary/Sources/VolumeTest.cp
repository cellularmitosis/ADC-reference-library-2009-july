/*	File:		VolumeTest.cp	Contains:	TVolume is a simple volume based utility class (provides information about volumes) 	  				TVolumeTest.cp contains the TVolume testing functions.	Written by: Kent Sandvik		Copyright:	Copyright © 1993-1999 by Apple Computer, Inc., All Rights Reserved.				You may incorporate this Apple sample source code into your program(s) without				restriction. This Apple sample source code has been provided "AS IS" and the				responsibility for its operation is yours. You are not permitted to redistribute				this Apple sample source code as "Apple sample source code" after having made				changes. If you're going to re-distribute the source, we require that you make				it clear in the source that the code was descended from Apple sample source				code, but that you've made changes.	Change History (most recent first):				8/18/1999	Karl Groethe	Updated for Metrowerks Codewarror Pro 2.1				*/#ifndef _VOLUME_#include "Volume.h"#endif// This test will first look at the boot volume, and print out information// about the volume structure.void main(void){	cout << "Start of the TVolume object testÉ\n";	// Create a TVolume object.	TVolume myVolumes;	// Print out default (boot volume) information.	cout << "VRefNum of boot volume is = " << myVolumes.GetBootVRefNum() << '\n';	cout << "Free space (K) of boot volume is = " << myVolumes.GetKFreeSpace() << '\n';	cout << "Num files on boot volume is = " << myVolumes.GetFileCount() << '\n';	cout << "Num folders on boot volume is = " << myVolumes.GetDirCount() << '\n';	cout << "Cretion date of boot volume is = " << myVolumes.GetCreationDate() << '\n';	cout << "Driver number of boot volume is = " << myVolumes.GetDriverNumber() << '\n';	// Get volume name.	Str255 name;	myVolumes.GetName(name);	p2c(name);	printf("Name of boot volume is = %s\n", name);	// Iterate through the volumes	cout << "Num volumes mounted is = " << myVolumes.GetNumVolumes() << '\n';	// show file num information on each mounted volume.	for (myVolumes.Reset(); !myVolumes.Last(); myVolumes.Next())	{		cout << "Num files on volume = " << myVolumes.GetFileCount() << '\n';		cout << "Free space (K) of  volume is = " << myVolumes.GetKFreeSpace() << '\n';		cout << '\n';	}	cout << "End of the TVolume object test!\n";}// _________________________________________________________________________________________________________ ///*	Change History (most recent last):  No		Init.	Date		Comment  1			khs		1/5/93		New file  2			khs		1/7/93		Cleanup*/