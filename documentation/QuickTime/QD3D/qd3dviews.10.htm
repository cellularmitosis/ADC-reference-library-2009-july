<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Getting a View's Transforms</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3569"> </A>Getting a View's Transforms</H1><P CLASS="T1.Text1"><A NAME="pgfId=3574"> </A><A NAME="marker=3570"> </A>QuickDraw&nbsp;3D provides routines that you can use to get matrix representations of the transforms associated with a view.</P><P CLASS="I.Important"><A NAME="pgfId=3575"> </A>You should call these routines only between calls to <TT CLASS="cv">Q3View_StartRendering</TT> and <TT CLASS="cv">Q3View_EndRendering</TT> (or similar submitting loops). If you call them at any other time, they return <TT CLASS="cv">kQ3Failure</TT>. </P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3579"> </A>Q3View_GetLocalToWorldMatrixState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3581"> </A><A NAME="marker=3580"> </A><A NAME="marker=1101"> </A>You can use the <TT CLASS="cv">Q3View_GetLocalToWorldMatrixState</TT> function to get a view's local-to-world transform matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9353"> </A>TQ3Status Q3View_GetLocalToWorldMatrixState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9355"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3583"> </A>A view.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9364"> </A><TT CLASS="cv">matrix</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3584"> </A>On exit, a 4-by-4 matrix representing the local-to-world transform of the specified view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3585"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3586"> </A>The <TT CLASS="cv">Q3View_GetLocalToWorldMatrixState</TT> function returns, in the <TT CLASS="cv">matrix</TT> parameter, a 4-by-4 matrix that represents the local-to-world transform of the view specified by the <TT CLASS="cv">view</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3587"> </A>Q3View_GetWorldToFrustumMatrixState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3589"> </A><A NAME="marker=3588"> </A><A NAME="marker=1111"> </A>You can use the <TT CLASS="cv">Q3View_GetWorldToFrustumMatrixState</TT> function to get a view's world-to-frustum transform matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9375"> </A>TQ3Status Q3View_GetWorldToFrustumMatrixState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9377"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3591"> </A>A view.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9386"> </A><TT CLASS="cv">matrix</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3592"> </A>On exit, a 4-by-4 matrix representing the world-to-frustum transform of the specified view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3593"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3594"> </A>The <TT CLASS="cv">Q3View_GetWorldToFrustumMatrixState</TT> function returns, in the <TT CLASS="cv">matrix</TT> parameter, a 4-by-4 matrix that represents the world-to-frustum transform of the view specified by the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6397"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=6395"> </A>You should call the <TT CLASS="cv">Q3View_GetWorldToFrustumMatrixState</TT> function only from within a rendering loop. Its behavior when called outside a rendering loop is unpredictable.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3595"> </A>Q3View_GetFrustumToWindowMatrixState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3597"> </A><A NAME="marker=3596"> </A><A NAME="marker=1121"> </A>You can use the <TT CLASS="cv">Q3View_GetFrustumToWindowMatrixState</TT> function to get a view's frustum-to-window transform matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9397"> </A>TQ3Status Q3View_GetFrustumToWindowMatrixState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9399"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3599"> </A>A view.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9408"> </A><TT CLASS="cv">matrix</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3600"> </A>On exit, a 4-by-4 matrix representing the frustum-to-window transform of the specified view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3601"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3602"> </A>The <TT CLASS="cv">Q3View_GetFrustumToWindowMatrixState</TT> function returns, in the <TT CLASS="cv">matrix</TT> parameter, a 4-by-4 matrix that represents the frustum-to-window transform of the view specified by the <TT CLASS="cv">view</TT> parameter. The window is either the pixmap associated with a pixmap draw context or the window associated with a window draw context (for example, the Macintosh draw context). If, in a window system draw context, a part of a window (a pane) has been associated with the view, this function returns the matrix that maps the view frustum to that part of the window.</P><P CLASS="T1.Text1"><A NAME="pgfId=3603"> </A>The <I CLASS="italics">z</I> value of a point <I CLASS="italics">p</I><EM CLASS="Subscript">w</EM> in window space obtained by applying the transform returned by <TT CLASS="cv">Q3View_GetFrustumToWindowMatrixState</TT> to a point <I CLASS="italics">p</I><EM CLASS="Subscript">f</EM> in the frustum space is the <I CLASS="italics">z</I> value of point <I CLASS="italics">p</I><EM CLASS="Subscript">f</EM> (which ranges from 0.0 to 1.0, inclusive). You might use the <I CLASS="italics">z</I> value of a transformed point to determine whether that point would be clipped (if the <I CLASS="italics">z</I> value is less than 0 or greater than 1.0, the original point lies outside the viewing frustum).<A NAME="marker=3604"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>