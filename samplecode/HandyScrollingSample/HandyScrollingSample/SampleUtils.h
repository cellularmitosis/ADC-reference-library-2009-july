/*    File: SampleUtils.h        Description:        This file contains routine prototypes that can be used to access	routines defined in SampleUtils.c.  These routines have been moved	here to a separate file to simplify the example.    Copyright:        © Copyright 2000 Apple Computer, Inc. All rights reserved.        Disclaimer:        IMPORTANT:  This Apple software is supplied to you by Apple Computer, Inc.        ("Apple") in consideration of your agreement to the following terms, and your        use, installation, modification or redistribution of this Apple software        constitutes acceptance of these terms.  If you do not agree with these terms,        please do not use, install, modify or redistribute this Apple software.        In consideration of your agreement to abide by the following terms, and subject        to these terms, Apple grants you a personal, non-exclusive license, under Apple’s        copyrights in this original Apple software (the "Apple Software"), to use,        reproduce, modify and redistribute the Apple Software, with or without        modifications, in source and/or binary forms; provided that if you redistribute        the Apple Software in its entirety and without modifications, you must retain        this notice and the following text and disclaimers in all such redistributions of        the Apple Software.  Neither the name, trademarks, service marks or logos of        Apple Computer, Inc. may be used to endorse or promote products derived from the        Apple Software without specific prior written permission from Apple.  Except as        expressly stated in this notice, no other rights or licenses, express or implied,        are granted by Apple herein, including but not limited to any patent rights that        may be infringed by your derivative works or by other works in which the Apple        Software may be incorporated.        The Apple Software is provided by Apple on an "AS IS" basis.  APPLE MAKES NO        WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED        WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR        PURPOSE, REGARDING THE APPLE SOFTWARE OR ITS USE AND OPERATION ALONE OR IN        COMBINATION WITH YOUR PRODUCTS.        IN NO EVENT SHALL APPLE BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL OR        CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE        GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)        ARISING IN ANY WAY OUT OF THE USE, REPRODUCTION, MODIFICATION AND/OR DISTRIBUTION        OF THE APPLE SOFTWARE, HOWEVER CAUSED AND WHETHER UNDER THEORY OF CONTRACT, TORT        (INCLUDING NEGLIGENCE), STRICT LIABILITY OR OTHERWISE, EVEN IF APPLE HAS BEEN        ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    Change History (most recent first):        Tue, Feb 8, 2000 -- created*/#ifndef __SAMPLEUTILS__#define __SAMPLEUTILS__#define TARGET_API_MAC_CARBON 1#ifdef __APPLE_CC__#include <Carbon/Carbon.h>#else#include <Carbon.h>#endif/* version number for the SampleUtils.h / SampleUtils.c set of files. */#define SAMPLEUTILSVERSION "Sample Utils 2000, Version 1.0.0"/* GetApplicationFolder returns the volume reference number and	directory id of the folder containing the application. */OSStatus GetApplicationFolder(FSSpec *spec);/* DrawGrowIconWithoutScrollLines draws the grow icon in the bottom	right corner of the frontmost window without drawing the scroll bar	lines.  It does this by setting the clip region to the bottom right corner	before calling DrawGrowIcon. */void DrawGrowIconWithoutScrollLines(WindowPtr window);/* SetWindowStandardStateSize sets the window's standard state rectangle	to a rectangle of the size suggested in the width and height parameters.	In the end, it may set the standard size to something smaller than the	width and height parameters so the entire window remains visible.  The	standard rectangle is also centered on the main screen.  The window's	standard state rectangle is used by ZoomWindow whenever when it	is called with the inZoomOut partcode. */void SetWindowStandardStateSize(WindowPtr window, short width, short height);/* GrayOutBox grays out an area of the screen in the current grafport.  	*theBox is in local coordinates in the current grafport. This routine	is for direct screen drawing only.  */void GrayOutBox(Rect *theBox);/* RgnUnionRect adds the rectangle into the region. This routine works	by creating a temporary rectangular region equivalent to srcRect	and then calling UnionRgn. It's purpose is simply to stand in as a	shorthand for that sequence of calls.  */void RgnUnionRect(RgnHandle theRegion, Rect* srcRect);/* SetScrollBarCursor sets the cursor according to the mouse position	over a scroll bar.  If the cursor is over the scroll bar, then the routine	will return true and it will set the region mouseRgn to a region where	the mouse should remain as it has been set.  This region will be in global	coordinates suitable for passing to WaitNextEvent in the mouse region	parameter. */Boolean SetScrollBarCursor(ControlHandle scrollBar, Point where, RgnHandle mouseRgn);/* GetMenuBarRegion sets the region mBarRgn to the global coordinates	of the menu bar.  This region is useful for passing to WaitNextEvent	in the mouse region parameter after you have set the mouse to a special	cursor for the menu bar area.  */void GetMenuBarRegion(RgnHandle mBarRgn);#endif