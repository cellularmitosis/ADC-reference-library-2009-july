<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Manipulating Quaternion Transforms</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3792"> </A>Creating and Manipulating Quaternion Transforms</H1><P CLASS="T1.Text1"><A NAME="pgfId=3797"> </A><A NAME="marker=3793"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate quaternion transforms. A quaternion transform rotates and twists an object according to the mathematical properties of quaternions.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3798"> </A>Q3QuaternionTransform_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=3799"> </A><A NAME="marker=1320"> </A>You can use the <TT CLASS="cv">Q3QuaternionTransform_New</TT> function to create a new quaternion transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6724"> </A>TQ3TransformObject Q3QuaternionTransform_New (TQ3Quaternion *quaternion);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6726"> </A><TT CLASS="cv">quaternion</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3801"> </A>A quaternion.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3802"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3803"> </A>The <TT CLASS="cv">Q3QuaternionTransform_New</TT> function returns, as its function result, a reference to a new transform object of type <TT CLASS="cv">kQ3TransformTypeQuaternion</TT> using the data passed in the <TT CLASS="cv">quaternion</TT> parameter. The data you pass in the <TT CLASS="cv">quaternion</TT> parameter is copied into internal QuickDraw&nbsp;3D data structures. If QuickDraw&nbsp;3D cannot allocate memory for those structures, <TT CLASS="cv">Q3QuaternionTransform_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3810"> </A>Q3QuaternionTransform_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=3811"> </A><A NAME="marker=1334"> </A>You can use the <TT CLASS="cv">Q3QuaternionTransform_Submit</TT> function to submit a quaternion transform without creating an object or allocating memory.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6737"> </A>TQ3Status Q3QuaternionTransform_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Quaternion *quaternion, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6739"> </A><TT CLASS="cv">quaternion</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3813"> </A>A quaternion.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6748"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3814"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3815"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3816"> </A>The <TT CLASS="cv">Q3QuaternionTransform_Submit</TT> function pushes the quaternion transform specified by the <TT CLASS="cv">quaternion</TT> parameter on the view transform stack of the view specified by the <TT CLASS="cv">view</TT> parameter. The function returns <TT CLASS="cv">kQ3Success</TT> if the operation succeeds and <TT CLASS="cv">kQ3Failure</TT> otherwise.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=1817"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=1818"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3817"> </A>Q3QuaternionTransform_Get</H2><P CLASS="T1.Text1"><A NAME="pgfId=3818"> </A><A NAME="marker=1343"> </A>You can use the <TT CLASS="cv">Q3QuaternionTransform_Get</TT> function to query the private data stored in a quaternion transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6759"> </A>TQ3Status Q3QuaternionTransform_Get (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Quaternion *quaternion);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6761"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3820"> </A>A transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6770"> </A><TT CLASS="cv">quaternion</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3821"> </A>A quaternion.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3822"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3823"> </A>The <TT CLASS="cv">Q3QuaternionTransform_Get</TT> function returns, in the <TT CLASS="cv">quaternion</TT> parameter, information about the quaternion transform specified by the <TT CLASS="cv">transform</TT> parameter. You should use <TT CLASS="cv">Q3QuaternionTransform_Get</TT> only with transforms of type <TT CLASS="cv">kQ3TransformTypeQuaternion</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3824"> </A>Q3QuaternionTransform_Set</H2><P CLASS="T1.Text1"><A NAME="pgfId=3825"> </A><A NAME="marker=1352"> </A>You can use the <TT CLASS="cv">Q3QuaternionTransform_Set</TT> function to set new private data for a quaternion transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6781"> </A>TQ3Status Q3QuaternionTransform_Set (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Quaternion *quaternion);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6783"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3827"> </A>A transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6792"> </A><TT CLASS="cv">quaternion</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3828"> </A>A quaternion.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3829"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3830"> </A>The <TT CLASS="cv">Q3QuaternionTransform_Set</TT> function sets the quaternion transform specified by the <TT CLASS="cv">transform</TT> parameter to the data passed in the <TT CLASS="cv">quaternion</TT> parameter. You should use <TT CLASS="cv">Q3QuaternionTransform_Set</TT> only with transforms of type <TT CLASS="cv">kQ3TransformTypeQuaternion</TT>.<A NAME="marker=1645"> </A><A NAME="marker=1653"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>