<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing Viewer Information and State</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3824"> </A>Managing Viewer Information and State</H1><P CLASS="T1.Text1"><A NAME="pgfId=4262"> </A>The 3D&nbsp;Viewer provides a number of functions that you can use to get and set information about a viewer object and to manage its states.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=6087"> </A>Q3ViewerGetVersion</H2><P CLASS="T1.Text1"><A NAME="pgfId=6092"> </A>You can use the <TT CLASS="cv">Q3ViewerGetVersion</TT> function to get the version of the 3D&nbsp;Viewer.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6818"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12032"> </A>OSErr Q3ViewerGetVersion (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;*majorRevision,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;*minorRevision);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6923"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12036"> </A>TQ3Status Q3WinViewerGetVersion(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;*majorRevision,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;*minorRevision);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7301"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12040"> </A><TT CLASS="cv">majorRevision</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6099"> </A>On entry, a pointer to an unsigned long integer. On exit, that long integer is set to the major revision number of the 3D&nbsp;Viewer.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12049"> </A><TT CLASS="cv">minorRevision</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6104"> </A>On entry, a pointer to an unsigned long integer. On exit, that long integer is set to the minor revision number of the 3D&nbsp;Viewer.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6115"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=6118"> </A>The <TT CLASS="cv">Q3ViewerGetVersion</TT> function returns, in the long integers pointed to by the <TT CLASS="cv">majorRevision</TT> and <TT CLASS="cv">minorRevision</TT> parameters, the major and minor revision numbers of the 3D&nbsp;Viewer installed in the current operating environment.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6096"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=6160"> </A>The <TT CLASS="cv">Q3ViewerGetVersion</TT> function is available only in versions 1.1 and later of the 3D&nbsp;Viewer.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=8427"> </A>Q3ViewerGetReleaseVersion</H2><P CLASS="T1.Text1"><A NAME="pgfId=8442"> </A>You can use the <TT CLASS="cv">Q3ViewerGetReleaseVersion</TT> function to get the release version number of the 3D&nbsp;Viewer.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=8429"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12060"> </A>OSErr Q3ViewerGetReleaseVersion (unsigned long *releaseRevision);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=8431"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12064"> </A>TQ3Status Q3WinViewerGetReleaseVersion (unsigned long *releaseRevision);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=8433"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12068"> </A>releaseRevision</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=8434"> </A> 	On entry, a pointer to an unsigned long integer. On exit, that long integer is set to the release revision number of the 3D&nbsp;Viewer in <TT CLASS="cv">'vers'</TT> format.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=8436"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=8437"> </A>The <TT CLASS="cv">Q3ViewerGetReleaseVersion</TT> function returns, in the long integer pointed to by the releaseRevision parameter, the release version number of the 3D&nbsp;Viewer installed in the current operating environment.</P><P CLASS="Note"><A NAME="pgfId=8461"> </A>For release 1.5.1 the release version number is 0x01518000. </P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=1784"> </A>Q3ViewerGetView</H2><P CLASS="T1.Text1"><A NAME="pgfId=1787"> </A><A NAME="marker=1785"> </A><A NAME="marker=1786"> </A>You can use the <TT CLASS="cv">Q3ViewerGetView</TT> function to get the view object associated with a viewer object.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6820"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12080"> </A>TQ3ViewObject Q3ViewerGetView (TQ3ViewerObject theViewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6926"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12084"> </A>TQ3ViewObject Q3WinViewerGetView (TQ3ViewerObject viewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7171"> </A>PARAMETER</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12088"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=1798"> </A>A viewer object.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=1836"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=1837"> </A>The <TT CLASS="cv">Q3ViewerGetView</TT> function returns, as its function result, the view object currently associated with the viewer specified by the <TT CLASS="cv">theViewer</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=1791"> </A>Q3ViewerRestoreView</H2><P CLASS="T1.Text1"><A NAME="pgfId=1794"> </A><A NAME="marker=1792"> </A><A NAME="marker=1793"> </A>You can use the <TT CLASS="cv">Q3ViewerRestoreView</TT> function to restore the camera associated with a viewer object.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6822"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12099"> </A>OSErr Q3ViewerRestoreView (TQ3ViewerObject theViewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6929"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12103"> </A>TQ3Status Q3WinViewerRestoreView (TQ3ViewerObject viewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7173"> </A>PARAMETER</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12107"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=1802"> </A>A viewer object.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=1844"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=1845"> </A>The <TT CLASS="cv">Q3ViewerRestoreView</TT> function restores the camera settings of the viewer specified by the <TT CLASS="cv">theViewer</TT> parameter to the original camera specified in the associated view hints object. If there is no view hints object associated with the specified viewer, <TT CLASS="cv">Q3ViewerRestoreView</TT> creates a new default camera.</P><P CLASS="Note"><A NAME="pgfId=4267"> </A><TT CLASS="cv">Q3ViewerRestoreView</TT> performs the same operations as the reset button in the controller strip. </P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4396"> </A>Q3ViewerGetCameraCount</H2><P CLASS="T1.Text1"><A NAME="pgfId=4473"> </A>You can use the <TT CLASS="cv">Q3ViewerGetCameraCount</TT> function to determine how many camera objects are currently associated with a viewer object.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6824"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12118"> </A>OSErr Q3ViewerGetCameraCount (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*cnt);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6936"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12122"> </A>TQ3Status Q3WinViewerGetCameraCount (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      *count );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7179"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12126"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4578"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12135"> </A><TT CLASS="cv">cnt</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4413"> </A>On entry, a pointer to an unsigned long integer. On exit, that long integer is set to the number of camera objects associated with the specified viewer object.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4424"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4427"> </A>The <TT CLASS="cv">Q3ViewerGetCameraCount</TT> function returns, in the unsigned long integer pointed to by the <TT CLASS="cv">cnt</TT> parameter, the number of camera objects associated with the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter. If there is no view hints object associated with that viewer object, then there are no camera associated with that viewer object and <TT CLASS="cv">Q3ViewerGetCameraCount</TT> returns 0.</P><P CLASS="I.Important"><A NAME="pgfId=4558"> </A><TT CLASS="cv">Q3ViewerGetCameraCount</TT> counts only cameras of type <TT CLASS="cv">kQ3CameraViewAngleAspect</TT>. </P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4489"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=4490"> </A>The <TT CLASS="cv">Q3ViewerGetCameraCount</TT> function is available only in versions 1.1 and later of the 3D&nbsp;Viewer.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4434"> </A>Q3ViewerSetCameraByNumber</H2><P CLASS="T1.Text1"><A NAME="pgfId=4475"> </A>You can use the <TT CLASS="cv">Q3ViewerSetCameraByNumber</TT> function to set a viewer's camera to a camera specified by its index in the list of the viewer's cameras.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6826"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12146"> </A>OSErr Q3ViewerSetCameraByNumber (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cameraNo);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6939"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12150"> </A>TQ3Status Q3WinViewerSetCameraNumber (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      cameraNo );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7181"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12154"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4515"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12163"> </A><TT CLASS="cv">cameraNo</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4451"> </A>The index of a camera in the list of cameras associated with the specified viewer object. This list is 1-based (that is, the first camera has the index 1). The value of this parameter must be less than or equal to the number returned by the <TT CLASS="cv">Q3ViewerGetCameraCount</TT> function.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4462"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4465"> </A>The <TT CLASS="cv">Q3ViewerSetCameraByNumber</TT> function sets the camera of the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter to the camera whose index in the list of the viewer's cameras is <TT CLASS="cv">cameraNo</TT>.</P><P CLASS="Note"><A NAME="pgfId=4615"> </A><TT CLASS="cv">Q3ViewerSetCameraByNumber</TT> performs the same operations as the camera viewpoint pop-up menu in the controller strip. </P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4480"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=4481"> </A>The <TT CLASS="cv">Q3ViewerSetCameraByNumber</TT> function is available only in versions 1.1 and later of the 3D&nbsp;Viewer.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=6244"> </A><A NAME="28918"> </A>Q3ViewerSetCameraByView</H2><P CLASS="T1.Text1"><A NAME="pgfId=6245"> </A>You can use the <TT CLASS="cv">Q3ViewerSetCameraByView</TT> function to set a camera to a predefined camera view.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6828"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12174"> </A>OSErr Q3ViewerSetCameraByView (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theViewer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerCameraView&nbsp;&nbsp;&nbsp;&nbsp;viewType);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6942"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12178"> </A>TQ3Status Q3WinViewerSetCameraView (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject        viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerCameraView    viewType );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7183"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12182"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6247"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12191"> </A><TT CLASS="cv">viewType</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6250"> </A>A camera view command. See <A HREF="qd3dviewer.11.htm#13261" CLASS="XRef">&quot;Camera View Commands&quot;</A> for a description of the available camera view commands.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6252"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=6253"> </A>The <TT CLASS="cv">Q3ViewerSetCameraByView</TT> function sets the camera of the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter to the camera viewpoint specified by the <TT CLASS="cv">viewType</TT> parameter. For instance, if the value of the <TT CLASS="cv">viewType</TT> parameter is <TT CLASS="cv">kQ3ViewerCameraTop</TT>, then <TT CLASS="cv">Q3ViewerSetCameraByView</TT> sets the camera to a viewpoint that is directly above the model in the viewer object.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6254"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=6255"> </A>The <TT CLASS="cv">Q3ViewerSetCameraByView</TT> function is available only in versions 1.1 and later of the 3D&nbsp;Viewer.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3286"> </A>Q3ViewerGetFlags</H2><P CLASS="T1.Text1"><A NAME="pgfId=3288"> </A><A NAME="marker=3287"> </A><A NAME="marker=614"> </A>You can use the <TT CLASS="cv">Q3ViewerGetFlags</TT> function to get the current viewer flags for a viewer object.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6830"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12202"> </A>unsigned long Q3ViewerGetFlags (TQ3ViewerObject theViewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7419"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12206"> </A>unsigned long Q3WinViewerGetFlags (TQ3ViewerObject viewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7420"> </A>PARAMETER</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12210"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=7421"> </A>A viewer object.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3291"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3292"> </A>The <TT CLASS="cv">Q3ViewerGetFlags</TT> function returns, as its function result, the current set of viewer flags for the viewer specified by the <TT CLASS="cv">theViewer</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3293"> </A>Q3ViewerSetFlags</H2><P CLASS="T1.Text1"><A NAME="pgfId=3295"> </A><A NAME="marker=3294"> </A><A NAME="marker=623"> </A>You can use the <TT CLASS="cv">Q3ViewerSetFlags</TT> function to set the viewer flags for a viewer object.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6832"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12221"> </A>OSErr Q3ViewerSetFlags (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flags);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6948"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12225"> </A>TQ3Status Q3WinViewerSetFlags (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      flags );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7187"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12229"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3297"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12238"> </A><TT CLASS="cv">flags</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3301"> </A>A set of viewer flags. See <A HREF="qd3dviewer.f.htm#40868" CLASS="XRef">&quot;Viewer Flags&quot;</A> for a description of the constants you can use to set or clear individual viewer flags.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3302"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3303"> </A>The <TT CLASS="cv">Q3ViewerSetFlags</TT> function sets the viewer flags associated with the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter to the values passed in the <TT CLASS="cv">flags</TT> parameter.</P><P CLASS="I.Important"><A NAME="pgfId=3304"> </A>Any changes to a viewer's flags will not be visible until you call <TT CLASS="cv">Q3ViewerDraw</TT> with the specified viewer object. </P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3308"> </A>Q3ViewerGetBounds</H2><P CLASS="T1.Text1"><A NAME="pgfId=3310"> </A><A NAME="marker=3309"> </A><A NAME="marker=640"> </A>You can use the <TT CLASS="cv">Q3ViewerGetBounds</TT> function to get the rectangle that bounds a viewer's pane.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6834"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12249"> </A>OSErr Q3ViewerGetBounds (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rect&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*bounds);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6951"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12253"> </A>TQ3Status Q3WinViewerGetBounds (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RECT               *bounds );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7189"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12257"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3312"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12266"> </A><TT CLASS="cv">bounds</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3313"> </A>On exit, the rectangle that bounds the pane currently associated with the specified viewer object.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3314"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3315"> </A>The <TT CLASS="cv">Q3ViewerGetBounds</TT> function returns, through the <TT CLASS="cv">bounds</TT> parameter, the rectangle that currently bounds the pane associated with the viewer object specified by the <TT CLASS="cv">bounds</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3316"> </A>Q3ViewerSetBounds</H2><P CLASS="T1.Text1"><A NAME="pgfId=3318"> </A><A NAME="marker=3317"> </A><A NAME="marker=650"> </A>You can use the <TT CLASS="cv">Q3ViewerSetBounds</TT> function to set the rectangle that bounds a viewer's pane.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6836"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12277"> </A>OSErr Q3ViewerSetBounds (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rect&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*bounds);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6954"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12281"> </A>TQ3Status Q3WinViewerSetBounds (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RECT               *bounds );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7191"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12285"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3320"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12294"> </A><TT CLASS="cv">bounds</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3321"> </A>The desired viewer pane for the specified viewer object. This rectangle is specified in window coordinates, where the origin (0,&nbsp;0) is the upper-left corner of the window and values increase to the right and down the window.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3322"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3323"> </A>The <TT CLASS="cv">Q3ViewerSetBounds</TT> function sets the bounds of the viewer pane of the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter to the rectangle specified by the <TT CLASS="cv">bounds</TT> parameter.</P><P CLASS="I.Important"><A NAME="pgfId=3324"> </A>Any changes to a viewer's bounds will not be visible until you call <TT CLASS="cv">Q3ViewerDraw</TT> with the specified viewer object. </P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4658"> </A>Q3ViewerGetMininumDimension</H2><P CLASS="T1.Text1"><A NAME="pgfId=4663"> </A>You can use the <TT CLASS="cv">Q3ViewerGetMininumDimension</TT> function to get the sides of the smallest rectangle that can contain the controller strip of a viewer object.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6838"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12305"> </A>OSErr Q3ViewerGetMininumDimension (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*width, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*height);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6957"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12309"> </A>TQ3Status Q3WinViewerGetMinimumDimension (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      *width,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      *height );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7193"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12313"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4720"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12322"> </A><TT CLASS="cv">width</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4679"> </A>On exit, the width of the minimum viewer pane required to contain the entire contents of the controller strip.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12331"> </A><TT CLASS="cv">height</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4684"> </A>On exit, the height of the minimum viewer pane required to contain the entire contents of the controller strip.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4695"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4667"> </A>The <TT CLASS="cv">Q3ViewerGetMininumDimension</TT> function returns, in the <TT CLASS="cv">width</TT> and <TT CLASS="cv">height</TT> parameters, the width and height of the minimum viewer pane required to contain the entire contents of the controller strip associated with the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter. If your application allows the viewer pane to be resized, you should ensure that it is not sized smaller than the dimensions returned by <TT CLASS="cv">Q3ViewerGetMininumDimension</TT>; otherwise, some of the buttons in the controller strip will be clipped.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4744"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=4745"> </A>The <TT CLASS="cv">Q3ViewerGetMininumDimension</TT> function is available only in versions 1.1 and later of the 3D&nbsp;Viewer.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3328"> </A>Q3ViewerGetPort</H2><P CLASS="T1.Text1"><A NAME="pgfId=3330"> </A><A NAME="marker=3329"> </A><A NAME="marker=664"> </A>You can use the <TT CLASS="cv">Q3ViewerGetPort</TT> function to get the Macintosh graphics port associated with a viewer object. This function has no equivalent in the Windows environment.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12342"> </A>CGrafPtr Q3ViewerGetPort (TQ3ViewerObject theViewer);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12344"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3332"> </A>A viewer object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3333"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4624"> </A>The <TT CLASS="cv">Q3ViewerGetPort</TT> function returns, as its function result, a pointer to the port currently associated with the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter. The returned pointer may be a a pointer to a color graphics port, a pointer to an offscreen graphics world, or the value <TT CLASS="cv">NULL</TT>, indicating that no port is currently associated with the viewer object.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4625"> </A>Q3ViewerSetPort</H2><P CLASS="T1.Text1"><A NAME="pgfId=3337"> </A><A NAME="marker=3336"> </A><A NAME="marker=673"> </A>You can use the <TT CLASS="cv">Q3ViewerSetPort</TT> function to set the graphics port associated with a viewer object. This function has no equivalent in the Windows environment.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12355"> </A>OSErr Q3ViewerSetPort (TQ3ViewerObject theViewer, CGrafPtr port);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12357"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3339"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12366"> </A><TT CLASS="cv">port</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4781"> </A>A pointer to a color graphics port that specifies the window with which the specified viewer is to be associated, or a pointer to an offscreen graphics world. You can also pass the value <TT CLASS="cv">NULL</TT> in this parameter to indicate that port is to be associated with the viewer object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3341"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3342"> </A>The <TT CLASS="cv">Q3ViewerSetPort</TT> function sets the graphics port associated with the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter to the port specified by the <TT CLASS="cv">port</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3343"> </A>Q3ViewerGetGroup</H2><P CLASS="T1.Text1"><A NAME="pgfId=3344"> </A><A NAME="marker=682"> </A>You can use the <TT CLASS="cv">Q3ViewerGetGroup</TT> function to get the group of objects currently associated with a viewer.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6844"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12377"> </A>TQ3GroupObject Q3ViewerGetGroup (TQ3ViewerObject theViewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6970"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12381"> </A>TQ3GroupObject Q3WinViewerGetGroup (TQ3ViewerObject viewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7203"> </A>PARAMETER</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12385"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3346"> </A>A viewer object.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3347"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3348"> </A>The <TT CLASS="cv">Q3ViewerGetGroup</TT> function returns, as its function result, a reference to the group containing the objects currently associated with the viewer specified by the <TT CLASS="cv">theViewer</TT> parameter. The reference count of that group is incremented. You should therefore dispose of the group when you have finished using it.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3349"> </A>Q3ViewerUseGroup</H2><P CLASS="T1.Text1"><A NAME="pgfId=3350"> </A><A NAME="marker=690"> </A>You can use the <TT CLASS="cv">Q3ViewerUseGroup</TT> function to set the group of objects associated with a viewer.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6976"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12396"> </A>OSErr Q3ViewerUseGroup (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;group);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6973"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12400"> </A>TQ3Status Q3WinViewerUseGroup (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject     group );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7205"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12404"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3352"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12413"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3353"> </A>A group.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3354"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3355"> </A>The <TT CLASS="cv">Q3ViewerUseGroup</TT> function sets the group of objects associated with the viewer specified by the <TT CLASS="cv">theViewer</TT> parameter to the group specified by the <TT CLASS="cv">group</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4811"> </A><A NAME="23696"> </A>Q3ViewerGetState</H2><P CLASS="T1.Text1"><A NAME="pgfId=4814"> </A><A NAME="marker=4812"> </A><A NAME="marker=4813"> </A>You can use the <TT CLASS="cv">Q3ViewerGetState</TT> function to get the current state of a viewer object.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6846"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12424"> </A>unsigned long Q3ViewerGetState (TQ3ViewerObject theViewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6983"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12428"> </A>unsigned long Q3WinViewerGetState (TQ3ViewerObject viewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7207"> </A>PARAMETER</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12432"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4816"> </A>A viewer object.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4817"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4818"> </A>The <TT CLASS="cv">Q3ViewerGetState</TT> function returns a long integer that encodes information about the current state of the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter. Bits of the returned long integer are addressed using these constants, which define the <B CLASS="bold">viewer state flags:</B></P><CODE CLASS="Cv.Code"><A NAME="pgfId=12443"> </A>enum {<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ViewerEmpty&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ViewerHasModel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 1&lt;&lt;0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ViewerHasUndo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 1&lt;&lt;1<BR>};<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=4820"> </A>If <TT CLASS="cv">Q3ViewerGetState</TT> returns the value <TT CLASS="cv">kQ3ViewerEmpty</TT>, there is no image currently displayed by the specified viewer object. If <TT CLASS="cv">Q3ViewerGetState</TT> returns the value <TT CLASS="cv">kQ3ViewerHasModel</TT>, there is an image currently displayed by the specified viewer object. If <TT CLASS="cv">Q3ViewerGetState</TT> returns the value <TT CLASS="cv">kQ3ViewerHasUndo</TT>, the user has modified the camera state using the interactive controls. You can use this information to determine whether Edit menu commands such as Undo, Cut, Clear, and Copy should be enabled or disabled.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4891"> </A>SEE ALSO</H3><P CLASS="T1.Text1"><A NAME="pgfId=4892"> </A>Use the <TT CLASS="cv">Q3ViewerGetUndoString</TT> function to get a string that describes the most recent user operation that can be undone.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4920"> </A><A NAME="23473"> </A>Q3ViewerGetUndoString</H2><P CLASS="T1.Text1"><A NAME="pgfId=4925"> </A>You can use the <TT CLASS="cv">Q3ViewerGetUndoString</TT> function to get a string that describes the most recent user operation that can be undone.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6848"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12447"> </A>Boolean Q3ViewerGetUndoString (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*string,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*cnt);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6986"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12451"> </A>TQ3Boolean Q3WinViewerGetUndoString (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char               *string,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      stringSize,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      *actualSize );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7209"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12455"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4976"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12464"> </A><TT CLASS="cv">string</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4941"> </A>On entry, a pointer to a buffer. On exit, the buffer is filled with a localized string that describes the most recent user operation in the specified viewer that can be undone. Note that this string does not contain the substring &quot;Undo.&quot;</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12473"> </A><TT CLASS="cv">cnt</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=7559"> </A>On entry, a pointer to an unsigned long integer that specifies the size, in bytes, of the buffer pointed to by the <TT CLASS="cv">string</TT> parameter. On exit, that long integer is set to the number of bytes actually copied into that buffer.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12482"> </A><TT CLASS="cv">stringSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=7561"> </A>On entry, an unsigned long integer that specifies the size, in bytes, of the buffer pointed to by the <TT CLASS="cv">string</TT> parameter.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12491"> </A>actualSize</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=7563"> </A>On exit, a pointer to a long integer that is set to the number of bytes actually copied into the buffer.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4957"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4960"> </A>The <TT CLASS="cv">Q3ViewerGetUndoString</TT> function returns, through the <TT CLASS="cv">string</TT> parameter, a localized string that describes the most recent user action in the viewer specified by the <TT CLASS="cv">theViewer</TT> parameter that can be undone.</P><P CLASS="T1.Text1"><A NAME="pgfId=7576"> </A><TT CLASS="cv">Q3ViewerGetUndoString</TT> also returns, as its function result, a Boolean value that indicates whether you can call the <TT CLASS="cv">Q3ViewerUndo</TT> function to perform the undo operation (<TT CLASS="cv">TRUE</TT>) or not (<TT CLASS="cv">FALSE</TT>).</P><P CLASS="T1.Text1"><A NAME="pgfId=5022"> </A>Typically, you'll use the string returned by <TT CLASS="cv">Q3ViewerGetUndoString</TT> to generate the text for the Undo menu item in the Edit menu. Note, however, that the string returned through the <TT CLASS="cv">string</TT> parameter does not contain the substring &quot;Undo.&quot; You should get the appropriate substring (perhaps from a resource) and conjoin it with the string returned by <TT CLASS="cv">Q3ViewerGetUndoString</TT> to construct the menu item text.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4988"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=4989"> </A>The <TT CLASS="cv">Q3ViewerGetUndoString</TT> function is available only in versions 1.1 and later of the 3D&nbsp;Viewer.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5054"> </A>SEE ALSO</H3><P CLASS="T1.Text1"><A NAME="pgfId=5055"> </A>Use the <TT CLASS="cv">Q3ViewerUndo</TT> function to undo a user operation.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4821"> </A>Q3ViewerGetPict</H2><P CLASS="T1.Text1"><A NAME="pgfId=4823"> </A><A NAME="marker=4822"> </A>You can use the <TT CLASS="cv">Q3ViewerGetPict</TT> function to get a Macintosh <TT CLASS="cv">'pict'</TT> representation of the image currently displayed by a viewer object. This function has no equivalent in the Windows environment.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12502"> </A>PicHandle Q3ViewerGetPict (TQ3ViewerObject theViewer);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12504"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4825"> </A>A viewer object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4826"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4827"> </A>The <TT CLASS="cv">Q3ViewerGetPict</TT> function returns, as its function result, a handle to a Macintosh <TT CLASS="cv">'pict'</TT> structure that contains a representation of the image currently displayed by the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter. You should call <TT CLASS="cv">DisposeHandle</TT> to dispose of the memory occupied by the <TT CLASS="cv">pict</TT> when you're done using it.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4828"> </A>Q3ViewerGetButtonRect</H2><P CLASS="T1.Text1"><A NAME="pgfId=4830"> </A><A NAME="marker=4829"> </A>You can use the <TT CLASS="cv">Q3ViewerGetButtonRect</TT> function to get the rectangle that encloses a viewer button.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6852"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12515"> </A>OSErr Q3ViewerGetButtonRect (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Rect&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*rect);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6992"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12519"> </A>TQ3Status Q3WinViewerGetButtonRect (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      button,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RECT               *rectangle );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7213"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12523"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4832"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12532"> </A><TT CLASS="cv">button</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4833"> </A>A button.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12541"> </A><TT CLASS="cv">rect</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4834"> </A>On exit, the rectangle that enclosed the specified button in the specified viewer.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4835"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4836"> </A><A NAME="marker=8661"> </A>The <TT CLASS="cv">Q3ViewerGetButtonRect</TT> function returns, in the <TT CLASS="cv">rect</TT> parameter, the rectangle that encloses the button specified by the <TT CLASS="cv">button</TT> parameter in the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter. You can use these constants to specify the button whose rectangle you want returned:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=12552"> </A>kQ3ViewerButtonCamera<BR>kQ3ViewerButtonTruck<BR>kQ3ViewerButtonOrbit<BR>kQ3ViewerButtonZoom<BR>kQ3ViewerButtonDolly<BR>kQ3ViewerButtonReset<BR></CODE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4838"> </A>Q3ViewerGetCurrentButton</H2><P CLASS="T1.Text1"><A NAME="pgfId=4840"> </A><A NAME="marker=4839"> </A>You can use the <TT CLASS="cv">Q3ViewerGetCurrentButton</TT> function to get the active button of a viewer.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6854"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12556"> </A>unsigned long Q3ViewerGetCurrentButton (TQ3ViewerObject theViewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6995"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12560"> </A>unsigned long Q3WinViewerGetCurrentButton (TQ3ViewerObject viewer);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7215"> </A>PARAMETER</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12564"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4842"> </A>A viewer object.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4843"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4844"> </A>The <TT CLASS="cv">Q3ViewerGetCurrentButton</TT> function returns, as its function result, the active button of the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter. <TT CLASS="cv">Q3ViewerGetCurrentButton</TT> returns one of these constants:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=12575"> </A>kQ3ViewerButtonTruck<BR>kQ3ViewerButtonOrbit<BR>kQ3ViewerButtonZoom<BR>kQ3ViewerButtonDolly<BR></CODE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4846"> </A>Q3ViewerSetCurrentButton</H2><P CLASS="T1.Text1"><A NAME="pgfId=4848"> </A><A NAME="marker=4847"> </A>You can use the <TT CLASS="cv">Q3ViewerSetCurrentButton</TT> function to set the active button of a viewer pane.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6856"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12579"> </A>OSErr Q3ViewerSetCurrentButton (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6998"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12583"> </A>TQ3Status Q3WinViewerSetCurrentButton (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      button );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7217"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12587"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4850"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12596"> </A><TT CLASS="cv">button</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4851"> </A>A button.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4852"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4853"> </A>The <TT CLASS="cv">Q3ViewerSetCurrentButton</TT> function sets the active button of the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter to the button specified by the <TT CLASS="cv">button</TT> parameter. You can use these constants to specify a button:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=12607"> </A>kQ3ViewerButtonTruck<BR>kQ3ViewerButtonOrbit<BR>kQ3ViewerButtonZoom<BR>kQ3ViewerButtonDolly<BR></CODE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4855"> </A>Q3ViewerGetDimension</H2><P CLASS="T1.Text1"><A NAME="pgfId=4857"> </A><A NAME="marker=4856"> </A>You can use the <TT CLASS="cv">Q3ViewerGetDimension</TT> function to get the current dimensions of the model space in a viewer's view hints object.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6858"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12611"> </A>OSErr Q3ViewerGetDimension (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*width, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*height);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7005"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12615"> </A>TQ3Status Q3WinViewerGetDimension (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      *width,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      *height );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7219"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12619"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4859"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12628"> </A><TT CLASS="cv">width</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4860"> </A>On exit, the width of the pane of the specified viewer.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12637"> </A><TT CLASS="cv">height</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4861"> </A>On exit, the height of the pane of the specified viewer.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4862"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4863"> </A>The <TT CLASS="cv">Q3ViewerGetDimension</TT> function returns, in the <TT CLASS="cv">width</TT> and <TT CLASS="cv">height</TT> parameters, the current width and height of the model space in the view hints object associated with the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter. If there is no such view hints object, <TT CLASS="cv">Q3ViewerGetDimension</TT> returns the width and height of the viewer pane.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=6279"> </A>Q3ViewerSetDimension</H2><P CLASS="T1.Text1"><A NAME="pgfId=6284"> </A>You can use the <TT CLASS="cv">Q3ViewerSetDimension</TT> function to set the current dimensions of the model space in a viewer's view hints object.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6860"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12648"> </A>OSErr Q3ViewerSetDimension (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7008"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12652"> </A>TQ3Status Q3WinViewerSetDimension (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      width,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long      height );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7221"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12656"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6331"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12665"> </A><TT CLASS="cv">width</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6332"> </A>The desired width of the pane of the specified viewer.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12674"> </A><TT CLASS="cv">height</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6333"> </A>The desired height of the pane of the specified viewer.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6316"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=6341"> </A>The <TT CLASS="cv">Q3ViewerSetDimension</TT> function sets the width and height of the model space in the view hints object associated with the viewer object specified by the <TT CLASS="cv">theViewer</TT> parameter to the values specified by the <TT CLASS="cv">width</TT> and <TT CLASS="cv">height</TT> parameters.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3356"> </A>Q3ViewerGetBackgroundColor</H2><P CLASS="T1.Text1"><A NAME="pgfId=3357"> </A><A NAME="marker=699"> </A>You can use the <TT CLASS="cv">Q3ViewerGetBackgroundColor</TT> function to get the background color of a viewer.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6862"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12685"> </A>OSErr Q3ViewerGetBackgroundColor (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ColorARGB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*color);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7011"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12689"> </A>TQ3Status Q3WinViewerGetBackgroundColor (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ColorARGB       *color );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7223"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12693"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5079"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12702"> </A><TT CLASS="cv">color</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3360"> </A>On exit, the current background color.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3361"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3362"> </A>The <TT CLASS="cv">Q3ViewerGetBackgroundColor</TT> function returns, in the <TT CLASS="cv">color</TT> parameter, the background color of the viewer specified by the <TT CLASS="cv">theViewer</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3363"> </A>Q3ViewerSetBackgroundColor</H2><P CLASS="T1.Text1"><A NAME="pgfId=3364"> </A><A NAME="marker=708"> </A>You can use the <TT CLASS="cv">Q3ViewerSetBackgroundColor</TT> function to set the background color of a viewer.</P><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7700"> </A>MAC OS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12713"> </A>OSErr Q3ViewerSetBackgroundColor (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject&nbsp;&nbsp;&nbsp;&nbsp;theViewer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ColorARGB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*color);<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7702"> </A>WINDOWS VERSION</H3><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12717"> </A>TQ3Status Q3WinViewerSetBackgroundColor (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewerObject    viewer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ColorARGB       *color );<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=7225"> </A>PARAMETERS</H3><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12721"> </A><TT CLASS="cv">theViewer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3366"> </A>A viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12730"> </A><TT CLASS="cv">color</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3367"> </A>The desired background color.</DD></DL COMPACT></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3368"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3369"> </A>The <TT CLASS="cv">Q3ViewerSetBackgroundColor</TT> function sets the background color of the viewer specified by the <TT CLASS="cv">theViewer</TT> parameter to the color specified by the <TT CLASS="cv">color</TT> parameter.</P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>