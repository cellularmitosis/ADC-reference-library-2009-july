{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fnil\fcharset77 LucidaGrande-Bold;\f1\fnil\fcharset77 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
\vieww19400\viewh13560\viewkind0
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\qj

\f0\b\fs36 \cf0 ButtonMadness
\f1\b0\fs20 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural
\cf0 August 3, 2007\
\
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\qj
\cf0 "ButtonMadness" is a Cocoa application that demonstrates how to use the various type of buttons.  It demonstrates two approaches: 1) creating buttons using Interface Builder, 2) creating the same buttons using code.  Apple recommends that you of course design your application with Interface Builder whenever possible.  However, there may be an occasion when you need to do control creation using code in situations where you don't exactly know the make up of your UI until the application or user loads something.  This sample shows both approaches as it gives you an idea of the "magic" that goes on behind the scenes in Interface Builder to create the standard UI elements.  So this sample gives you the knowledge in programatically creating these buttons, affect their behavior, and setting their target/action connections.\
\
\pard\pardeftab720\ql\qnatural
\cf0 \

\f0\b General Approach
\f1\b0 \
Create a "CustomView" placeholder in the nib file - this will determine the placement and size of the control.\
	Note that you may choose to not use a placeholder view and determine its location coordinates and size on your own.\
	For convenience, this sample simply leverages the CustomView for easy control placement.\
\uc0\u8232 At nib loading time (awakeFromNib, or windowControllerDidLoadNib if Document-based) -\u8232 	Create an instance of the desired class, and set its frame to match the placeholder.\u8232 	Set up the attributes of the control.\u8232 	Add the newly created control as a subView of the parent view (in our case NSBox).\u8232 	Remove the placeholder CustomView.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural

\f0\b \cf0 Sample Requirements
\f1\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qj\pardirnatural
\cf0 The supplied Xcode project was created using Xcode v2.4 running under Mac OS X 10.4.x or later. The project will create a Universal Binary.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural

\f0\b \cf0 About the Sample
\f1\b0 \
"ButtonMadness" shows off the following:\
\
1. NSPopUpButton - Pull down and popup style menus.\
\
2. NSButton - Icon buttons: normal or momentary type buttons.  It also includes a special custom button "DropDownButton" for menus.\
\
3. NSMatrix - A matrix of Radio cells.\
\
4. NSColorWell\
\
5. NSSegmentedControl - Introduces a special Objective-C category to un-select all segments.\
\
6. NSLevelIndicator - Includes the ability to change them to the four known indicator styles.\
\
To examine the action results of these controls, refer to the Console Log or Run Log.\
\
\

\f0\b Using the Sample
\f1\b0 \
Simply build and run the sample using Xcode.  Play with the various buttons to see how they operate.  Look over the nib file to see how they are setup, then look at the code to see how they are programatically created.\
\
	\

\f0\b Changes from Previous Versions
\f1\b0 \
n/a\
\
\

\f0\b Feedback and Bug Reports
\f1\b0 \
Please send all feedback about this sample by connecting to the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/contact/feedback.html"}}{\fldrslt Contact ADC}} page.\
Please submit any bug reports about this sample to the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/bugreporter"}}{\fldrslt Bug Reporting}} page.\
\
\

\f0\b Developer Technical Support\
\pard\pardeftab720\sa200\qj

\f1\b0 \cf0 The Apple Developer Connection Developer Technical Support (DTS) team is made up of highly qualified engineers with development expertise in key Apple technologies. Whether you need direct one-on-one support troubleshooting issues, hands-on assistance to accelerate a project, or helpful guidance to the right documentation and sample code, Apple engineers are ready to help you.  Refer to the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/technicalsupport/"}}{\fldrslt Apple Developer Technical Support}} page.}