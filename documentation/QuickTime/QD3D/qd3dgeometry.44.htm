<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Ellipses</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=29411"> </A><A NAME="40863"> </A>Creating and Editing Ellipses</H1><P CLASS="T1.Text1"><A NAME="pgfId=29416"> </A><A NAME="marker=29412"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate ellipses. See <A HREF="qd3dgeometry.2d.htm#29378" CLASS="XRef">&quot;Ellipses&quot;</A> for the definition of an ellipse.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21728"> </A>Q3Ellipse_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=21730"> </A><A NAME="marker=21729"> </A>You can use the <TT CLASS="cv">Q3Ellipse_New</TT> function to create a new ellipse.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47035"> </A>TQ3GeometryObject Q3Ellipse_New (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3EllipseData *ellipseData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47037"> </A><TT CLASS="cv">ellipseData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21732"> </A>A pointer to a <TT CLASS="cv">TQ3EllipseData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21733"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21734"> </A>The <TT CLASS="cv">Q3Ellipse_New</TT> function returns, as its function result, a new ellipse having the shape and attributes specified by the <TT CLASS="cv">ellipseData</TT> parameter. If a new ellipse could not be created, <TT CLASS="cv">Q3Ellipse_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21735"> </A>Q3Ellipse_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=21737"> </A><A NAME="marker=21736"> </A>You can use the <TT CLASS="cv">Q3Ellipse_Submit</TT> function to submit an immediate ellipse for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47048"> </A>TQ3Status Q3Ellipse_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3EllipseData *ellipseData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47050"> </A><TT CLASS="cv">ellipseData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21739"> </A>A pointer to a <TT CLASS="cv">TQ3EllipseData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47059"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21740"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21741"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21742"> </A>The <TT CLASS="cv">Q3Ellipse_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate ellipse whose shape and attribute set are specified by the <TT CLASS="cv">ellipseData</TT> parameter. The ellipse is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21743"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=21744"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21745"> </A>Q3Ellipse_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=21747"> </A><A NAME="marker=21746"> </A>You can use the <TT CLASS="cv">Q3Ellipse_GetData</TT> function to get the data that defines an ellipse and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47070"> </A>TQ3Status Q3Ellipse_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipse, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3EllipseData *ellipseData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47072"> </A><TT CLASS="cv">ellipse</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21749"> </A>An ellipse.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47081"> </A><TT CLASS="cv">ellipseData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21750"> </A>On exit, a pointer to a <TT CLASS="cv">TQ3EllipseData</TT> structure that contains information about the ellipse specified by the <TT CLASS="cv">ellipse</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21751"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21752"> </A>The <TT CLASS="cv">Q3Ellipse_GetData</TT> function returns, through the <TT CLASS="cv">ellipseData</TT> parameter, information about the ellipse specified by the <TT CLASS="cv">ellipse</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3EllipseData</TT> structure internally; you must call <TT CLASS="cv">Q3Ellipse_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21756"> </A>Q3Ellipse_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=21758"> </A><A NAME="marker=21757"> </A>You can use the <TT CLASS="cv">Q3Ellipse_SetData</TT> function to set the data that defines an ellipse and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47092"> </A>TQ3Status Q3Ellipse_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipse, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3EllipseData *ellipseData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47094"> </A><TT CLASS="cv">ellipse</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21760"> </A>An ellipse.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47103"> </A><TT CLASS="cv">ellipseData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21761"> </A>A pointer to a <TT CLASS="cv">TQ3EllipseData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21762"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21763"> </A>The <TT CLASS="cv">Q3Ellipse_SetData</TT> function sets the data associated with the ellipse specified by the <TT CLASS="cv">ellipse</TT> parameter to the data specified by the <TT CLASS="cv">ellipseData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21764"> </A>Q3Ellipse_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=21766"> </A><A NAME="marker=21765"> </A>You can use the <TT CLASS="cv">Q3Ellipse_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3Ellipse_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47118"> </A>TQ3Status Q3Ellipse_EmptyData (TQ3EllipseData *ellipseData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47120"> </A><TT CLASS="cv">ellipseData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21768"> </A>A pointer to a <TT CLASS="cv">TQ3EllipseData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21769"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21770"> </A>The <TT CLASS="cv">Q3Ellipse_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3EllipseData</TT> structure pointed to by the <TT CLASS="cv">ellipseData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3Ellipse_GetData</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21771"> </A>Q3Ellipse_GetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=21773"> </A><A NAME="marker=21772"> </A>You can use the <TT CLASS="cv">Q3Ellipse_GetOrigin</TT> function to get the origin of an ellipse.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47131"> </A>TQ3Status Q3Ellipse_GetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipse, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47133"> </A><TT CLASS="cv">ellipse</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21775"> </A>An ellipse.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47142"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21776"> </A>On exit, the origin of the specified ellipse.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21777"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21778"> </A>The <TT CLASS="cv">Q3Ellipse_GetOrigin</TT> function returns, in the <TT CLASS="cv">origin</TT> parameter, the origin of the ellipse specified by the <TT CLASS="cv">ellipse</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21779"> </A>Q3Ellipse_SetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=21781"> </A><A NAME="marker=21780"> </A>You can use the <TT CLASS="cv">Q3Ellipse_SetOrigin</TT> function to set the origin of an ellipse.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47153"> </A>TQ3Status Q3Ellipse_SetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipse, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47155"> </A><TT CLASS="cv">ellipse</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21783"> </A>An ellipse.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47164"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21784"> </A>The desired origin of the specified ellipse.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21785"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21786"> </A>The <TT CLASS="cv">Q3Ellipse_SetOrigin</TT> function sets the origin of the ellipse specified by the <TT CLASS="cv">ellipse</TT> parameter to that specified in the <TT CLASS="cv">origin</TT> parameter</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21787"> </A>Q3Ellipse_GetMajorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=21789"> </A><A NAME="marker=21788"> </A>You can use the <TT CLASS="cv">Q3Ellipse_GetMajorRadius</TT> function to get the major radius of an ellipse.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47175"> </A>TQ3Status Q3Ellipse_GetMajorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipse, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *majorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47177"> </A><TT CLASS="cv">ellipse</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21791"> </A>An ellipse.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47186"> </A><TT CLASS="cv">majorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21792"> </A>On exit, the major radius of the specified ellipse.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21793"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21794"> </A>The <TT CLASS="cv">Q3Ellipse_GetMajorRadius</TT> function returns, in the <TT CLASS="cv">majorRadius</TT> parameter, the major radius of the ellipse specified by the <TT CLASS="cv">ellipse</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21795"> </A>Q3Ellipse_SetMajorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=21797"> </A><A NAME="marker=21796"> </A>You can use the <TT CLASS="cv">Q3Ellipse_SetMajorRadius</TT> function to set the major radius of an ellipse.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47197"> </A>TQ3Status Q3Ellipse_SetMajorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipse, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *majorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47199"> </A><TT CLASS="cv">ellipse</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21799"> </A>An ellipse.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47208"> </A><TT CLASS="cv">majorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21800"> </A>The desired major radius of the specified ellipse.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21801"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21802"> </A>The <TT CLASS="cv">Q3Ellipse_SetMajorRadius</TT> function sets the major radius of the ellipse specified by the <TT CLASS="cv">ellipse</TT> parameter to that specified in the <TT CLASS="cv">majorRadius</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21803"> </A>Q3Ellipse_GetMinorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=21805"> </A><A NAME="marker=21804"> </A>You can use the <TT CLASS="cv">Q3Ellipse_GetMinorRadius</TT> function to get the minor radius of an ellipse.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47219"> </A>TQ3Status Q3Ellipse_GetMinorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipse, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *minorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47221"> </A><TT CLASS="cv">ellipse</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21807"> </A>An ellipse.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47230"> </A><TT CLASS="cv">minorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21808"> </A>On exit, the minor radius of the specified ellipse.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21809"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21810"> </A>The <TT CLASS="cv">Q3Ellipse_GetMinorRadius</TT> function returns, in the <TT CLASS="cv">minorRadius</TT> parameter, the minor radius of the ellipse specified by the <TT CLASS="cv">ellipse</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21811"> </A>Q3Ellipse_SetMinorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=21813"> </A><A NAME="marker=21812"> </A>You can use the <TT CLASS="cv">Q3Ellipse_SetMinorRadius</TT> function to set the minor radius of an ellipse.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47241"> </A>TQ3Status Q3Ellipse_SetMinorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipse, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *minorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47243"> </A><TT CLASS="cv">ellipse</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21815"> </A>An ellipse.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47252"> </A><TT CLASS="cv">minorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21816"> </A>The desired minor radius of the specified ellipse.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21817"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21818"> </A>The <TT CLASS="cv">Q3Ellipse_SetMinorRadius</TT> function sets the minor radius of the ellipse specified by the <TT CLASS="cv">ellipse</TT> parameter to that specified in the <TT CLASS="cv">minorRadius</TT> parameter.<A NAME="marker=36569"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>