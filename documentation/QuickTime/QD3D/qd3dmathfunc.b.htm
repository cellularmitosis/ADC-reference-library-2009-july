<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Calculating Distances Between Points</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3304"> </A>Calculating Distances Between Points</H1><P CLASS="T1.Text1"><A NAME="pgfId=3309"> </A><A NAME="marker=3305"> </A>QuickDraw&nbsp;3D provides routines that you can use to determine the distance between two points. QuickDraw&nbsp;3D also provides routines that you can use to determine the square of the distance between two points. These distance-squared routines are much faster than the simple distance routines and are therefore recommended for situations in which only relative distances are important to you.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3313"> </A>Q3Point2D_Distance</H2><P CLASS="T1.Text1"><A NAME="pgfId=3314"> </A><A NAME="marker=895"> </A>You can use the <TT CLASS="cv">Q3Point2D_Distance</TT> function to determine the distance between two two-dimensional points.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=7971"> </A>float Q3Point2D_Distance (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point2D *p1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point2D *p2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7973"> </A><TT CLASS="cv">p1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3316"> </A>A two-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7982"> </A><TT CLASS="cv">p2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3317"> </A>A two-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3318"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3319"> </A>The <TT CLASS="cv">Q3Point2D_Distance</TT> function returns, as its function result, the absolute value of the distance between points <TT CLASS="cv">p1</TT> and <TT CLASS="cv">p2</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3320"> </A>Q3Param2D_Distance</H2><P CLASS="T1.Text1"><A NAME="pgfId=3322"> </A><A NAME="marker=3321"> </A><A NAME="marker=905"> </A>You can use the <TT CLASS="cv">Q3Param2D_Distance</TT> function to determine the distance between two two-dimensional parametric points.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=7993"> </A>float Q3Param2D_Distance (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Param2D *p1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Param2D *p2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7995"> </A><TT CLASS="cv">p1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3324"> </A>A two-dimensional parametric point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8004"> </A><TT CLASS="cv">p2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3325"> </A>A two-dimensional parametric point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3326"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3327"> </A>The <TT CLASS="cv">Q3Param2D_Distance</TT> function returns, as its function result, the absolute value of the distance between parametric points <TT CLASS="cv">p1</TT> and <TT CLASS="cv">p2</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3328"> </A>Q3Point3D_Distance</H2><P CLASS="T1.Text1"><A NAME="pgfId=3329"> </A><A NAME="marker=914"> </A>You can use the <TT CLASS="cv">Q3Point3D_Distance</TT> function to determine the distance between two three-dimensional points.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8015"> </A>float Q3Point3D_Distance (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *p1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *p2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8017"> </A><TT CLASS="cv">p1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3331"> </A>A three-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8026"> </A><TT CLASS="cv">p2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3332"> </A>A three-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3333"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3334"> </A>The <TT CLASS="cv">Q3Point3D_Distance</TT> function returns, as its function result, the absolute value of the distance between points <TT CLASS="cv">p1</TT> and <TT CLASS="cv">p2</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3335"> </A>Q3RationalPoint3D_Distance</H2><P CLASS="T1.Text1"><A NAME="pgfId=3337"> </A><A NAME="marker=3336"> </A><A NAME="marker=924"> </A>You can use the <TT CLASS="cv">Q3RationalPoint3D_Distance</TT> function to determine the distance between two three-dimensional rational points.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8037"> </A>float Q3RationalPoint3D_Distance (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint3D *p1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint3D *p2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8039"> </A><TT CLASS="cv">p1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3339"> </A>A rational three-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8048"> </A><TT CLASS="cv">p2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3340"> </A>A rational three-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3341"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3342"> </A>The <TT CLASS="cv">Q3RationalPoint3D_Distance</TT> function returns, as its function result, the absolute value of the distance between points <TT CLASS="cv">p1</TT> and <TT CLASS="cv">p2</TT>. The distance returned is a two-dimensional distance.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3343"> </A>Q3RationalPoint4D_Distance</H2><P CLASS="T1.Text1"><A NAME="pgfId=3345"> </A><A NAME="marker=3344"> </A><A NAME="marker=934"> </A>You can use the <TT CLASS="cv">Q3RationalPoint4D_Distance</TT> function to determine the distance between two four-dimensional rational points.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8059"> </A>float Q3RationalPoint4D_Distance (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint4D *p1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint4D *p2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8061"> </A><TT CLASS="cv">p1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3347"> </A>A rational four-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8070"> </A><TT CLASS="cv">p2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3348"> </A>A rational four-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3349"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3350"> </A>The <TT CLASS="cv">Q3RationalPoint4D_Distance</TT> function returns, as its function result, the absolute value of the distance between points <TT CLASS="cv">p1</TT> and <TT CLASS="cv">p2</TT>. The distance returned is a three-dimensional distance.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3351"> </A>Q3Point2D_DistanceSquared</H2><P CLASS="T1.Text1"><A NAME="pgfId=3352"> </A><A NAME="marker=943"> </A>You can use the <TT CLASS="cv">Q3Point2D_DistanceSquared</TT> function to determine the square of the distance between two two-dimensional points.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8081"> </A>float Q3Point2D_DistanceSquared (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point2D *p1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point2D *p2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8083"> </A><TT CLASS="cv">p1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3354"> </A>A two-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8092"> </A><TT CLASS="cv">p2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3355"> </A>A two-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3356"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3357"> </A>The <TT CLASS="cv">Q3Point2D_DistanceSquared</TT> function returns, as its function result, the square of the distance between points <TT CLASS="cv">p1</TT> and <TT CLASS="cv">p2</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3358"> </A>Q3Param2D_DistanceSquared</H2><P CLASS="T1.Text1"><A NAME="pgfId=3360"> </A><A NAME="marker=3359"> </A><A NAME="marker=953"> </A>You can use the <TT CLASS="cv">Q3Param2D_DistanceSquared</TT> function to determine the square of the distance between two two-dimensional parametric points.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8103"> </A>float Q3Param2D_DistanceSquared (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Param2D *p1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Param2D *p2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8105"> </A><TT CLASS="cv">p1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3362"> </A>A two-dimensional parametric point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8114"> </A><TT CLASS="cv">p2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3363"> </A>A two-dimensional parametric point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3364"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3365"> </A>The <TT CLASS="cv">Q3Param2D_DistanceSquared</TT> function returns, as its function result, the square of the distance between parametric points <TT CLASS="cv">p1</TT> and <TT CLASS="cv">p2</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3366"> </A>Q3Point3D_DistanceSquared</H2><P CLASS="T1.Text1"><A NAME="pgfId=3367"> </A><A NAME="marker=962"> </A>You can use the <TT CLASS="cv">Q3Point3D_DistanceSquared</TT> function to determine the square of the distance between two three-dimensional points.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8125"> </A>float Q3Point3D_DistanceSquared (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *p1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *p2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8127"> </A><TT CLASS="cv">p1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3369"> </A>A three-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8136"> </A><TT CLASS="cv">p2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3370"> </A>A three-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3371"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3372"> </A>The <TT CLASS="cv">Q3Point3D_DistanceSquared</TT> function returns, as its function result, the square of the distance between points <TT CLASS="cv">p1</TT> and <TT CLASS="cv">p2</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3373"> </A>Q3RationalPoint3D_DistanceSquared</H2><P CLASS="T1.Text1"><A NAME="pgfId=3375"> </A><A NAME="marker=3374"> </A><A NAME="marker=972"> </A>You can use the <TT CLASS="cv">Q3RationalPoint3D_DistanceSquared</TT> function to determine the square of the distance between two rational three-dimensional points.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8147"> </A>float Q3RationalPoint3D_DistanceSquared (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint3D *p1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint3D *p2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8149"> </A><TT CLASS="cv">p1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3377"> </A>A rational three-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8158"> </A><TT CLASS="cv">p2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3378"> </A>A rational three-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3379"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3380"> </A>The <TT CLASS="cv">Q3RationalPoint3D_DistanceSquared</TT> function returns, as its function result, the square of the distance between points <TT CLASS="cv">p1</TT> and <TT CLASS="cv">p2</TT>. The distance returned is a two-dimensional distance.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3381"> </A>Q3RationalPoint4D_DistanceSquared</H2><P CLASS="T1.Text1"><A NAME="pgfId=3383"> </A><A NAME="marker=3382"> </A><A NAME="marker=982"> </A>You can use the <TT CLASS="cv">Q3RationalPoint4D_DistanceSquared</TT> function to determine the square of the distance between two rational four-dimensional points.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8169"> </A>float Q3RationalPoint4D_DistanceSquared (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint4D *p1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint4D *p2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8171"> </A><TT CLASS="cv">p1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3385"> </A>A rational four-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8180"> </A><TT CLASS="cv">p2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3386"> </A>A rational four-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3387"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3388"> </A>The <TT CLASS="cv">Q3RationalPoint4D_DistanceSquared</TT> function returns, as its function result, the square of the distance between points <TT CLASS="cv">p1</TT> and <TT CLASS="cv">p2</TT>. The distance returned is a three-dimensional distance.<A NAME="marker=3389"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>