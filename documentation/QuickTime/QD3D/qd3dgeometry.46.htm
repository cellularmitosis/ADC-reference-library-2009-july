<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing NURB Patches</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=5896"> </A><A NAME="34208"> </A>Creating and Editing NURB Patches</H1><P CLASS="T1.Text1"><A NAME="pgfId=5901"> </A><A NAME="marker=5897"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate NURB patches. See <A HREF="qd3dgeometry.2f.htm#29985" CLASS="XRef">&quot;NURB Patches&quot;</A> for the definition of a NURB patch.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5905"> </A>Q3NURBPatch_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=5906"> </A><A NAME="marker=4346"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_New</TT> function to create a new NURB patch.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47482"> </A>TQ3GeometryObject Q3NURBPatch_New (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3NURBPatchData *nurbPatchData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47484"> </A><TT CLASS="cv">nurbPatchData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5908"> </A> A pointer to a <TT CLASS="cv">TQ3NURBPatchData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5909"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=12023"> </A>The <TT CLASS="cv">Q3NURBPatch_New</TT> function returns, as its function result, a new NURB patch having the shape and attributes specified by the <TT CLASS="cv">nurbPatchData</TT> parameter. If a new NURB patch could not be created, <TT CLASS="cv">Q3NURBPatch_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5911"> </A>Q3NURBPatch_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=5912"> </A><A NAME="marker=4354"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_Submit</TT> function to submit an immediate NURB patch for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47496"> </A>TQ3Status Q3NURBPatch_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3NURBPatchData *nurbPatchData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47498"> </A><TT CLASS="cv">nurbPatchData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5914"> </A> A pointer to a <TT CLASS="cv">TQ3NURBPatchData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47508"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5915"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5916"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5917"> </A>The <TT CLASS="cv">Q3NURBPatch_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate NURB patch whose shape and attribute set are specified by the <TT CLASS="cv">nurbPatchData</TT> parameter. The NURB patch is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5918"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=5919"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5927"> </A>Q3NURBPatch_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=5928"> </A><A NAME="marker=4374"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_GetData</TT> function to get the data that defines a NURB patch and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47519"> </A>TQ3Status Q3NURBPatch_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject nurbPatch, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3NURBPatchData *nurbPatchData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47521"> </A><TT CLASS="cv">nurbPatch</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5930"> </A>A NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47530"> </A><TT CLASS="cv">nurbPatchData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5931"> </A> On exit, a pointer to a <TT CLASS="cv">TQ3NURBPatchData</TT> structure that contains information about the NURB patch specified by the <TT CLASS="cv">nurbPatch</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5932"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5933"> </A>The <TT CLASS="cv">Q3NURBPatch_GetData</TT> function returns, through the <TT CLASS="cv">nurbPatchData</TT> parameter, information about the NURB patch specified by the <TT CLASS="cv">nurbPatch</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3NURBPatchData</TT> structure internally; you must call <TT CLASS="cv">Q3NURBPatch_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5937"> </A>Q3NURBPatch_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=5938"> </A><A NAME="marker=4386"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_SetData</TT> function to set the data that defines a NURB patch and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47546"> </A>TQ3Status Q3NURBPatch_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject nurbPatch, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3NURBPatchData *nurbPatchData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47548"> </A><TT CLASS="cv">nurbPatch</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5940"> </A>A NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47557"> </A><TT CLASS="cv">nurbPatchData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5941"> </A> A pointer to a <TT CLASS="cv">TQ3NURBPatchData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5942"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5943"> </A>The <TT CLASS="cv">Q3NURBPatch_SetData</TT> function sets the data associated with the NURB patch specified by the <TT CLASS="cv">nurbPatch</TT> parameter to the data specified by the <TT CLASS="cv">nurbPatchData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5944"> </A>Q3NURBPatch_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=5945"> </A><A NAME="marker=4395"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3NURBPatch_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47569"> </A>TQ3Status Q3NURBPatch_EmptyData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3NURBPatchData *nurbPatchData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47571"> </A><TT CLASS="cv">nurbPatchData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5947"> </A> A pointer to a <TT CLASS="cv">TQ3NURBPatchData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5948"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5949"> </A>The <TT CLASS="cv">Q3NURBPatch_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3NURBPatchData</TT> structure pointed to by the <TT CLASS="cv">nurbPatchData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3NURBPatch_GetData</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5950"> </A>Q3NURBPatch_GetControlPoint</H2><P CLASS="T1.Text1"><A NAME="pgfId=5951"> </A><A NAME="marker=4403"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_GetControlPoint</TT> function to get a control point for a NURB patch.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47583"> </A>TQ3Status Q3NURBPatch_GetControlPoint (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject nurbPatch, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long rowIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long columnIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3RationalPoint4D *point4D);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47585"> </A><TT CLASS="cv">nurbPatch</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5953"> </A>A NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47594"> </A><TT CLASS="cv">rowIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5954"> </A>A row index into the array of control points for the specified NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47603"> </A><TT CLASS="cv">columnIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5955"> </A>A column index into the array of control points for the specified NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47612"> </A><TT CLASS="cv">point4D</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5956"> </A>On exit, the control point having the specified row and column indices in the <TT CLASS="cv">controlPoints</TT> array of control points for the specified NURB patch.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5957"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5958"> </A>The <TT CLASS="cv">Q3NURBPatch_GetControlPoint</TT> function returns, in the <TT CLASS="cv">point4D</TT> parameter, the four-dimensional control point of the NURB patch specified by the <TT CLASS="cv">nurbPatch</TT> parameter having the row and column indices <TT CLASS="cv">rowIndex</TT> and <TT CLASS="cv">columnIndex</TT> in the <TT CLASS="cv">controlPoints</TT> array of control points.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5959"> </A>Q3NURBPatch_SetControlPoint</H2><P CLASS="T1.Text1"><A NAME="pgfId=5960"> </A><A NAME="marker=4414"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_SetControlPoint</TT> function to set a control point for a NURB patch.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47623"> </A>TQ3Status Q3NURBPatch_SetControlPoint (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject nurbPatch, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long rowIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long columnIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint4D *point4D);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47625"> </A><TT CLASS="cv">nurbPatch</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5962"> </A>A NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47634"> </A><TT CLASS="cv">rowIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5963"> </A>A row index into the array of control points for the specified NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47643"> </A><TT CLASS="cv">columnIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5964"> </A>A column index into the array of control points for the specified NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47652"> </A><TT CLASS="cv">point4D</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5965"> </A>The desired four-dimensional control point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5966"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5967"> </A>The <TT CLASS="cv">Q3NURBPatch_SetControlPoint</TT> function sets the four-dimensional control point having the row and column indices <TT CLASS="cv">rowIndex</TT> and <TT CLASS="cv">columnIndex</TT> in the <TT CLASS="cv">controlPoints</TT> array of control points of the NURB patch specified by the <TT CLASS="cv">nurbPatch</TT> parameter to the point specified by the <TT CLASS="cv">point4D</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5968"> </A>Q3NURBPatch_GetUKnot</H2><P CLASS="T1.Text1"><A NAME="pgfId=5969"> </A><A NAME="marker=4425"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_GetUKnot</TT> function to get the value of a knot in the <I CLASS="italics">u</I> parametric direction.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47663"> </A>TQ3Status Q3NURBPatch_GetUKnot (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject nurbPatch, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long knotIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float *knotValue);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47665"> </A><TT CLASS="cv">nurbPatch</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5971"> </A>A NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47674"> </A><TT CLASS="cv">knotIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5972"> </A>An index into the <TT CLASS="cv">uKnots</TT> field of the specified NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47683"> </A><TT CLASS="cv">knotValue</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5973"> </A>On exit, the value of the specified knot.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5974"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5975"> </A>The <TT CLASS="cv">Q3NURBPatch_GetUKnot</TT> function returns, in the <TT CLASS="cv">knotValue</TT> parameter, the knot value of the NURB patch specified by the <TT CLASS="cv">nurbPatch</TT> parameter having the knot index specified by the <TT CLASS="cv">knotIndex</TT> parameter in the <TT CLASS="cv">uKnots</TT> array of <I CLASS="italics">u</I> knots.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5976"> </A>Q3NURBPatch_SetUKnot</H2><P CLASS="T1.Text1"><A NAME="pgfId=5977"> </A><A NAME="marker=4435"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_SetUKnot</TT> function to set the value of a knot in the <I CLASS="italics">u</I> parametric direction.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47694"> </A>TQ3Status Q3NURBPatch_SetUKnot (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject nurbPatch, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long knotIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float knotValue);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47696"> </A><TT CLASS="cv">nurbPatch</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5979"> </A>A NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47705"> </A><TT CLASS="cv">knotIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5980"> </A>An index into the <TT CLASS="cv">uKnots</TT> field of the specified NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47714"> </A><TT CLASS="cv">knotValue</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5981"> </A>The desired value of the specified knot.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5982"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5983"> </A>The <TT CLASS="cv">Q3NURBPatch_SetUKnot</TT> function sets the knot value of the NURB patch specified by the <TT CLASS="cv">nurbPatch</TT> parameter having the knot index specified by the <TT CLASS="cv">knotIndex</TT> parameter in the <TT CLASS="cv">uKnots</TT> array of <I CLASS="italics">u</I> knots to the value specified by the <TT CLASS="cv">knotValue</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5984"> </A>Q3NURBPatch_GetVKnot</H2><P CLASS="T1.Text1"><A NAME="pgfId=5985"> </A><A NAME="marker=4445"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_GetVKnot</TT> function to get the value of a knot in the <I CLASS="italics">v</I> parametric direction.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47725"> </A>TQ3Status Q3NURBPatch_GetVKnot (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject nurbPatch, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long knotIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float *knotValue);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47727"> </A><TT CLASS="cv">nurbPatch</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5987"> </A>A NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47736"> </A><TT CLASS="cv">knotIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5988"> </A>An index into the <TT CLASS="cv">vKnots</TT> field of the specified NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47745"> </A><TT CLASS="cv">knotValue</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5989"> </A>On exit, the value of the specified knot.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5990"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5991"> </A>The <TT CLASS="cv">Q3NURBPatch_GetVKnot</TT> function returns, in the <TT CLASS="cv">knotValue</TT> parameter, the knot value of the NURB patch specified by the <TT CLASS="cv">nurbPatch</TT> parameter having the knot index specified by the <TT CLASS="cv">knotIndex</TT> parameter in the <TT CLASS="cv">vKnots</TT> array of <I CLASS="italics">v</I> knots.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5992"> </A>Q3NURBPatch_SetVKnot</H2><P CLASS="T1.Text1"><A NAME="pgfId=5993"> </A><A NAME="marker=4455"> </A>You can use the <TT CLASS="cv">Q3NURBPatch_SetVKnot</TT> function to set the value of a knot in the <I CLASS="italics">v</I> parametric direction.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47756"> </A>TQ3Status Q3NURBPatch_SetVKnot (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject nurbPatch, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long knotIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float knotValue);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47758"> </A><TT CLASS="cv">nurbPatch</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5995"> </A>A NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47767"> </A><TT CLASS="cv">knotIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5996"> </A>An index into the <TT CLASS="cv">vKnots</TT> field of the specified NURB patch.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47776"> </A><TT CLASS="cv">knotValue</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5997"> </A>The desired value of the specified knot.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5998"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5999"> </A>The <TT CLASS="cv">Q3NURBPatch_SetVKnot</TT> function sets the knot value of the NURB patch specified by the <TT CLASS="cv">nurbPatch</TT> parameter having the knot index specified by the <TT CLASS="cv">knotIndex</TT> parameter in the <TT CLASS="cv">vKnots</TT> array of <I CLASS="italics">v</I> knots to the value specified by the <TT CLASS="cv">knotValue</TT> parameter.<A NAME="marker=6000"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>