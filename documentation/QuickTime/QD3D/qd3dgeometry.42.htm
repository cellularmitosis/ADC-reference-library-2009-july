<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Trimeshes</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=29383"> </A>Creating and Editing Trimeshes</H1><P CLASS="T1.Text1"><A NAME="pgfId=29483"> </A><A NAME="marker=29479"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate trimeshes. See <A HREF="qd3dgeometry.2b.htm#19409" CLASS="XRef">&quot;Trimeshes&quot;</A> for the definition of a trimesh.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=29519"> </A>Q3TriMesh_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=29524"> </A>You can use the <TT CLASS="cv">Q3TriMesh_New</TT> function to create a new trimesh.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46594"> </A>TQ3GeometryObject Q3TriMesh_New (const TQ3TriMeshData *triMeshData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46596"> </A><TT CLASS="cv">triMeshData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=29531"> </A> A pointer to a <TT CLASS="cv">TQ3TriMeshData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=29542"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30418"> </A>The <TT CLASS="cv">Q3TriMesh_New</TT> function returns, as its function result, a new trimesh having the shape and attributes specified by the <TT CLASS="cv">triMeshData</TT> parameter. If a new trimesh could not be created, <TT CLASS="cv">Q3TriMesh_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=29555"> </A>Q3TriMesh_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=29560"> </A>You can use the <TT CLASS="cv">Q3TriMesh_Submit</TT> function to submit an immediate trimesh for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46607"> </A>TQ3Status Q3TriMesh_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3TriMeshData *triMeshData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46609"> </A><TT CLASS="cv">triMeshData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30954"> </A> A pointer to a <TT CLASS="cv">TQ3TriMeshData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46618"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=29572"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=29583"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30416"> </A>The <TT CLASS="cv">Q3TriMesh_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate trimesh whose shape and attribute set are specified by the <TT CLASS="cv">triMeshData</TT> parameter. The trimesh is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=30962"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=30963"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=29595"> </A>Q3TriMesh_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=29600"> </A>You can use the <TT CLASS="cv">Q3TriMesh_GetData</TT> function to get the data that defines a trimesh and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46629"> </A>TQ3Status Q3TriMesh_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject triMesh, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TriMeshData *triMeshData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46631"> </A><TT CLASS="cv">triMesh</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30336"> </A>A trimesh.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46640"> </A><TT CLASS="cv">triMeshData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=29612"> </A>On exit, a pointer to a <TT CLASS="cv">TQ3TriMeshData</TT> structure that contains information about the trimesh specified by the <TT CLASS="cv">triMesh</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=29623"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30414"> </A>The <TT CLASS="cv">Q3TriMesh_GetData</TT> function returns, through the <TT CLASS="cv">triMeshData</TT> parameter, information about the trimesh specified by the <TT CLASS="cv">triMesh</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3TriMeshData</TT> structure internally; you must call <TT CLASS="cv">Q3TriMesh_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=29639"> </A>Q3TriMesh_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=29644"> </A>You can use the <TT CLASS="cv">Q3TriMesh_SetData</TT> function to set the data that defines a trimesh and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46651"> </A>TQ3Status Q3TriMesh_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject triMesh,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3TriMeshData *triMeshData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46653"> </A><TT CLASS="cv">triMesh</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=29651"> </A>A trimesh.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46662"> </A><TT CLASS="cv">triMeshData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30956"> </A> A pointer to a <TT CLASS="cv">TQ3TriMeshData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=29667"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30412"> </A>The <TT CLASS="cv">Q3TriMesh_SetData</TT> function sets the data associated with the trimesh specified by the <TT CLASS="cv">triMesh</TT> parameter to the data specified by the <TT CLASS="cv">triMeshData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=29679"> </A>Q3TriMesh_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=30348"> </A>You can use the <TT CLASS="cv">Q3TriMesh_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3TriMesh_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46673"> </A>TQ3Status Q3TriMesh_EmptyData (TQ3TriMeshData *triMeshData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46675"> </A><TT CLASS="cv">triMeshData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30958"> </A> A pointer to a <TT CLASS="cv">TQ3TriMeshData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=29702"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30410"> </A>The <TT CLASS="cv">Q3TriMesh_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3TriMeshData</TT> structure pointed to by the <TT CLASS="cv">triMeshData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3TriMesh_GetData</TT>.<A NAME="marker=29494"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>