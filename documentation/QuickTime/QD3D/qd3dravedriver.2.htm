<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> About QuickDraw&nbsp;3D RAVE</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H1.Heading1"><A NAME="pgfId=4773"> </A>About QuickDraw&nbsp;3D RAVE</H1><P CLASS="T1.Text1"><A NAME="pgfId=43959"> </A><A NAME="marker=43955"> </A>The <B CLASS="bold">QuickDraw&nbsp;3D Renderer Acceleration Virtual Engine</B> (or, more briefly, <B CLASS="bold">QuickDraw&nbsp;3D RAVE</B>) is the part of the Macintosh system software that controls 3D drawing engines. A <B CLASS="bold">drawing engine</B> is software that supports low-level rasterization operations--that is, the process of determining values for pixels in an image on the screen or some other medium. You are probably already familiar with QuickDraw, which is a 2D drawing engine. The 3D drawing engines managed by QuickDraw&nbsp;3D RAVE differ from 2D drawing engines in several important respects:<A NAME="marker=51420"> </A></P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=43970"> </A>A 3D drawing engine must support a <I CLASS="italics">z</I> (or depth) value for <B CLASS="bold">hidden surface removal </B>(removing any surfaces in a model that are hidden by opaque surfaces of objects).<A NAME="marker=51421"> </A></LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=43991"> </A>A 3D drawing engine typically supports <B CLASS="bold">double buffering,</B> the use of two different buffers to store pixel images. Double buffering helps reduce the flashing caused by redrawing an image. Double buffering can also be used to avoid tearing artifacts caused by updating a window at high speed.<A NAME="marker=51422"> </A></LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44005"> </A>A 3D drawing engine typically supports special rasterization modes, such as texture mapping or constructive solid geometry.<A NAME="marker=58023"> </A></LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=36810"> </A>In almost all other respects, a 3D drawing engine operates just like a 2D drawing engine. You draw objects by sending drawing commands to the drawing engine, which interprets the commands and constructs a rasterized image. A 3D drawing engine is often associated with hardware designed specifically to accelerate the 3D rasterization process.</P><P CLASS="T1.Text1"><A NAME="pgfId=44036"> </A><A HREF="qd3dravedriver.2.htm#20438" CLASS="XRef">Figure&nbsp;22</A> illustrates the position of QuickDraw&nbsp;3D RAVE in relation to drawing engines, the clients that call it, and the devices driven by the drawing engines.</P><P CLASS="Fg.Figure"><A NAME="pgfId=53624"> </A>Figure&nbsp;22<A NAME="20438"> </A>The position of QuickDraw&nbsp;3D RAVE</P><DIV><IMG SRC="qd3dravedriver-1.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=53629"> </A><A NAME="marker=53625"> </A>QuickDraw&nbsp;3D RAVE and all registered drawing engines with their associated devices comprise the <B CLASS="bold">QuickDraw&nbsp;3D Acceleration Layer</B>. As you can see, this layer operates as a hardware abstraction layer that insulates the system software (for instance, QuickDraw&nbsp;3D) or other clients from the actual video display hardware and graphics acceleration hardware available on a particular Macintosh computer.</P><P CLASS="T1.Text1"><A NAME="pgfId=44408"> </A>Most applications creating 3D images should use QuickDraw&nbsp;3D, which determines the best drawing engine and associated output device to use to display an image. QuickDraw&nbsp;3D calls that drawing engine, using functions provided by QuickDraw&nbsp;3D RAVE. As a result, most applications do not need to know about the QuickDraw&nbsp;3D Acceleration Layer. Instead, they should use high-level 3D system software (such as QuickDraw&nbsp;3D or OpenGL) to create and render 3D models.</P><P CLASS="T1.Text1"><A NAME="pgfId=44093"> </A>Occasionally, however, some software (like the 3D game shown in <A HREF="qd3dravedriver.2.htm#20438" CLASS="XRef">Figure&nbsp;22</A>) needs interactive performance but only limited 3D rendering capabilities. In these cases, the software can call QuickDraw&nbsp;3D RAVE functions directly, to find and configure a drawing engine and to issue drawing commands.</P><P CLASS="T1.Text1"><A NAME="pgfId=44255"> </A>The QuickDraw&nbsp;3D Acceleration Layer is intended to provide a basis for 3D rendering at interactive speeds. Accordingly, QuickDraw&nbsp;3D RAVE is implemented in such a way as to minimize the overhead incurred by communication between an application and a drawing engine. In particular, a function call from an application to QuickDraw&nbsp;3D RAVE does not require a context change. In addition, a function call from an application to a drawing engine does not require intermediate processing by QuickDraw&nbsp;3D RAVE. Instead, drawing calls are implemented as C language macros that call directly into the code of a drawing engine. (See <A HREF="qd3dravedriver.44.htm#21284" CLASS="XRef">&quot;Manipulating Draw Contexts&quot;</A> for details.)</P><P CLASS="I.Important"><A NAME="pgfId=44316"> </A>As a result of these two features, calling a drawing engine through QuickDraw&nbsp;3D RAVE provides the same level of performance as linking the engine directly with the calling application. </P><H2 CLASS="H2.Heading2TOC"><A HREF="qd3dravedriver.3.htm#pgfId=44461" CLASS="Hypertext">Drawing Engines</A></H2><H2 CLASS="H2.Heading2TOC"><A HREF="qd3dravedriver.4.htm#pgfId=44445" CLASS="Hypertext">Draw Contexts</A></H2><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>