<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> About Draw Context Objects</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H1.Heading1"><A NAME="pgfId=3064"> </A><A NAME="22756"> </A>About Draw Context Objects</H1><P CLASS="T1.Text1"><A NAME="pgfId=3068"> </A>The QuickDraw&nbsp;3D graphics library is able to direct its output--a rendered image--into one or more destinations (hereafter called its <B CLASS="bold">drawing destinations</B>). For instance, you can use QuickDraw&nbsp;3D to draw three-dimensional images into a standard Mac&nbsp;OS window.To achieve this cross-platform drawing capability, and thereby to insulate most of the application programming interfaces from details of the underlying drawing destination, QuickDraw&nbsp;3D uses objects called draw context objects. A <B CLASS="bold">draw context object</B> (or, more briefly, a <B CLASS="bold">draw context</B>) is a QuickDraw&nbsp;3D object that maintains information specific to a particular window system or drawing destination.<A NAME="marker=3084"> </A><A NAME="marker=3085"> </A></P><P CLASS="T1.Text1"><A NAME="pgfId=3089"> </A>In general, QuickDraw&nbsp;3D does not duplicate existing methods of creating, handling user actions in, or manipulating drawing destinations. For example, QuickDraw&nbsp;3D does not provide any means of creating a Mac&nbsp;OS window, handling events in the window, or modifying the size or location of the window. A QuickDraw&nbsp;3D draw context, which provides a link between your application and the Mac&nbsp;OS window, simply contains the minimum amount of information it needs to draw into the window. You must use the Window Manager for all other operations on a Mac&nbsp;OS window.</P><P CLASS="T1.Text1"><A NAME="pgfId=3096"> </A>A draw context is of type <TT CLASS="cv">TQ3DrawContextObject</TT>, which is a subtype of shared object. You need to create an instance of a specific type of draw context object and then attach it to a view, usually by calling <TT CLASS="cv">Q3View_SetDrawContext</TT>. QuickDraw&nbsp;3D currently supports these types of draw contexts:<A NAME="marker=3100"> </A></P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=3101"> </A>Macintosh draw contexts</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=3102"> </A>pixmap draw contexts</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=3896"> </A>Microsoft Windows draw contexts</LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=3900"> </A>Not all drawing destinations are windows. QuickDraw&nbsp;3D supports the pixmap draw context for drawing an image into an arbitrary region of memory (that is, a pixmap). You can, if necessary, even create instances of several kinds of draw contexts and draw the same scene into several different kinds of windows.</P><P CLASS="T1.Text1"><A NAME="pgfId=3108"> </A>All draw contexts share a set of basic properties, which are maintained in a structure of type <TT CLASS="cv">TQ3DrawContextData</TT>.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=8238"> </A>typedef struct TQ3DrawContextData {<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextClearImageMethod&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearImageMethod;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3ColorARGB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearImageColor;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Area&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pane;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;paneState;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Bitmap&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mask;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maskState;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doubleBufferState;<BR>} TQ3DrawContextData;<BR></CODE><P CLASS="I.Important"><A NAME="pgfId=5127"> </A><A NAME="marker=8240"> </A>Windows 32 draw contexts are always implicitly double buffered and Direct Draw surface draw contexts are single buffered, regardless of the value of doubleBufferState. </P><P CLASS="T1.Text1"><A NAME="pgfId=4908"> </A>The TQ3DrawContextData fields define the manner in which a window (or region of memory) is cleared, the size of the destination drawing pane, the drawing mask, and the state of the double buffering. These basic properties are designed to be independent of any particular window system. You can rely on the capabilities provided by these properties across window systems, whether or not the drawing destination supports them.</P><P CLASS="Note"><A NAME="pgfId=4915"> </A>Not all the basic properties maintained in the <TT CLASS="cv">TQ3DrawContextData</TT> data structure are supported by all draw contexts. For example, it makes no sense to use double buffering when drawing into a pixmap. </P><P CLASS="T1.Text1"><A NAME="pgfId=3123"> </A>In addition to these basic properties that are common to all draw contexts, each specific type of draw context defines context-specific properties. For example, the Macintosh draw context maintains information about the window into which QuickDraw&nbsp;3D is to draw, the optional use of a two-dimensional graphics library (QuickDraw or QuickDraw&nbsp;GX), and so forth. The following sections describe the specific draw context types.<A NAME="marker=3127"> </A></P><H2 CLASS="H2.Heading2TOC"><A HREF="qd3ddrawcontexts.3.htm#pgfId=3128" CLASS="Hypertext">Macintosh Draw Contexts</A></H2><H2 CLASS="H2.Heading2TOC"><A HREF="qd3ddrawcontexts.4.htm#pgfId=3147" CLASS="Hypertext">Pixmap Draw Contexts</A></H2><H2 CLASS="H2.Heading2TOC"><A HREF="qd3ddrawcontexts.5.htm#pgfId=3909" CLASS="Hypertext">Windows Draw Contexts</A></H2><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>