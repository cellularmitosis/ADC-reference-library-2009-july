<HTML><head><script language="JavaScript" src="../../RM/frametest.js"></script><TITLE> API to Determine Whether QuickTime Can Open a File</TITLE><script language=javascript> window.parent.focus(); </script></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>What's New in QuickTime 5</I><P>| <A HREF="Max.81.htm">Previous</A> | <A HREF="Max.1.htm">Chapter Contents</A> | <A HREF="Max.htm">Chapter Top</A> | <A HREF="Max.83.htm">Next</A> |</P></DIV><!-- QTnavbar end --><H1 CLASS="H1.Heading1"><A NAME="pgfId=87734"> </A>API to Determine Whether QuickTime Can Open a File</H1><P CLASS="T1.Text1"><A NAME="pgfId=87741"> </A>QuickTime&nbsp;5 includes the addition of two new functions -- <A NAME="marker=88232"> </A>CanQuickTimeOpenFile and <A NAME="marker=88233"> </A>CanQuickTimeOpenDataRef, discussed in this section. The CanQuickTimeOpenFile call determines whether QuickTime can open a given file or, in general, files of a given type. The CanQuickTimeOpenDataRef call is similar to <TT CLASS="cv">CanQuickTimeOpenFile</TT> except that it uses a data reference instead of a file.</P><P CLASS="T1.Text1"><A NAME="pgfId=87325"> </A>The input flags for <TT CLASS="cv">CanQuickTimeOpenFile</TT> and <TT CLASS="cv">CanQuickTimeOpenFileDataRef</TT> are defined as follows:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=98108"> </A>enum {<BR>    kQTDontUseDataToFindImporter = 1L &lt;&lt; 0,<BR>    kQTDontLookForMovieImporterIfGraphicsImporterFound = 1L &lt;&lt; 1,<BR>    kQTAllowOpeningStillImagesAsMovies = 1L &lt;&lt; 2,<BR>    kQTAllowImportersThatWouldCreateNewFile = 1L &lt;&lt; 3,<BR>    kQTAllowAggressiveImporters = 1L &lt;&lt; 4<BR>};</code><br><DIV><H4 CLASS="RoH.RoutineHeading"><A NAME="pgfId=87334"> </A>CanQuickTimeOpenFile</H4><P CLASS="T1.Text1"><A NAME="pgfId=87479"> </A>Determines whether the file could be opened using a graphics importer or opened in place as a movie.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=98112"> </A>CanQuickTimeOpenFile  (FSSpecPtr     fileSpec,<BR>                       OSType        fileType,<BR>                       OSType        fileNameExtension,<BR>                       Boolean *     outCanOpenWithGraphicsImporter,<BR>                       Boolean *     outCanOpenAsMovie,<BR>                       Boolean *     outPreferGraphicsImporter,<BR>                       UInt32        inFlags);</code><br><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=98116"> </A><TT CLASS="cv">fileSpec</TT><A NAME="marker=98120"> </A> </DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=87354"> </A>Points to an FSSpec identifying the file in question. If you just want to ask about a particular file type and/or file name suffix in general, pass NULL.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=98126"> </A><TT CLASS="cv">fileType</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=87542"> </A>Contains the file type if already known, or 0 if not known. If <TT CLASS="cv">fileSpec</TT> is provided and <TT CLASS="cv">fileType</TT> is 0, QuickTime will call the File Manager to determine the file type. If you pass NULL in fileSpec and 0 in <TT CLASS="cv">fileNameExtension</TT>, you must pass a file type here.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=98135"> </A><TT CLASS="cv">fileNameExtension</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=87548"> </A><TT CLASS="cv"></TT>&nbsp;</DD><DD CLASS="DD.DefinitionDefCont"><A NAME="pgfId=87551"> </A>Contains the file name suffix if already known, or 0 if not known. The file name suffix should be encoded as an uppercase four-character-code with trailing spaces; for instance, the suffix &quot;.png&quot; should be encoded as<TT CLASS="cv"> 'PNG'</TT>, or 0x504e4720. If <TT CLASS="cv">fileSpec</TT> is provided and <TT CLASS="cv">fileNameExtension</TT> is 0, QuickTime will examine <TT CLASS="cv">fileSpec</TT> to determine the file name suffix. If you pass NULL in <TT CLASS="cv">fileSpec</TT> and 0 in <TT CLASS="cv">fileType</TT>, you must pass a file name suffix here.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=98144"> </A><TT CLASS="cv">outCanOpenWithGraphicsImporter</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=87558"> </A><TT CLASS="cv"></TT>&nbsp;</DD><DD CLASS="DD.DefinitionDefCont"><A NAME="pgfId=87561"> </A>Points to a boolean which will be set to true if the file can be opened using a graphics importer and false otherwise. If you do not want this information, pass NULL.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=98153"> </A><TT CLASS="cv">outCanOpenAsMovie</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=87571"> </A><TT CLASS="cv"></TT>&nbsp;</DD><DD CLASS="DD.DefinitionDefCont"><A NAME="pgfId=87574"> </A>Points to a boolean which will be set to true if the file can be opened as a movie and false otherwise. If you do not want this information, pass NULL.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=98162"> </A><TT CLASS="cv">outPreferGraphicsImporter</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=87584"> </A><TT CLASS="cv"></TT>&nbsp;</DD><DD CLASS="DD.DefinitionDefCont"><A NAME="pgfId=87587"> </A>Points to a boolean which will be set to true if the file can be opened using a graphics importer and opened as a movie, but, all other things being equal, QuickTime recommends using a graphics importer. For example, QuickTime would recommend using a graphics importer for single-frame GIF files and opening as a movie for multiple-frame GIF files.</DD><DD CLASS="DD.DefinitionDefCont"><A NAME="pgfId=87598"> </A>If you do not want this information, pass NULL.</DD><DD CLASS="DD.DefinitionDefCont"><A NAME="pgfId=87601"> </A>Passing a non-NULL pointer disables the <TT CLASS="cv">kQTDontUseDataToFindImporter</TT> and <TT CLASS="cv">kQTDontLookForMovieImporterIfGraphicsImporterFound</TT> flags, if set.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=98175"> </A><TT CLASS="cv">inFlags</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=87608"> </A>Specifies flags which modify search behavior. Pass 0 for default behavior.</DD><DD CLASS="DD.DefinitionDefCont"><A NAME="pgfId=87614"> </A>Flags available are:</DD><DL COMPACT><DD CLASS="DD2.DefinitionDef2Cont"><A NAME="pgfId=87619"> </A><TT CLASS="cv">kQTDontUseDataToFindImporter</TT></DD><DD CLASS="DD2.DefinitionDef2Cont"><A NAME="pgfId=87622"> </A>Tells QuickTime not to use the data in the file to help in the search. This will speed up the search, especially in cases where a negative result is returned, but it will cause QuickTime to report that it can not open files which aren't identified by a recognized file type or file name suffix.</DD><DT CLASS="DT2.DefinitionTerm2"><A NAME="pgfId=98190"> </A><TT CLASS="cv">kQTDontLookForMovieImporterIfGraphicsImporterFound</TT></DT><DD CLASS="DD2.DefinitionDef2"><A NAME="pgfId=87633"> </A><TT CLASS="cv"></TT>&nbsp;</DD><DD CLASS="DD2.DefinitionDef2Cont"><A NAME="pgfId=87636"> </A>Tells QuickTime to short-circuit its search as soon as it finds one way to open the file. Pass this flag if you want to know whether a file can be opened with a graphics importer or as a movie, but you don't care which.</DD><DT CLASS="DT2.DefinitionTerm2"><A NAME="pgfId=98199"> </A><TT CLASS="cv">kQTAllowOpeningStillImagesAsMovies</TT></DT><DD CLASS="DD2.DefinitionDef2"><A NAME="pgfId=87408"> </A><TT CLASS="cv"></TT>&nbsp;</DD><DD CLASS="DD2.DefinitionDef2Cont"><A NAME="pgfId=87643"> </A>Tells QuickTime to consider opening still images as movies. If this flag is set, if a file can be opened using a graphics importer QuickTime will automatically say it can be opened as a movie.</DD><DT CLASS="DT2.DefinitionTerm2"><A NAME="pgfId=98208"> </A><TT CLASS="cv">kQTAllowImportersThatWouldCreateNewFile</TT></DT><DD CLASS="DD2.DefinitionDef2"><A NAME="pgfId=87652"> </A><TT CLASS="cv"></TT>&nbsp;</DD><DD CLASS="DD2.DefinitionDef2Cont"><A NAME="pgfId=87655"> </A>Tells QuickTime to include importers which would create new files. If this flag is clear, QuickTime only includes importers which can import in place without needing to create new files.</DD><DT CLASS="DT2.DefinitionTerm2"><A NAME="pgfId=98217"> </A><TT CLASS="cv">kQTAllowAggressiveImporters</TT></DT><DD CLASS="DD2.DefinitionDef2"><A NAME="pgfId=87665"> </A><TT CLASS="cv"></TT>&nbsp;</DD><DD CLASS="DD2.DefinitionDef2Cont"><A NAME="pgfId=87668"> </A>Tells QuickTime to include movie importers for file types like PICT and TEXT which aren't traditionally thought of as movies.</DD><DD CLASS="DD2.DefinitionDef2Cont"><A NAME="pgfId=87673"> </A>If this flag is clear, QuickTime excludes these movie importers.</DD></DL COMPACT></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=87425"> </A>Error codes</P><CODE CLASS="Cv.Code"><A NAME="pgfId=98230"> </A>paramErr<BR>memFullErr</code><br><DIV><H5 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=87694"> </A>DISCUSSION</H5><P CLASS="T1.Text1"><A NAME="pgfId=87695"> </A><TT CLASS="cv">CanQuickTimeOpenFile</TT> determines whether QuickTime can open a given file or, in general, files of a given type.</P><P CLASS="T1.Text1"><A NAME="pgfId=87696"> </A>You should pass NULL in parameters that do not interest you, since that will allow QuickTime to perform a faster search.</P></DIV></DIV><DIV><H4 CLASS="RoH.RoutineHeading"><A NAME="pgfId=87433"> </A>CanQuickTimeOpenDataRef</H4><P CLASS="T1.Text1"><A NAME="pgfId=87435"> </A>Determines whether the data reference could be opened using a graphics importer or opened in place as a movie.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=98234"> </A>CanQuickTimeOpenDataRef (Handle      dataRef,<BR>                         OSType      dataRefType,<BR>                         Boolean *   outCanOpenWithGraphicsImporter,<BR>                         Boolean *   outCanOpenAsMovie,<BR>                         Boolean *   outPreferGraphicsImporter,<BR>                         UInt32      inFlags);</code><br><DIV><H5 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=87725"> </A><A NAME="marker=98236"> </A>DISCUSSION</H5><P CLASS="T1.Text1"><A NAME="pgfId=87723"> </A>Similar to <TT CLASS="cv">CanQuickTimeOpenFile</TT> except that it uses a data reference instead of a file.</P></DIV></DIV><hr>&#169; 2001 Apple Computer, Inc.<!-- QTnavbar start --><P><I>What's New in QuickTime 5</I><P>| <A HREF="Max.81.htm">Previous</A> | <A HREF="Max.1.htm">Chapter Contents</A> | <A HREF="Max.htm">Chapter Top</A> | <A HREF="Max.83.htm">Next</A> |</P></DIV><!-- QTnavbar end --></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>