<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Accessing Types in a Class</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=11010"> </A>Accessing Types in a Class</H1><P CLASS="T1.Text1"><A NAME="pgfId=12060"> </A>QuickDraw&nbsp;3D provides routines for accessing various object types. The types are defined as follows:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=21909"> </A>typedef struct TQ3ObjectClassPrivate&nbsp;&nbsp;&nbsp;&nbsp;*TQ3XObjectClass;<BR></CODE><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=16822"> </A>Q3XObjectClass_GetType</H2><P CLASS="T1.Text1"><A NAME="pgfId=17412"> </A>You can use the Q3XObjectClass_GetType function to get the type, given a reference to a class. This is most useful in the instance where you register an element or attribute and need to get the type. When you register an element, QuickDraw&nbsp;3D will take the type you pass in and modify it, to avoid name conflicts.  Many object system calls require an object type; this function lets you get the type from the class reference that you ordinarily store when you register a class.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21915"> </A>TQ3Status Q3XObjectClass_GetType(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XObjectClass&nbsp;&nbsp;&nbsp;&nbsp;objectClass,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ObjectType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*type);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21917"> </A>objectClass</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=16825"> </A>A class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21926"> </A>type</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=16826"> </A>On return, an object type.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=16827"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=16828"> </A>The Q3XObjectClass_GetType function returns, in the type parameter, the type of the class referenced by objectClass.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=11011"> </A>Q3XObjectClass_GetLeafType</H2><P CLASS="T1.Text1"><A NAME="pgfId=11012"> </A>The Q3XObjectClass_GetLeafType function lets you determine the leaf type of a class.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21937"> </A>TQ3ObjectType Q3XObjectClass_GetLeafType(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQX3ObjectClass&nbsp;&nbsp;&nbsp;&nbsp;objectClass);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21939"> </A>objectClass</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=12030"> </A>An object class.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=12043"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=12041"> </A>The Q3XObjectClass_GetLeafType function returns the leaf type of a class. If an error occurs, it returns <TT CLASS="cv">kQ3ObjectTypeInvalid</TT> and posts an error.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=11016"> </A><A NAME="26425"> </A>Q3XObjectClass_GetSubClassType</H2><P CLASS="T1.Text1"><A NAME="pgfId=11017"> </A>The Q3XObjectClass_GetSubClassType function lets you determine the subclass type of one object class relative to another object class.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21950"> </A>TQ3ObjectType Q3XObjectClass_GetSubClassType(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQX3ObjectClass&nbsp;&nbsp;&nbsp;&nbsp;objectClass,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQX3ObjectClass&nbsp;&nbsp;&nbsp;&nbsp;targetObjectClass);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21952"> </A>objectClass</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=12106"> </A>First object class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21961"> </A>targetObjectClass</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=12108"> </A> 	Second object class.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=12144"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=12092"> </A>The Q3XObjectClass_GetSubClassType function is used for <TT CLASS="cv">_GetType</TT> calls in a particular class. For example, <TT CLASS="cv">Q3Geometry_GetType</TT> would be implemented</P><CODE CLASS="Cv.Code"><A NAME="pgfId=21973"> </A>TQ3ObjectType Q3Geometry_GetType (TQ3GeometryObject object)<BR>&nbsp;&nbsp;&nbsp;&nbsp;{<BR>&nbsp;&nbsp;&nbsp;&nbsp;return Q3XObject_GetSubClassType (gGeometryClass, object);<BR>&nbsp;&nbsp;&nbsp;&nbsp;}<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=11026"> </A>where <TT CLASS="cv">gGeometryClass</TT> is the geometry object class, and <TT CLASS="cv">object</TT> is a subclass of the geometry class. The type returned is the subclass type of the geometry.</P><P CLASS="T1.Text1"><A NAME="pgfId=12172"> </A>If an error occurs, the Q3XObjectClass_GetSubClassType function returns <TT CLASS="cv">kQ3ObjectTypeInvalid</TT> and posts an error.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=16915"> </A>Q3XObject_GetClass</H2><P CLASS="T1.Text1"><A NAME="pgfId=16916"> </A>You can use the Q3XObject_GetClass function to get the class of an object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21977"> </A>TQ3XObjectClass Q3XObject_GetClass(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;object);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21979"> </A>object</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=16918"> </A>An object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=16919"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=16920"> </A>The Q3XObject_GetClass function returns the class of the object designated by object.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=14711"> </A>Q3XObject_GetSubClassType</H2><P CLASS="T1.Text1"><A NAME="pgfId=14712"> </A>The Q3XObject_GetSubClassType function lets you determine the subclass type of an object relative to an object class.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21990"> </A>TQ3ObjectType Q3XObject_GetSubClassType(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XObjectClass&nbsp;&nbsp;&nbsp;&nbsp;objectClass,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetObject);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21992"> </A>objectClass</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=14714"> </A>An object class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22001"> </A>targetObject</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=14715"> </A>An object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=14716"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=14717"> </A>Use of Q3XObject_GetSubClassType resembles Q3XObjectClass_GetSubClassType <A HREF="qd3dobjects.1b.htm#26425" CLASS="XRef">(link)</A>, except it is used for an object relative to an object class instead of for two object classes.</P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>