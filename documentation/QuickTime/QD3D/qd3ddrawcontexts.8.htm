<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Using Double Buffering</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=3185"> </A>Using Double Buffering</H1><P CLASS="T1.Text1"><A NAME="pgfId=3187"> </A><A NAME="marker=3186"> </A>In general, when drawing to a screen or other device visible by the user, you'll want to use QuickDraw&nbsp;3D's double buffering capability to reduce the amount of flicker that occurs when the image on the screen is updated. You enable double buffering by calling <TT CLASS="cv">Q3DrawContext_SetDoubleBufferState</TT> or by setting the <TT CLASS="cv">doubleBufferState</TT> field of a draw context data structure to <TT CLASS="cv">kQ3True</TT> before calling the draw context constructor method.</P><P CLASS="Note"><A NAME="pgfId=2767"> </A>In general, QuickDraw&nbsp;3D will take advantage of any double buffering capabilities available on the target window system. </P><P CLASS="T1.Text1"><A NAME="pgfId=3191"> </A>When double buffering is active for a draw context, the draw context is associated with two buffers, the front buffer and the back buffer. The front buffer is the area of memory that is being displayed on the screen. The back buffer is some other area of memory that has the same size as the front buffer.</P><P CLASS="T1.Text1"><A NAME="pgfId=3192"> </A>When double buffering is active, all drawing (as performed by routines such as <TT CLASS="cv">Q3Group_Submit</TT> in a rendering loop) is done into the back buffer, and the front buffer is updated only after the call to <TT CLASS="cv">Q3View_EndRendering</TT> on the final pass through your rendering loop. Some renderers (especially those that rely on hardware accelerators) may return control to your application before the image on the screen has been updated. You can call the <TT CLASS="cv">Q3View_Sync</TT> function to block execution until the renderer is done drawing in the screen's draw context. You might want to do this if you intend to grab the image on the screen or if you intend to allow the user to pick objects displayed on the screen. See the chapter <A HREF="qd3drenderers.htm#15906" CLASS="XRef">&quot;Renderer Objects&quot;</A> for complete information about calling <TT CLASS="cv">Q3View_Sync</TT>.</P><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>