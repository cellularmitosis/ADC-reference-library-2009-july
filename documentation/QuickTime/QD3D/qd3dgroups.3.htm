<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Group Types</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=3071"> </A>Group Types</H1><P CLASS="T1.Text1"><A NAME="pgfId=3073"> </A><A NAME="marker=3072"> </A>The base class of group object is of type <TT CLASS="cv">kQ3ShapeTypeGroup</TT>, a type of shape object. You can create a group of that type (by calling the <TT CLASS="cv">Q3Group_New</TT> function) and you can put any kinds of shared objects into it (for example, by calling the <TT CLASS="cv">Q3Group_AddObject</TT> function). In addition, QuickDraw&nbsp;3D provides three subclasses of groups: light groups, display groups, and information groups. These subclasses are distinguished from one another by the kinds of objects you can put into them.</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=3077"> </A>A <B CLASS="bold">light group</B> is a group that contains one or more lights (and no other types of QuickDraw&nbsp;3D objects). You'll typically create light groups to provide illumination on the objects in a model. The light group is attached to a view object by calling the <TT CLASS="cv">Q3View_SetLightGroup</TT> function. See the chapter <A HREF="qd3dviews.htm#42288" CLASS="XRef">&quot;View Objects&quot;</A> for complete details on attaching light groups to views.<A NAME="marker=3084"> </A></LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=3086"> </A><A NAME="marker=3085"> </A>A <B CLASS="bold">display group</B> is a group of objects that are drawable. Drawable objects include geometric objects, styles, transforms, attributes and attribute sets, and other display groups. When you draw a display group into a view, each object in the group is executed (that is, drawn) in the order in which it appears in the group (which is determined by the order in which the objects were inserted into the group). You can create a display group, or you can create one of two subclasses of display groups: ordered display groups and I/O proxy display groups.</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=1308"> </A>An <B CLASS="bold">ordered display group</B> is a display group in which the objects in the group are sorted by their type. Ordered groups are sometimes more useful than unordered groups because the order of object execution is always the same. During rendering, QuickDraw&nbsp;3D executes objects in this order:<A NAME="marker=1312"> </A></LI><OL><LI CLASS="N2/.NList2=1"><A NAME="pgfId=1313"> </A>transforms</LI><LI CLASS="N2.NList2"><A NAME="pgfId=1314"> </A>styles</LI><LI CLASS="N2.NList2"><A NAME="pgfId=3094"> </A>attribute sets</LI><LI CLASS="N2.NList2"><A NAME="pgfId=3095"> </A>shaders</LI><LI CLASS="N2.NList2"><A NAME="pgfId=3098"> </A>geometric objects</LI><LI CLASS="N2.NList2"><A NAME="pgfId=3099"> </A>groups</LI><LI CLASS="N2.NList2"><A NAME="pgfId=1317"> </A>unknown objects</LI></OL></UL><P CLASS="T1.Text1"><A NAME="pgfId=1363"> </A>This order of execution ensures that all transforms, styles, attribute sets, and shaders in a group are applied to the geometric objects, groups, and unknown objects that form the hierarchy below the ordered display group.</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=1364"> </A>An <B CLASS="bold">I/O proxy display group</B> (or sometimes <B CLASS="bold">proxy display group</B>) is a display group that contains several representations of a single geometric object. You can use I/O proxy display groups to encapsulate, in a metafile, two or more descriptions of an object. This is useful when an application reading the file is unable to understand some of those descriptions. For example, you might know that some other applications cannot handle NURB patches but do handle meshes. As a result, you can create an I/O proxy display group that contains two descriptions of a surface (one as a NURB patch and one as a mesh) and write that group into a metafile. Any application reading the metafile can select from the display group the representation of the surface that it can work with. You should put objects into the I/O proxy display group in the order you deem to be preferable. (In other words, the first object in the group should be the representation you deem most useful, and the last object should be the one that you deem least useful.) In this way, an application reading the metafile can simply use the first object in the proxy display group whose type is not <TT CLASS="cv">kQ3SharedTypeUnknown</TT>.<A NAME="marker=1365"> </A></LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=3104"> </A>An <B CLASS="bold">information group</B> is a group that contains one or more strings (and no other types of QuickDraw&nbsp;3D objects). You'll typically create information groups to provide human-readable information in a metafile. For example, if you want to include a copyright notice in a metafile, you can simply create an information group that contains a string of the appropriate data and then write that group to the metafile.<A NAME="marker=3108"> </A><A NAME="marker=3109"> </A></LI></UL><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>