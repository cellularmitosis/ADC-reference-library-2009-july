{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\froman\fcharset77 Times-Roman;\f1\froman\fcharset77 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;}
\margl1440\margr1440\vieww11140\viewh13980\viewkind1\viewscale100
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs26 \cf0 TextLinks is an example Cocoa application which shows how to programmatically create links to URLs and other objects, handle clicks in non-URL links, and display a custom mouse cursor over links.\
\
This release (0.2) fixes a bug in the code which displays the attributes under the mouse. Before, it would show attributes even for text scrolled out of sight.\
\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b \cf0 Using the application\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b0 \cf0 \
The application can create three kinds of links in the text view at the top of the window:\
\
(1) A link which shows the URL, like \cf2 \ul http://www.apple.com\cf0 \ulnone . To create one:\
	\'a5 select the text you want to become a link\
	\'a5 click the first radio button\
	\'a5 click \'d2Create link\'c9\'d3\
\
(2) A link which doesn't show the URL, such as \cf2 \ul Apple\'d5s Developer Page\cf0 \ulnone  (which links to http://www.apple.com/developer). To create one:\
	\'a5 select the text you want to become a link\
	\'a5 type a URL into the text field next to the second radio button\
	\'a5 click \'d2Create link\'c9\'d3\
\
(3) A link which doesn\'d5t use a URL at all, such as \cf2 \ul Talk to me, baby\cf0 \ulnone  (which will alert you with some piece of text). To create one\
	\'a5 select the text you want to become a link\
	\'a5 type the alert text into the field next to the third radio button\
	\'a5 click \'d2Create link\'c9\'d3\
\
To create a link which isn\'d5t blue and underlined, uncheck the checkbox.\
\
As you move the mouse over the text, notice that:\
	- the cursor changes to a hand when over URL links\
	- the cursor changes to an arrow when over other links\
	- the field at the bottom shows you various attributes of the text you point at\
	- you can use this field to inspect other attributes: font size, ruler, etc.\
\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b \cf0 About links, attributed strings, and text-view objects\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b0 \cf0 \
In the AppKit, a link is just another attribute in an \'d2attributed string\'d3 \'d1 a piece of text can say that its color is blue, its font is Helvetica, and its link is a URL.\
\
A link attribute can refer to any object. If you supply an NSURL instance for a link attribute, the NSTextView will automatically open that URL in your browser when you click a link. If you supply some other object, the NSTextView will send textView:clickedOnLink:atIndex: to its delegate.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \
This means that you can create links which react in different ways \'d1 you can create your own hypertext system, linking to your own documents.\
\

\f1\b About this example\'d5s code\

\f0\b0 \
This example creates links to URLs and also links which trigger alerts. The alert-links just store an NSString with the text to use in the alert. When textView:clickedOnLink:atIndex: gets a link object which is an NSString instance, it knows to use it in an alert. Your application can use more sophisticated rules.\
\
When the application creates links, it can also make the text appear blue and underlined, like traditional links. This code does this in the createLink: action method by setting the \'d2color\'d3 and \'d2underline\'d3 attributes of the selected text at the same time it sets the \'d2link\'d3 attribute.\
\
To show an appropriate cursor over each link, the application uses the NSTextViewWithLinks class, which replaces NSTextView using 
\f1\b poseAsClass:
\f0\b0  and overrides 
\f1\b resetCursorRects
\f0\b0  to make sure each link gets a cursor.\
\

\f1\b Using this code in your application\
\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b0 \cf0 \ul To create links in your code\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \ulnone 	\'a5\'cawrite your own code, modeling it on 
\f1\b createLink
\f0\b0  and 
\f1\b linkObject
\f0\b0 \
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \ul To handle clicks on URL links\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \ulnone 	\'a5\'cayou don\'d5t need to do anything \'d1 NSTextView handles that\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \ul To handle clicks on links which aren\'d5t URLs\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \ulnone 	\'a5\'caimplement 
\f1\b textView:clickedOnLink: atIndex:
\f0\b0  and process the link object there\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \ul To show a pointing-finger cursor over each link\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \ulnone 	\'a5\'caadd fingerCursor.tiff and NSTextViewWithLinks.h and .m to your application\
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \ul To show a cursor of your choice\ulnone \
	\'a5\'caadd NSTextViewWithLinks.h and .m to your application\
	\'a5\'caimplement 
\f1\b cursorForLink:atIndex:ofTextView:
\f0\b0  in the text-view\'d5s delegate}