<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Color Spaces</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>Inside Macintosh: QuickTime Reference</I><P>| <A HREF="refVectors.20.htm">Previous</A> | <A HREF="refVectors.1.htm">Chapter Contents</A> | <A HREF="refVectors.htm">Chapter Top</A> | <A HREF="refVectors.22.htm">Next</A> | <!-- QTnavbar end --><H1 CLASS="H3.Heading3"><A NAME="pgfId=20708"> </A><A NAME="24303"> </A>Color Spaces</H1><P CLASS="T1.Text1"><A NAME="pgfId=20710"> </A><A NAME="marker=20709"> </A>A <B CLASS="bold">color space</B> specifies how color information is represented. It defines a one-, two-, three-, or four-dimensional space whose dimensions, or<B CLASS="bold"> components,</B><A NAME="marker=20711"> </A> represent intensity values. For example, RGB space is a three-dimensional color space whose components are the red, green, and blue intensities that make up a given color. Visually, these spaces are often represented by various solid shapes, such as cubes, cones, or polyhedra. </P><P CLASS="T1.Text1"><A NAME="pgfId=20712"> </A>QuickDraw GX directly supports 28 different color spaces, to give you the convenience of working in whatever kinds of color data most suits your needs. The QuickDraw GX color spaces fall into several groups, or <B CLASS="bold">base families.</B><A NAME="marker=20713"> </A> They are</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=20714"> </A>luminance-based color spaces, used for grayscale display and printing</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=20715"> </A>RGB-based color spaces, used mainly for color video display </LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=20716"> </A>CMYK-based color spaces, used mainly for color printing </LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=20717"> </A>universal color spaces, used mainly for device-independent color measurements</LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=20718"> </A>All color spaces within a base family differ only in details of storage format or else are related to each other by very simple mathematical formulas.</P><P CLASS="T1.Text1"><A NAME="pgfId=20720"> </A><A NAME="marker=20719"> </A>Within a base family, some of the differences among color spaces relate to their<B CLASS="bold"> packing,</B> the number of bits used to store each color component. For example, RGB colors might be stored with 5, 8, or 16 bits per component. Each storage format is a different color space. Internally, QuickDraw GX always converts colors so that each component has 16&nbsp;bits; thus you can think of the 16-bit-per-component color spaces as the fundamental ones in each base family, and those with smaller storage spaces as packed (storage-compressed) versions.</P><P CLASS="T1.Text1"><A NAME="pgfId=20721"> </A>Some QuickDraw GX color spaces have an alpha channel, an additional component that measures opacity or transparency. Alpha channels are described in the section <A HREF="refVectors.21.htm#28087" CLASS="XRef">&quot;Color Spaces With Alpha Channels&quot;</A>.</P><P CLASS="T1.Text1"><A NAME="pgfId=20725"> </A>The <TT CLASS="cv">gxColorSpaces</TT> enumeration lists the color spaces directly supported by QuickDraw GX. Each color space has its own format for representing color information. The rest of this section discusses those color spaces and their formats.</P><DIV><A NAME="refVec23"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=20727"> </A>Luminance-Based Color Spaces</H2><P CLASS="T1.Text1"><A NAME="pgfId=20729"> </A><A NAME="marker=20728"> </A>Luminance is a scale of lightness. Luminance-based color spaces, or gray spaces, typically have a single component, ranging from black to white, as shown in <A HREF="refVectors.21.htm#16294" CLASS="XRef">Figure&nbsp;26</A>. Luminance-based color spaces are used for black-and white and grayscale display and printing.</P><P CLASS="Fg.Figure"><A NAME="pgfId=20737"> </A>Figure&nbsp;26 <A NAME="16294"> </A>Luminance color space</P><DIV><IMG SRC="COLL-03.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=20738"> </A>A color is converted into luminance by evaluating its overall lightness. The luminance of a color expressed in RGB (see <A HREF="refVectors.21.htm#29676" CLASS="XRef">&quot;RGB-Based Color Spaces&quot;</A>), for example, can be calculated approximately with this formula:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43496"> </A>luminance = 0.30 * red  + 0.59 * green + 0.11 * blue;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=20744"> </A>The luminance-based color spaces supported by QuickDraw GX (and defined in the <TT CLASS="cv">gxColorSpaces</TT> enumeration) are <TT CLASS="cv">gxGraySpace</TT> and <TT CLASS="cv">gxGrayASpace</TT>. The <I CLASS="italics">A</I> in <TT CLASS="cv">gxGrayASpace</TT> stands for a second component called an <I CLASS="italics">alpha channel;</I> see the section <A HREF="refVectors.21.htm#21278" CLASS="XRef">&quot;Color Spaces With Alpha Channels&quot;</A> for more information.</P><P CLASS="T1.Text1"><A NAME="pgfId=20751"> </A><A HREF="refVectors.21.htm#20023" CLASS="XRef">Table 3</A> describes details of the storage formats for <TT CLASS="cv">gxGraySpace</TT> and <TT CLASS="cv">gxGrayASpace</TT>. In each of these spaces, the luminance is specified by a single  number whose range varies from 0 to 65,535. The color black has a luminance value of 0, regardless of the color space. </P><TABLE border=1 cellpadding=2><CAPTION><P CLASS="Tb.Table"><A NAME="pgfId=20755"> </A>Table&nbsp;3 <A NAME="20023"> </A>Luminance-based color spaces supported by QuickDraw GX</P></CAPTION><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=20761"> </A>Constant</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=20763"> </A>Enumeration<BR>Value</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=20765"> </A>Explanation</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20768"> </A><A NAME="marker=20767"> </A>gxGraySpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20770"> </A>0x000A</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20773"> </A><A NAME="marker=20772"> </A>16 bits per component (gray only); component values range from 0 to 0xFFFF. Total storage size for each color value: 16 bits.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20776"> </A><A NAME="marker=20775"> </A>gxGrayASpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20778"> </A>0x008A</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20781"> </A><A NAME="marker=20780"> </A>16 bits per component (gray and alpha); component values range from 0 to 0xFFFF. Total storage size for each color value: 32 bits. Alpha channels are described on <A HREF="refVectors.21.htm#28087" CLASS="XRef">"Color Spaces With Alpha Channels"</A>. </FONT></TD></TR></TABLE><P CLASS="T1.Text1"><A NAME="pgfId=20788"> </A><A HREF="refVectors.21.htm#29108" CLASS="XRef">Figure&nbsp;27</A> is a visual representation of the storage formats for the luminance-based color spaces.</P><P><B>Note</B><BR><A NAME="pgfId=20789"> </A>This figure and all subsequent storage-format figures in this chapter assume that data storage is &quot;big-endian,&quot; that is, that lower addresses correspond to higher-order bytes in a word or long word value. For processors whose storage model is different, the elements of the figures would be in a different order. These figures are presented for illustrative purposes only, and are not intended to specify details of storage order. </P><P CLASS="Fg.Figure"><A NAME="pgfId=20797"> </A>Figure&nbsp;27 <A NAME="29108"> </A>Storage formats for luminance-based color spaces</P><DIV><IMG SRC="COLL-04.gif"></DIV></DIV><DIV><A NAME="refVec24"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=20800"> </A><A NAME="29676"> </A>RGB-Based Color Spaces</H2><P CLASS="T1.Text1"><A NAME="pgfId=20802"> </A><A NAME="marker=20801"> </A>RGB-based color spaces are the most commonly used color spaces in computer graphics, primarily because they are directly supported by most color monitors. The groups of color spaces within the RGB base family include</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=20803"> </A>RGB spaces</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=20804"> </A>HSV and HLS spaces</LI></UL></DIV><DIV><A NAME="refVec25"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=20805"> </A>RGB Spaces</H2><P CLASS="T1.Text1"><A NAME="pgfId=20807"> </A><A NAME="marker=20806"> </A>Any color expressed in <B CLASS="bold">RGB space</B> is some mixture of three primary colors red, green, and blue. Most RGB-based color spaces can be visualized as a cube, as in <A HREF="refVectors.21.htm#23847" CLASS="XRef">Figure&nbsp;28</A>, with corners of black, the three primaries (red, green, and blue), the three secondaries (cyan, magenta, and yellow), and white.</P><P CLASS="Fg.Figure"><A NAME="pgfId=20815"> </A>Figure&nbsp;28 <A NAME="23847"> </A>RGB color space</P><DIV><IMG SRC="COLL-05.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=20816"> </A>The RGB color spaces supported by QuickDraw GX (and defined in the <TT CLASS="cv">gxColorSpaces</TT> enumeration) are <TT CLASS="cv">gxRGBSpace</TT>, <TT CLASS="cv">gxRGB16Space</TT>, <TT CLASS="cv">gxRGB32Space</TT>, <TT CLASS="cv">gxRGBASpace</TT>, and <TT CLASS="cv">gxARGB32Space</TT>. See <A HREF="refVectors.21.htm#35037" CLASS="XRef">Table 4</A> and <A HREF="refVectors.21.htm#25102" CLASS="XRef">Figure&nbsp;29</A> for storage-format details. In each of these spaces, a color value is represented by three or four color components, representing red, green, blue (and in some cases alpha); each component can vary in the number of bits used for its storage. The color black is represented by component values of 0 in the red, green, and blue components.</P><TABLE border=1 cellpadding=2><CAPTION><P CLASS="Tb.Table"><A NAME="pgfId=20826"> </A>Table&nbsp;4 <A NAME="35037"> </A>RGB color spaces supported by QuickDraw GX</P></CAPTION><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=20832"> </A>Constant</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=20834"> </A>Enumeration<BR>Value</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=20836"> </A>Explanation</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20839"> </A><A NAME="marker=20838"> </A>gxRGBSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20841"> </A>0x0001</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20844"> </A><A NAME="marker=20843"> </A>16 bits per component (red, green, and blue); component values range from 0 to 0xFFFF. Total storage size for each color value: 48 bits.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20847"> </A><A NAME="marker=20846"> </A>gxRGB16Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20849"> </A>0x0501</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20852"> </A><A NAME="marker=20851"> </A>5 bits per component (red, green, and blue); component values range from 0 to 0x1F. Total storage size for each color value: 16 bits (bit 15 is not used).</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20855"> </A><A NAME="marker=20854"> </A>gxRGB32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20857"> </A>0x0801</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20860"> </A><A NAME="marker=20859"> </A>8 bits per component (red, green, and blue); component values range from 0 to 0xFF. Total storage size for each color value: 32 bits (bits 24-31 are not used).</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20863"> </A><A NAME="marker=20862"> </A>gxARGB32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20865"> </A>0x1881</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20868"> </A><A NAME="marker=20867"> </A>8 bits per component (red, green, blue, and alpha); component values range from 0 to 0xFF. Total storage size for each color value: 32 bits. Alpha channels are described on <A HREF="refVectors.21.htm#28087" CLASS="XRef">"Color Spaces With Alpha Channels"</A>.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20874"> </A><A NAME="marker=20873"> </A>gxRGBASpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20876"> </A>0x0081</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20879"> </A><A NAME="marker=20878"> </A>16 bits per component (red, green, blue, and alpha); component values range from 0 to 0xFFFF. Total storage size for each color value: 64 bits. Alpha channels are described on <A HREF="refVectors.21.htm#28087" CLASS="XRef">"Color Spaces With Alpha Channels"</A>.</FONT></TD></TR></TABLE><P CLASS="Fg.Figure"><A NAME="pgfId=20888"> </A>Figure&nbsp;29 <A NAME="25102"> </A>Storage formats for<A NAME="marker=20884"> </A> RGB color spaces</P><DIV><IMG SRC="COLL-06.gif"></DIV></DIV><DIV><A NAME="refVec26"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=20889"> </A>HSV and HLS Color Spaces</H2><P CLASS="T1.Text1"><A NAME="pgfId=20891"> </A><A NAME="marker=20890"> </A><B CLASS="bold">HSV space</B> and<B CLASS="bold"> HLS space</B> are transformations of RGB space that allow colors to be described in terms more natural to an artist. The name <I CLASS="italics">HSV</I> stands for <I CLASS="italics">hue, saturation,</I> and <I CLASS="italics">value,</I> and <I CLASS="italics">HLS</I> stands for <I CLASS="italics">hue, lightness,</I> and <I CLASS="italics">saturation.</I> The two spaces can be thought of as being single and double cones, as shown in <A HREF="refVectors.21.htm#16189" CLASS="XRef">Figure&nbsp;30</A>. </P><P CLASS="Fg.Figure"><A NAME="pgfId=20899"> </A>Figure&nbsp;30 <A NAME="16189"> </A>HSV color space and HLS color space</P><DIV><IMG SRC="COLL-07.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=20900"> </A>The components in HLS space are analogous, but not completely identical, to the components in HSV space:</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=20902"> </A><A NAME="marker=20901"> </A>The hue component in both color spaces is an angular measurement, analogous to position around a color wheel. A hue value of 0 indicates the color red; the color green is at a value corresponding to 120&#176;, and the color blue is at a value corresponding to 240&#176;. Horizontal planes through the cones in <A HREF="refVectors.21.htm#16189" CLASS="XRef">Figure&nbsp;30</A> are hexagons; the primaries and secondaries (red, yellow, green, cyan, blue, and magenta) occur at the vertices of the hexagons.</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=20907"> </A><A NAME="marker=20906"> </A>The saturation component in both color spaces describes color intensity. A saturation value of 0 (in the middle of a hexagon) means that the color is &quot;colorless&quot; (gray); a saturation value at the maximum (at the outer edge of a hexagon) means that the color is at maximum &quot;colorfulness&quot; for that hue angle and brightness. </LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=20909"> </A><A NAME="marker=20908"> </A>The value component (in HSV space) and the lightness component (in HLS space) describe brightness or luminance. In both color spaces, a value of 0 represents black. In HSV space, a maximum value for value means that the color is at its brightest. In HLS space, a maximum value for lightness means that the color is white, regardless of the current values of the hue and saturation components. The brightest, most intense color in HLS space occurs at a lightness value of exactly half the maximum.</LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=20910"> </A>The HLS and HSV color spaces supported by QuickDraw GX (and defined in the <TT CLASS="cv">gxColorSpaces</TT> enumeration) are <TT CLASS="cv">gxHSVSpace</TT>, <TT CLASS="cv">gxHLSSpace</TT>, <TT CLASS="cv">gxHSV32Space</TT>, and <TT CLASS="cv">gxHLS32Space</TT>. See <A HREF="refVectors.21.htm#32955" CLASS="XRef">Table 5</A> and <A HREF="refVectors.21.htm#29125" CLASS="XRef">Figure&nbsp;31</A> for details of storage format. </P><TABLE border=1 cellpadding=2><CAPTION><P CLASS="Tb.Table"><A NAME="pgfId=20920"> </A>Table&nbsp;5 <A NAME="32955"> </A>HSV and HLS color spaces supported by QuickDraw GX</P></CAPTION><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=20926"> </A>Constant</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=20928"> </A>Enumeration<BR>Value</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=20930"> </A>Explanation</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20933"> </A><A NAME="marker=20932"> </A>gxHSVSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20935"> </A>0x0003</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20938"> </A><A NAME="marker=20937"> </A>16 bits per component (hue, saturation, and value); component values range from 0 to 0xFFFF. Total storage size for each color value: 48 bits.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20941"> </A><A NAME="marker=20940"> </A>gxHLSSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20943"> </A>0x0004</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20946"> </A><A NAME="marker=20945"> </A>16 bits per component (hue, lightness, and saturation); component values range from 0 to 0xFFFF. Total storage size for each color value: 48&nbsp;bits.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20949"> </A><A NAME="marker=20948"> </A>gxHSV32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20951"> </A>0x0A03</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20954"> </A><A NAME="marker=20953"> </A>10 bits per component (hue, saturation, and value); component values range from 0 to 0x3FF. Total storage size for each color value: 32 bits (bits 30-31 are not used).</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=20957"> </A><A NAME="marker=20956"> </A>gxHLS32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20959"> </A>0x0A04</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=20962"> </A><A NAME="marker=20961"> </A>10 bits per component (hue, lightness, and saturation); component values range from 0 to 0x3FF. Total storage size for each color value: 32&nbsp;bits (bits 30-31 are not used).</FONT></TD></TR></TABLE><P CLASS="T1.Text1"><A NAME="pgfId=20966"> </A><A HREF="refVectors.21.htm#29125" CLASS="XRef">Figure&nbsp;31</A> shows storage formats for the supported HSV color spaces. Formats for the HLS spaces are identical.</P><P CLASS="Fg.Figure"><A NAME="pgfId=20972"> </A>Figure&nbsp;31 <A NAME="29125"> </A>Storage formats for<A NAME="marker=20968"> </A> HSV color spaces</P><DIV><IMG SRC="COLL-08.gif"></DIV></DIV><DIV><A NAME="refVec27"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=20973"> </A>CMYK Color Spaces</H2><P CLASS="T1.Text1"><A NAME="pgfId=20975"> </A><A NAME="marker=20974"> </A><B CLASS="bold">CMYK</B> <B CLASS="bold">space</B> is a color space that models the way ink builds up in printing. The name <I CLASS="italics">CMYK</I> refers to cyan, magenta, yellow, and black. Cyan, magenta, and yellow are the three primary colors in this color space, and red, green, and blue are the three secondaries. Theoretically black is not needed. However, when full-saturation cyan, magenta, and yellow inks are mixed equally on paper, the result is usually a dark brown, rather than black. Therefore, black ink is overprinted in darker areas to give a better appearance. <A HREF="refVectors.21.htm#27434" CLASS="XRef">Figure&nbsp;32</A> shows how the primary colors in CMYK space mix to form other colors. </P><P CLASS="Fg.Figure"><A NAME="pgfId=20983"> </A>Figure&nbsp;32 <A NAME="27434"> </A>Colors in CMYK color space</P><DIV><IMG SRC="COLL-09.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=20984"> </A>Theoretically, the relation between RGB values and CMY values in CMYK space is quite simple:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43503"> </A>Cyan&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 1.0 - red;<BR>Magenta&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 1.0 - green;<BR>Yellow&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 1.0 - blue;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=20986"> </A>(where red, green, and blue intensities are expressed as fractional values varying from 0 to 1). In reality, the process of deriving the cyan, magenta, yellow, and black values from a color expressed in RGB space is complex, involving device-specific, ink-specific, and even paper-specific calculations of the amount of black to add in dark areas (<A NAME="marker=20987"> </A><B CLASS="bold">black generation</B>), and the amount of other ink to remove (<A NAME="marker=20988"> </A><B CLASS="bold">undercolor removal</B>) where black is to be printed. The CMYK color spaces supported by QuickDraw GX (and defined in the <TT CLASS="cv">gxColorSpaces</TT> enumeration) are <TT CLASS="cv">gxCMYKSpace</TT> and gxCMYK32Space. See  <A HREF="refVectors.21.htm#29181" CLASS="XRef">Table 6</A> and <A HREF="refVectors.21.htm#39152" CLASS="XRef">Figure&nbsp;33</A> for details of storage format. </P><TABLE border=1 cellpadding=2><CAPTION><P CLASS="Tb.Table"><A NAME="pgfId=20998"> </A>Table&nbsp;6 <A NAME="29181"> </A>CMYK color spaces supported by QuickDraw GX</P></CAPTION><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=21004"> </A>Constant</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=21006"> </A>Enumeration<BR>Value</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=21008"> </A>Explanation</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21011"> </A><A NAME="marker=21010"> </A>gxCMYKSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21013"> </A>0x0002</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21016"> </A><A NAME="marker=21015"> </A>16 bits per component (cyan, magenta, yellow, and black); component values range from 0 to 0xFFFF. Total storage size for each color value: 64&nbsp;bits.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21019"> </A><A NAME="marker=21018"> </A>gxCMYK32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21021"> </A>0x0802</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21024"> </A><A NAME="marker=21023"> </A>8 bits per component (cyan, magenta, yellow, and black); component values range from 0 to 0xFF. Total storage size for each color value: 64&nbsp;bits.</FONT></TD></TR></TABLE><P CLASS="Fg.Figure"><A NAME="pgfId=21030"> </A>Figure&nbsp;33 <A NAME="39152"> </A>Storage formats for <A NAME="marker=21026"> </A>CMYK color spaces</P><DIV><IMG SRC="COLL-10.gif"></DIV></DIV><DIV><A NAME="refVec28"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=21032"> </A>Universal Color Spaces</H2><P CLASS="T1.Text1"><A NAME="pgfId=21034"> </A><A NAME="marker=21033"> </A>Some color spaces allow color to be expressed in a device-independent way. Whereas RGB colors vary with monitor characteristics, and CMYK colors vary with printer and paper characteristics, <I CLASS="italics">universal colors</I> are meant to be true representations of colors as perceived by the human eye. These color representations, called<B CLASS="bold"> universal color spaces,</B> result from work carried out in 1931 by the <A NAME="marker=21035"> </A>Commission Internationale d'Eclairage (CIE), and for that reason are also called <I CLASS="italics">CIE-based color spaces.</I></P><P CLASS="T1.Text1"><A NAME="pgfId=21036"> </A>In addition, broadcast-video color space (YIQ) is based on device-independent color characteristics, in that its colors are measured in terms of a standard device. It is therefore considered universal and is discussed in this section.</P></DIV><DIV><A NAME="refVec29"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=21037"> </A>XYZ Space</H2><P CLASS="T1.Text1"><A NAME="pgfId=21039"> </A><A NAME="marker=21038"> </A>There are several CIE-based color spaces, but all are derived from the fundamental <B CLASS="bold">XYZ space.</B> The XYZ space allows colors to be expressed as a mixture of the three <B CLASS="bold">tristimulus values</B><A NAME="marker=21040"> </A> X, Y, and Z. The term <I CLASS="italics">tristimulus</I> comes from the fact that color perception results from the retina of the eye responding to three types of stimuli. After experimentation, the CIE set up a hypothetical set of primaries, XYZ, that correspond to the way the eye's retina behaves. </P><P CLASS="T1.Text1"><A NAME="pgfId=21041"> </A>The CIE defined the primaries so that all visible light maps into a positive mixture of X, Y, and Z, and so that Y correlates approximately to the apparent lightness of a color. Generally, the mixtures of X, Y, and Z components used to describe a color are expressed as percentages ranging from 0% up to, in some cases, just over 100%. </P><P CLASS="T1.Text1"><A NAME="pgfId=21042"> </A>Other universal color spaces based on XYZ space are used primarily to relate some particular aspect of color or some perceptual color difference to XYZ values. <A NAME="marker=21043"> </A></P></DIV><DIV><A NAME="refVec30"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=21044"> </A>Yxy Space</H2><P CLASS="T1.Text1"><A NAME="pgfId=21047"> </A><A NAME="marker=21045"> </A><B CLASS="bold">Yxy space</B> expresses the XYZ values in terms of x and y <A NAME="marker=21046"> </A><B CLASS="bold">chromaticity</B> coordinates, somewhat analogous to the hue and saturation coordinates of HSV space. The coordinates are shown in the following formulas, used to convert XYZ into Yxy:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43510"> </A>Y = Y<BR>x = X / (X+Y+Z)<BR>y = Y / (X+Y+Z)<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=21049"> </A>Note that the Z tristimulus value is incorporated into the new coordinates, and does not appear by itself. Since Y still correlates to the lightness of a color, the other aspects of the color are found in the chromaticity coordinates x and y. This allows color variation in Yxy space to be plotted on a two-dimensional diagram. <A HREF="refVectors.21.htm#27784" CLASS="XRef">Figure&nbsp;34</A> shows the layout of colors in the x and y plane of Yxy space. Color Plate 4 at the front of this book shows the same plot in color.</P><P CLASS="Fg.Figure"><A NAME="pgfId=21058"> </A>Figure&nbsp;34 <A NAME="27784"> </A>Yxy <A NAME="marker=21054"> </A>chromaticities</P><DIV><IMG SRC="COLL-12.gif"></DIV></DIV><DIV><A NAME="refVec31"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=21059"> </A>L*u*v* Space and L*a*b* Space</H2><P CLASS="T1.Text1"><A NAME="pgfId=21061"> </A><A NAME="marker=21060"> </A>One problem with representing colors using the XYZ and Yxy color spaces is that they are perceptually nonlinear: it is not possible to accurately evaluate the perceptual closeness of colors based on their relative positions in XYZ or Yxy space. Colors that are close together in Yxy space may seem very different to observers, and colors that seem very similar to observers may be widely separated in Yxy space.</P><P CLASS="T1.Text1"><A NAME="pgfId=21062"> </A><B CLASS="bold">L*u*v* space</B> is a nonlinear transformation of XYZ space in order to create a perceptually linear color space. <B CLASS="bold">L*a*b* space</B> is a nonlinear transformation (a third-order approximation) of the Munsell color-notation system (not described here). Both are designed to match perceived color difference with quantitative distance in color space.</P><P CLASS="T1.Text1"><A NAME="pgfId=21063"> </A>Both L*u*v* space and L*a*b* space represent colors relative to a <B CLASS="bold">reference white point,</B><A NAME="marker=21064"> </A> which is a specific definition of what is considered white light, represented in terms of XYZ space, and usually based on the whitest light that can be generated by a given device. (In that sense L*u*v* and L*a*b* are not completely device independent; two numerically equal colors are truly identical only if they were measured relative to the same white point.)</P><P CLASS="T1.Text1"><A NAME="pgfId=21065"> </A>A primary benefit of using L*u*v* space and L*a*b* space is that the perceived difference between any two colors is proportional to the geometric distance in the color space between their color values. For applications where closeness of color needs to be quantified, such as in colorimetry, gemstone evaluation, or dye matching, use of L*u*v* space or L*a*b* space is common.</P><P CLASS="T1.Text1"><A NAME="pgfId=21066"> </A>The formulas for transforming an XYZ color into an L*u*v* color are</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43514"> </A>if (Y/Yn &gt; 0.008856)<BR>&nbsp;&nbsp;&nbsp;&nbsp;L = 116.0 * (Y / Y<sub>n</sub>)1/3 - 16.0;<BR>else<BR>&nbsp;&nbsp;&nbsp;&nbsp;L = 903.3 * (Y / Y<sub>n</sub>);<BR>u = 13.0 * L * (u' - u'<sub>n</sub>);<BR>v = 13.0 * L * (v' - v'<sub>n</sub>);<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=21068"> </A>where</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43518"> </A>u' = 4 * x / (X + 15*Y + 3*Z);<BR>v' = 9 * y / (X + 15*Y + 3*Z);<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=21070"> </A>and <TT CLASS="cv">u'<sub>n</sub></TT>, <TT CLASS="cv">v'<sub>n</sub></TT>, and <TT CLASS="cv">Y<sub>n</sub></TT> are the<TT CLASS="cv"> u'</TT>, <TT CLASS="cv">v'</TT>, and <TT CLASS="cv">Y</TT> values for the reference white point.</P><P CLASS="T1.Text1"><A NAME="pgfId=21071"> </A>Similarly, the formulas for transforming an XYZ color into an L*a*b* color are</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43522"> </A>if (Y/Yn &gt; 0.008856)<BR>&nbsp;&nbsp;&nbsp;&nbsp;L = 116.0 * (Y / Y<sub>n</sub>)1/3 - 16.0;<BR>else<BR>&nbsp;&nbsp;&nbsp;&nbsp;L = 903.3 * (Y / Y<sub>n</sub>)<BR>a = 500.0 * ( (X / X<sub>n</sub>)1/3 - (Y / Y<sub>n</sub>)1/3 );<BR>b = 500.0 * ( (Y / Y<sub>n</sub>)1/3 - (Z / Z<sub>n</sub>)1/3 );<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=21074"> </A>where <TT CLASS="cv">X<sub>n</sub></TT>, <TT CLASS="cv">Y<sub>n</sub></TT>, and <TT CLASS="cv">Z<sub>n</sub></TT> are the XYZ values for the reference white point. <A NAME="marker=21073"> </A></P></DIV><DIV><A NAME="refVec32"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=21075"> </A>Formats for XYZ-Based Color Spaces</H2><P CLASS="T1.Text1"><A NAME="pgfId=21077"> </A><A NAME="marker=21076"> </A>The universal color spaces supported by QuickDraw GX (and defined in the <TT CLASS="cv">gxColorSpaces</TT> enumeration) are <TT CLASS="cv">gxYXYSpace</TT>, <TT CLASS="cv">gxXYZSpace</TT>, <TT CLASS="cv">gxLUVSpace</TT>, <TT CLASS="cv">gxLABSpace</TT>, <TT CLASS="cv">gxYXY32Space</TT>, <TT CLASS="cv">gxXYZ32Space</TT>, <TT CLASS="cv">gxLUV32Space</TT>, and <TT CLASS="cv">gxLAB32Space</TT>. See <A HREF="refVectors.21.htm#16510" CLASS="XRef">Table 7</A> and <A HREF="refVectors.21.htm#39884" CLASS="XRef">Figure&nbsp;35</A> for details of storage format. Note that the ranges of values for the components differ significantly among the different color spaces.</P><TABLE border=1 cellpadding=2><CAPTION><P CLASS="Tb.Table"><A NAME="pgfId=21087"> </A>Table&nbsp;7 <A NAME="16510"> </A>Universal color spaces supported by QuickDraw GX&nbsp;</P></CAPTION><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=21093"> </A>Constant</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=21095"> </A>Enumeration<BR>Value</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=21097"> </A>Explanation</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21100"> </A><A NAME="marker=21099"> </A>gxYXYSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21102"> </A>0x0005</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21105"> </A><A NAME="marker=21104"> </A>16 bits per component (Y, x, and y); component values range from 0 (0%) to 0xFFFF (100%). Total storage size for each color value: 48 bits.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21108"> </A><A NAME="marker=21107"> </A>gxXYZSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21110"> </A>0x0006</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21113"> </A><A NAME="marker=21112"> </A>16 bits per component (X, Y, and Z). Component values range from 0 (0%) to 0xFFFF (200%; a value of 0x8000 represents 100%). Total storage size for each color value: 48 bits.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21116"> </A><A NAME="marker=21115"> </A>gxLUVSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21118"> </A>0x0007</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21121"> </A><A NAME="marker=21120"> </A>16 bits per component (L*, u*, and v*). The L* component values range from 0 (0%) to 0xFFFF (100% of white-point luminance). The u* and v* component values range from 0 (-1) to 0xFFFF (+1). Total storage size for each color value: 48 bits.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21124"> </A><A NAME="marker=21123"> </A>gxLABSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21126"> </A>0x0008</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21129"> </A><A NAME="marker=21128"> </A>16 bits per component (L*, a*, and b*). The L* component values range from 0 (0%) to 0xFFFF (100% of white-point luminance). The a* and b* component values range from 0 (-1) to 0xFFFF (+1). Total storage size for each color value: 48 bits.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21132"> </A><A NAME="marker=21131"> </A>gxYXY32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21134"> </A>0x0A05</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21137"> </A><A NAME="marker=21136"> </A>10 bits per component (Y, x, and y); component values range from 0 (0%) to 0x3FF (100%). Total storage size for each color value: 32 bits (bits 30 and 31 not used).</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21140"> </A><A NAME="marker=21139"> </A>gxXYZ32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21142"> </A>0x0A06</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21145"> </A><A NAME="marker=21144"> </A>10 bits per component (X, Y, and Z). Component values range from 0 (0%) to 0x3FF (200%; a value of 0x200 represents 100%). Total storage size for each color value: 32 bits (bits 30 and 31 not used).</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21148"> </A><A NAME="marker=21147"> </A>gxLUV32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21150"> </A>0x0A07</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21153"> </A><A NAME="marker=21152"> </A>10 bits per component (L*, u*, and v*). The L* component values range from 0 (0%) to 0x3FF (100% of white-point luminance). The u* and v* component values range from 0 (-1) to 0x3FF (+1). Total storage size for each color value: 32 bits (bits 30 and 31 not used).</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21156"> </A><A NAME="marker=21155"> </A>gxLAB32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21158"> </A>0x0A08</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21161"> </A><A NAME="marker=21160"> </A>10 bits per component (L*, a*, and b*). The L* component values range from 0 (0%) to 0x3FF (100% of white-point luminance). The a* and b* component values range from 0 (-1) to 0x3FF (+1). Total storage size for each color value: 32 bits (bits 30 and 31 not used).</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="3"><P CLASS="TbNote.TblNote"><A NAME="pgfId=21163"> </A>Because u*, v*, a*, and b* are normally signed numbers between 1.0 and -1.0, <BR>you can convert them into short integers as follows: <BR><TT CLASS="cv">anUnsignedshort = ((aFloat + 1.0)/2) * 65535.0</TT>;</P></TD></TR></TABLE><P CLASS="T1.Text1"><A NAME="pgfId=21171"> </A><A HREF="refVectors.21.htm#39884" CLASS="XRef">Figure&nbsp;35</A> shows storage formats for the supported XYZ color spaces. Formats for the Yxy, L*u*v*, and L*a*b* spaces are identical.</P><P CLASS="Fg.Figure"><A NAME="pgfId=21177"> </A>Figure&nbsp;35 <A NAME="39884"> </A>Storage <A NAME="marker=21173"> </A>formats for XYZ color spaces</P><DIV><IMG SRC="COLL-26.gif"></DIV></DIV><DIV><A NAME="refVec33"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=21178"> </A>Video Color Spaces</H2><P CLASS="T1.Text1"><A NAME="pgfId=21180"> </A><A NAME="marker=21179"> </A><B CLASS="bold">YIQ space</B> is sometimes called <I CLASS="italics">video color space.</I> It is based on the way a specific kind of RGB data is broken down for color television transmission. The three dimensions that describe these color spaces are Y, I, and Q, in which Y represents luminance and the other two components carry color information. </P><P CLASS="T1.Text1"><A NAME="pgfId=21181"> </A>Because the Y channel represents luminance it can be used alone; the Y channel is the only channel used in black and white television. The I and Q channels are called <I CLASS="italics">color difference</I> channels: the Y channel is split between them. The notations &quot;I&quot; and &quot;Q&quot; stand for &quot;in phase&quot; and &quot;in quadrature,&quot; respectively, referring to the method by which all of the channels are combined into a signal for broadcast.</P><P CLASS="T1.Text1"><A NAME="pgfId=21182"> </A>QuickDraw GX also defines NTSC and PAL color spaces. NTSC space corresponds to the color encoding used for color broadcasting in the United States, whereas PAL space corresponds to the color encoding used in Europe. NTSC and PAL have different screen resolutions, frequencies, and are otherwise incompatible, but in terms of how color values are calculated, NTSC space and PAL space are both identical to YIQ space. </P><P CLASS="T1.Text1"><A NAME="pgfId=21183"> </A>In YIQ space, the Y component can vary from 0 (black) to its maximum value (full luminance). I and Q are normally signed values, so they are centered around 0. <A HREF="refVectors.21.htm#10785" CLASS="XRef">Figure&nbsp;36</A> illustrates how colors map into the I and Q dimensions of YIQ space.</P><P CLASS="Fg.Figure"><A NAME="pgfId=21191"> </A>Figure&nbsp;36 <A NAME="10785"> </A>The I and Q axes in YIQ color space</P><DIV><IMG SRC="COLL-11.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=21192"> </A>The video color spaces supported by QuickDraw GX (and defined in the <TT CLASS="cv">gxColorSpaces</TT> enumeration) are <TT CLASS="cv">gxYIQSpace</TT>, <TT CLASS="cv">gxNTSCSpace</TT>, <TT CLASS="cv">gxPALSpace</TT>, <TT CLASS="cv">gxYIQ32Space</TT>, <TT CLASS="cv">gxNTSC32Space</TT>, and <TT CLASS="cv">gxPAL32Space</TT>. See <A HREF="refVectors.21.htm#19703" CLASS="XRef">Table 8</A> and <A HREF="refVectors.21.htm#24565" CLASS="XRef">Figure&nbsp;37</A> for details of storage format. In each of these spaces, a color value is represented by Y, I, and Q color components. </P><TABLE border=1 cellpadding=2><CAPTION><P CLASS="Tb.Table"><A NAME="pgfId=21202"> </A>Table&nbsp;8 <A NAME="19703"> </A>Video color spaces supported by QuickDraw GX</P></CAPTION><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=21208"> </A>Constant</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=21210"> </A>Enumeration<BR>Value</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=21212"> </A>Explanation</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21215"> </A><A NAME="marker=21214"> </A>gxYIQSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21217"> </A>0x0009</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21220"> </A><A NAME="marker=21219"> </A>16 bits per component (Y, I, and Q); Y-component values range from 0 to 0xFFFF; I- and Q-component values range from -0x7FFF to +0x7FFF. Total storage size for each color value: 48 bits.</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21223"> </A><A NAME="marker=21222"> </A>gxNTSCSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21225"> </A>0x0009</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21228"> </A><A NAME="marker=21227"> </A>(same as <TT CLASS="cv">gxYIQSpace</TT>)</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21231"> </A><A NAME="marker=21230"> </A>gxPALSpace<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21233"> </A>0x0009</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21236"> </A><A NAME="marker=21235"> </A>(same as <TT CLASS="cv">gxYIQSpace</TT>)</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21239"> </A><A NAME="marker=21238"> </A>gxYIQ32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21241"> </A>0x0A09</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21244"> </A><A NAME="marker=21243"> </A>10 bits per component (Y, I, and Q); Y-component values range from 0 to 0x3FF; I- and Q-component values range from -0x1FF to +0x1FF. Total storage size for each color value: 32 bits (bits 30 and 31 are not used).</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21247"> </A><A NAME="marker=21246"> </A>gxNTSC32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21249"> </A>0x0A09</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21252"> </A><A NAME="marker=21251"> </A>(same as <TT CLASS="cv">gxYIQ32Space</TT>)</FONT></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><CODE CLASS="TbCv.TblCode"><A NAME="pgfId=21255"> </A><A NAME="marker=21254"> </A>gxPAL32Space<BR></CODE></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21257"> </A>0x0A09</FONT></TD><TD ROWSPAN="1" COLSPAN="1"><FONT CLASS="TbT.TblText"><A NAME="pgfId=21260"> </A><A NAME="marker=21259"> </A>(same as <TT CLASS="cv">gxYIQ32Space</TT>)</FONT></TD></TR></TABLE><P CLASS="T1.Text1"><A NAME="pgfId=21264"> </A><A HREF="refVectors.21.htm#24565" CLASS="XRef">Figure&nbsp;37</A> shows storage formats for the supported YIQ color spaces. Formats for the NTSC and PAL spaces are identical.</P><P CLASS="Fg.Figure"><A NAME="pgfId=21270"> </A>Figure&nbsp;37 <A NAME="24565"> </A>Storage formats for <A NAME="marker=21266"> </A>YIQ color spaces</P><DIV><IMG SRC="COLL-25.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=21271"> </A>You can find more information on the theories of color and the various color spaces in the following publications:</P><P CLASS="T1.Text1"><A NAME="pgfId=21272"> </A><I CLASS="italics">Measuring Color,</I> by R.W.G. Hunt, John Wiley &amp; Sons, New York, 1987.</P><P CLASS="T1.Text1"><A NAME="pgfId=21273"> </A><I CLASS="italics">Illumination and Color in Computer Generated Imagery,</I> by Roy Hall, Springer-Verlag, New&nbsp;York, 1989. <A NAME="marker=21274"> </A></P></DIV><DIV><A NAME="refVec34"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=21276"> </A><A NAME="28087"> </A>Color Spaces With Alpha Channels</H2><P CLASS="T1.Text1"><A NAME="pgfId=21278"> </A><A NAME="marker=21277"> </A>QuickDraw GX supports the use of an alpha channel in one luminance-based color space (<TT CLASS="cv">gxGrayASpace</TT>) and two RGB color spaces (<TT CLASS="cv">gxRGBASpace</TT> and <TT CLASS="cv">gxARGB32Space</TT>). An<B CLASS="bold"> alpha channel</B><A NAME="marker=21279"> </A> is a component in a color space whose value typically determines the opacity of the color expressed by the other components. An alpha-channel value of 0 in a color means that the color is completely transparent, and a maximum value means that the color is completely opaque. A value in between means that the color is partially transparent.</P><P CLASS="T1.Text1"><A NAME="pgfId=21280"> </A>How transparency is handled in drawing depends on the transfer mode used when the color is drawn. (Transfer modes are discussed in <A HREF="refVectors.22.htm#39371" CLASS="XRef">&quot;Transfer Modes&quot;</A>.) Typically, however, transparency in a color being drawn--the <A NAME="marker=21281"> </A>source color-- means that the existing color at the location where drawing occurs--the <A NAME="marker=21282"> </A>destination color--shows through. Where the source is completely opaque, the destination is completely covered and is invisible; where the source is completely transparent, the destination shows through unchanged and the source is invisible.</P><P CLASS="T1.Text1"><A NAME="pgfId=21286"> </A><A HREF="refVectors.21.htm#15252" CLASS="XRef">Figure&nbsp;38</A> shows an example in which a uniform gray image (in <TT CLASS="cv">gxGrayASpace</TT>) is drawn over a black-and-white image. The gray color of the source is uniform across the rectangle, but the alpha-channel value decreases from 0xFFFF on the left to 0 on the right. As the alpha value decreases rightward, more and more of the destination color shows through.<A NAME="marker=40550"> </A> <A NAME="marker=40548"> </A></P><P CLASS="Fg.Figure"><A NAME="pgfId=21291"> </A>Figure&nbsp;38 <A NAME="15252"> </A>Showing color transparency with an alpha channel</P><DIV><IMG SRC="COLL-13.gif"></DIV></DIV><DIV><A NAME="refVec35"></A><!--RM--><H2 CLASS="H4.Heading4"><A NAME="pgfId=21293"> </A><A NAME="30810"> </A>Color-Component Values, Color Values, and Colors</H2><P CLASS="T1.Text1"><A NAME="pgfId=21294"> </A>Each of the color spaces described in this chapter requires one or more numeric values in a particular format to specify a color. This section describes the data types and structures with which QuickDraw GX describes colors in its color spaces.</P><P CLASS="T1.Text1"><A NAME="pgfId=21296"> </A>Each dimension, or component, in a color space has a <A NAME="marker=21295"> </A><B CLASS="bold">color-component value.</B> In the fundamental, unpacked QuickDraw GX color spaces--those with 16 bits per component--each color-component value is of type <TT CLASS="cv">gxColorValue</TT>:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43526"> </A>typedef unsigned short gxColorValue;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=21298"> </A>A color-component value can vary from 0 to 65,535 (0xFFFF), although the numerical interpretation of that range is different for different color spaces. In most cases, color-component intensities are interpreted numerically as varying between 0 and 1.0; for that reason, QuickDraw GX provides the constant <TT CLASS="cv">gxColorValue1</TT> to represent 0xFFFF.</P><P CLASS="T1.Text1"><A NAME="pgfId=21299"> </A>Depending on the color space used, one, two, three, or four color-component values combine to make a <A NAME="marker=21300"> </A><B CLASS="bold">color value.</B> A color value is a structure; it is the complete specification of a color in a given color space. QuickDraw GX supports 13 color-value formats, representing the fundamental 16-bits-per-component color spaces; all color operations in memory use one of those formats. The color-value formats are described in the section <A HREF="refVectors.21.htm#30810" CLASS="XRef">&quot;Color-Component Values, Color Values, and Colors&quot;</A>. For example, an RGB color value has this format:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43530"> </A>struct gxRGBColor{<BR>&nbsp;&nbsp;&nbsp;&nbsp;gxColorValue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;red;<BR>&nbsp;&nbsp;&nbsp;&nbsp;gxColorValue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;green;<BR>&nbsp;&nbsp;&nbsp;&nbsp;gxColorValue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;blue;<BR>};<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=21305"> </A>This is exactly the storage format for colors in <TT CLASS="cv">gxRGBSpace</TT>. However, colors stored in <TT CLASS="cv">gxRGB16Space</TT> or <TT CLASS="cv">gxRGB32Space</TT> have a packed storage format, and need to be converted to <TT CLASS="cv">gxRGBColor</TT> format when they are used. QuickDraw GX takes care of this for you; as far as your application is concerned, you can always manipulate colors in the color space you have specified.</P><P CLASS="T1.Text1"><A NAME="pgfId=21306"> </A>A color value plus a specification of the color space it belongs to constitute a <A NAME="marker=21307"> </A><B CLASS="bold">color</B> in QuickDraw&nbsp;GX. A color is defined by the <TT CLASS="cv">gxColor</TT> structure:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43534"> </A>struct gxColor{<BR>&nbsp;&nbsp;&nbsp;&nbsp;gxColorSpace&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;space;<BR>&nbsp;&nbsp;&nbsp;&nbsp;gxColorProfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;profile;<BR>&nbsp;&nbsp;&nbsp;&nbsp;union {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxCMYKColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmyk;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxRGBColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rgb;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxRGBAColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rgba;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxHSVColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hsv;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxHLSColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hls;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxXYZColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xyz;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxYXYColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yxy;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxLUVColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;luv;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxLABColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lab;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxYIQColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yiq;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gxColorValue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gray;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxGrayAColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;graya;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned short&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixel16;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixel32;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct gxIndexedColor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;indexed;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gxColorValue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;component[4];<BR>&nbsp;&nbsp;&nbsp;&nbsp;} element;<BR>};<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=21309"> </A>Each <TT CLASS="cv">gxColor</TT> structure holds the specification of a single color. Note that, besides the basic color-value formats such as <TT CLASS="cv">gxRGBColor</TT> and <TT CLASS="cv">gxXYZColor</TT>, a QuickDraw GX color can contain a 16-bit or 32-bit pixel value, and you can also access the color as an array of color-component values. Each of the color values in the <TT CLASS="cv">element</TT> union of the <TT CLASS="cv">gxColor</TT> structure is described in the section <A HREF="refVectors.4d.htm#32681" CLASS="XRef">&quot;Color Structure&quot;</A>. </P></DIV><hr>&#169; 1999 Apple Computer, Inc.<!-- QTnavbar start --><P><I>Inside Macintosh: QuickTime Reference</I><P>| <A HREF="refVectors.20.htm">Previous</A> | <A HREF="refVectors.1.htm">Chapter Contents</A> | <A HREF="refVectors.htm">Chapter Top</A> | <A HREF="refVectors.22.htm">Next</A> | <!-- QTnavbar end --></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>