{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf380
{\fonttbl\f0\fnil\fcharset80 AppleGothic;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fnil\fcharset111 ZapfDingbatsITC;
\f3\fswiss\fcharset77 Helvetica;\f4\fnil\fcharset77 Verdana;\f5\fnil\fcharset77 Verdana-Bold;
\f6\fnil\fcharset77 Verdana-Italic;}
{\colortbl;\red255\green255\blue255;\red85\green85\blue85;\red0\green0\blue255;\red64\green128\blue0;
\red76\green78\blue78;}
\vieww9000\viewh8400\viewkind0
\pard\tx280\tx500\li500\fi-500\ql\qnatural\pardirnatural

\f0\fs26 \cf2 \'a1\'e5
\f1\b\fs24 \cf0 	
\f2\b0 q
\f1\b 	Processes Step 1 (Review UI and what Studio features will be used)\
\pard\tx360\tx640\tx860\li860\fi-860\ql\qnatural\pardirnatural

\f3\b0 \cf0 	
\f0\fs26 \cf2 \'a1\'e5
\f3\fs24 \cf0 	
\f2 q	
\f3 Studio Features used in Processes\
\pard\tx720\tx1000\tx1220\li1220\fi-1220\ql\qnatural\pardirnatural
\cf0 	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Toolbar\
	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Table View with data source\
	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Use of "append" command to populate a data source\
	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Table View Column sorting support\
	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Data View multi-selection support\
	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Application Idle handler support\
	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Drag & drop support\
	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Use of document-based nib to get some Cocoa features automatically (tiled windows)\
\pard\tx360\tx640\tx860\li860\fi-860\ql\qnatural\pardirnatural
\cf0 	
\f0\fs26 \cf2 \'a1\'e5
\f3\fs24 \cf0 	
\f2 q	
\f3 For the sake of time\
\pard\tx720\tx1000\tx1220\li1220\fi-1220\ql\qnatural\pardirnatural
\cf0 	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 All UI elements are already named\
	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Icon resource folder has been imported to the project and the application icon set\
\pard\tx280\tx500\li500\fi-500\ql\qnatural\pardirnatural

\f0\fs26 \cf2 \'a1\'e5
\f1\b\fs24 \cf0 	
\f2\b0 q
\f1\b 	Processes Steps 2-7 (For your exploration later: toolbar, data source, data column sorting, inspector)\
\pard\tx360\tx640\tx860\li860\fi-860\ql\qnatural\pardirnatural

\f3\b0 \cf0 	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 See Processes Complete Outline for these steps\
\pard\tx280\tx500\li500\fi-500\ql\qnatural\pardirnatural

\f0\fs26 \cf2 \'a1\'e5
\f1\b\fs24 \cf0 	
\f2\b0 q
\f1\b 	Processes
\f3\b0  
\f1\b Step 8 (Add idle handler support and final review)\
\pard\tx360\tx640\tx860\li860\fi-860\ql\qnatural\pardirnatural

\f3\b0 \cf0 	
\f0\fs26 \cf2 \'a1\'e5
\f3\fs24 \cf0 	
\f2 q	
\f3 Using the AppleScript inspector pane, add an "idle" handler to the MainMenu.nib's "File's Owner" instance, attach the handler to "Processes.applescript", then save MainMenu.nib and click the Edit button, which will open the script in Xcode and insert the handler template. Add the following code inside the "on idle" handler template:\
\pard\tx720\tx1000\tx1220\li1220\fi-1220\ql\qnatural\pardirnatural

\f4\fs20 \cf0 \CocoaLigature0 	
\f3\fs26 \CocoaLigature1 \'a5
\f4\fs20 \CocoaLigature0 	
\f2\fs24 \CocoaLigature1 q
\f4\fs20 \CocoaLigature0 	
\f5\b \cf3 set
\f4\b0 \cf0  \cf4 popupName\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 title\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf3 popup button\cf0  "idlepopupmenu" 
\f5\b \cf3 of
\f4\b0 \cf0  \cf3 window\cf0  "Processes"\
\pard\li1220\ql\qnatural\pardirnatural
\cf0 	\

\f5\b \cf3 if
\f4\b0 \cf0  \cf4 popupName\cf0  
\f5\b \cf3 is not
\f4\b0 \cf0  
\f5\b \cf3 equal to
\f4\b0 \cf0  "Update manually" 
\f5\b \cf3 then\

\f4\b0 \cf4 updateProcesses\cf0 ()\

\f5\b \cf3 end
\f4\b0 \cf0  
\f5\b \cf3 if\

\f4\b0 \cf0 	\

\f5\b \cf3 return
\f4\b0 \cf0  \cf4 idleVal\
\pard\tx720\tx1000\tx1220\li1220\fi-1220\ql\qnatural\pardirnatural

\f3\fs24 \cf0 	
\f0\fs26 \cf2 \CocoaLigature1 \'a1\'e5
\f3\fs24 \cf0 \CocoaLigature0 	
\f2 \CocoaLigature1 q\CocoaLigature0 	
\f3 Add the following property to the top of the "Processes.applescript" script:\
\pard\tx1080\tx1360\tx1580\li1580\fi-1580\ql\qnatural\pardirnatural

\f4\fs20 \cf0 	
\f3\fs26 \CocoaLigature1 \'a5
\f4\fs20 \CocoaLigature0 	
\f2\fs24 \CocoaLigature1 q
\f4\fs20 \CocoaLigature0 	
\f5\b \cf3 property
\f4\b0 \cf0  \cf4 idleVal\cf0  : 60\
\pard\tx360\tx640\tx860\li860\fi-860\ql\qnatural\pardirnatural

\f3\fs24 \cf0 \CocoaLigature1 	
\f0\fs26 \cf2 \'a1\'e5
\f3\fs24 \cf0 	
\f2 q	
\f3 Wire up the "update in *" popup button located in the bottom left corner of the main window\
\pard\tx720\tx1000\tx1220\li1220\fi-1220\ql\qnatural\pardirnatural
\cf0 \CocoaLigature0 	
\f0\fs26 \cf2 \CocoaLigature1 \'a1\'e5
\f3\fs24 \cf0 \CocoaLigature0 	
\f2 \CocoaLigature1 q\CocoaLigature0 	
\f3 Using the AppleScript inspector pane, add a "choose menu item" handler to the MainMenu.nib's NSPopUpButton, attach the handler to "Processes.applescript", then save MainMenu.nib\CocoaLigature1  \CocoaLigature0 and click the Edit button, which will open the script in Xcode and insert the handler template. Add the following code inside the "on choose menu item" handler template:\
\pard\tx1080\tx1360\tx1580\li1580\fi-1580\ql\qnatural\pardirnatural

\f4\fs20 \cf0 	
\f3\fs26 \CocoaLigature1 \'a5
\f4\fs20 \CocoaLigature0 	
\f2\fs24 \CocoaLigature1 q
\f4\fs20 \CocoaLigature0 	
\f5\b \cf3 if
\f4\b0 \cf0  \cf3 name\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf4 theObject\cf0  = "idlepopupmenu" 
\f5\b \cf3 then\
\pard\li1580\ql\qnatural\pardirnatural

\f4\b0 \cf0 	
\f5\b \cf3 set
\f4\b0 \cf0  \cf4 popupName\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 title\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf3 popup button\cf0  "idlepopupmenu" 
\f5\b \cf3 of
\f4\b0 \cf0  \cf3 window\cf0  "Processes"\
	\

\f5\b \cf3 if
\f4\b0 \cf0  \cf4 popupName\cf0  = "Update every minute" 
\f5\b \cf3 then\
set
\f4\b0 \cf0  \cf4 idleVal\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  60\

\f5\b \cf3 else
\f4\b0 \cf0  
\f5\b \cf3 if
\f4\b0 \cf0  \cf4 popupName\cf0  = "Update every 3 minutes" 
\f5\b \cf3 then\
set
\f4\b0 \cf0  \cf4 idleVal\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  180\

\f5\b \cf3 else
\f4\b0 \cf0  
\f5\b \cf3 if
\f4\b0 \cf0  \cf4 popupName\cf0  = "Update every 5 minutes" 
\f5\b \cf3 then\
set
\f4\b0 \cf0  \cf4 idleVal\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  300\

\f5\b \cf3 else
\f4\b0 \cf0  
\f5\b \cf3 if
\f4\b0 \cf0  \cf4 popupName\cf0  = "Update every 10 minutes" 
\f5\b \cf3 then\
set
\f4\b0 \cf0  \cf4 idleVal\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  600\

\f5\b \cf3 end
\f4\b0 \cf0  
\f5\b \cf3 if\

\f4\b0 \cf0 	
\f5\b \cf3 end
\f4\b0 \cf0  
\f5\b \cf3 if\
\pard\tx720\tx1000\tx1220\li1220\fi-1220\ql\qnatural\pardirnatural

\f3\b0\fs24 \cf0 	
\fs26 \CocoaLigature1 \'a5
\fs24 \CocoaLigature0 	
\f2 \CocoaLigature1 q\CocoaLigature0 	
\f3 Build and run Processes to verify that the idle handler now updates the process list at the chosen interval\
\pard\tx280\tx500\li500\fi-500\ql\qnatural\pardirnatural

\f0\fs26 \cf2 \CocoaLigature1 \'a1\'e5
\f1\b\fs24 \cf0 	
\f2\b0 q
\f1\b 	Processes Step 9 (Add drag & drop support)\
\pard\tx360\tx640\tx860\li860\fi-860\ql\qnatural\pardirnatural

\f3\b0 \cf0 	
\f0\fs26 \cf2 \'a1\'e5
\f3\fs24 \cf0 	
\f2 q	
\f3 Add drag & drop support to the table view, allowing users to drag & drop applications to the table view to launch them\
\pard\tx720\tx1000\tx1220\li1220\fi-1220\ql\qnatural\pardirnatural

\f4 \cf0 \CocoaLigature0 	
\f0\fs26 \cf2 \CocoaLigature1 \'a1\'e5
\f4\fs24 \cf0 \CocoaLigature0 	
\f2 \CocoaLigature1 q\CocoaLigature0 	
\f3 Register drag types by adding the following code to the "awake from nib" handler in "Processes.applescript" at the end of the "
\f5\b\fs20 \cf3 else
\f4\b0 \cf0  
\f5\b \cf3 if
\f4\b0 \cf0  \cf3 name\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf4 theObject\cf0  
\f5\b \cf3 is
\f4\b0 \cf0  "processesTable" 
\f5\b \cf3 then
\f1 "
\f3\b0\fs24 \cf0  block (and before the last "end if" statement):\
\pard\tx1080\tx1360\tx1580\li1580\fi-1580\ql\qnatural\pardirnatural

\f4\fs20 \cf0 	
\f3\fs26 \CocoaLigature1 \'a5
\f4\fs20 \CocoaLigature0 	
\f2\fs24 \CocoaLigature1 q
\f4\fs20 \CocoaLigature0 	--
\f6\i \cf5  Register for "file names" drag types\
\pard\li1580\ql\qnatural\pardirnatural

\f5\i0\b \cf3 tell
\f4\b0 \cf0  \cf4 theObject\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 register\cf0  \cf3 drag types\cf0  \{"file names"\}\
\pard\tx720\tx1000\tx1220\li1220\fi-1220\ql\qnatural\pardirnatural

\f3\fs24 \cf0 	
\f0\fs26 \cf2 \CocoaLigature1 \'a1\'e5
\f3\fs24 \cf0 \CocoaLigature0 	
\f2 \CocoaLigature1 q\CocoaLigature0 	
\f3 Using the AppleScript inspector pane, add a "drop" handler to the MainMenu.nib's\CocoaLigature1  \CocoaLigature0 NSTableView, attach the handler to "Processes.applescript", then save MainMenu.nib\CocoaLigature1  \CocoaLigature0 and click the Edit button, which will open the script in Xcode and insert the handler template. Add the following code inside the "on drop" handler template:\
\pard\tx1080\tx1360\tx1580\li1580\fi-1580\ql\qnatural\pardirnatural

\f4\fs20 \cf0 	
\f3\fs26 \CocoaLigature1 \'a5
\f4\fs20 \CocoaLigature0 	
\f2\fs24 \CocoaLigature1 q
\f5\b\fs20 \cf3 \CocoaLigature0 set
\f4\b0 \cf0  \cf4 theDragSucceeded\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 false\
\pard\li1580\ql\qnatural\pardirnatural
\cf3 \
\pard\tx1080\tx1360\tx1580\li1580\fi-1580\ql\qnatural\pardirnatural
\cf0 			--
\f6\i \cf5  Get the list of data types on the pasteboard\
\pard\li1580\ql\qnatural\pardirnatural

\f5\i0\b \cf3 set
\f4\b0 \cf0  \cf4 dataTypes\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 types\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf3 pasteboard\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf4 dragInfo\
\cf0 	\
--
\f6\i \cf5  We are only interested in "file names" data types\

\f5\i0\b \cf3 if
\f4\b0 \cf0  "file names" 
\f5\b \cf3 is
\f4\b0 \cf0  
\f5\b \cf3 in
\f4\b0 \cf0  \cf4 dataTypes\cf0  
\f5\b \cf3 then\

\f4\b0 \cf0 	--
\f6\i \cf5  Initialize the list of files to an empty list\

\f5\i0\b \cf3 set
\f4\b0 \cf0  \cf4 theFiles\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \{\}\
	\
--
\f6\i \cf5  We want the data as a list of file names, so set the preferred type to "file names"\

\f5\i0\b \cf3 set
\f4\b0 \cf0  \cf3 preferred type\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf3 pasteboard\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf4 dragInfo\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  "file names"\
	\
--
\f6\i \cf5  Get the list of files from the pasteboard\

\f5\i0\b \cf3 set
\f4\b0 \cf0  \cf4 theFiles\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 contents\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf3 pasteboard\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf4 dragInfo\
\cf0 	\
--
\f6\i \cf5  Make sure we have at least one item\

\f5\i0\b \cf3 if
\f4\b0 \cf0  (\cf3 count\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  \cf4 theFiles\cf0 ) > 0 
\f5\b \cf3 then\
set
\f4\b0 \cf0  \cf4 containsApp\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 false\
\cf0 \
--
\f6\i \cf5  repeat through files list and launch any file that is an application\

\f5\i0\b \cf3 repeat
\f4\b0 \cf0  
\f5\b \cf3 with
\f4\b0 \cf0  \cf4 i\cf0  
\f5\b \cf3 in
\f4\b0 \cf0  \cf4 theFiles\

\f5\b \cf3 \
set
\f4\b0 \cf0  \cf4 TheFile\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf4 i\cf0  
\f5\b \cf3 as
\f4\b0 \cf0  \cf3 POSIX file\

\f5\b set
\f4\b0 \cf0  \cf4 FileKind\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 kind\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  (\cf3 info for\cf0  \cf4 TheFile\cf0 )\
\

\f5\b \cf3 if
\f4\b0 \cf0  \cf4 FileKind\cf0  = "Application" 
\f5\b \cf3 then\
set
\f4\b0 \cf0  \cf4 shortName\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 short name\cf0  
\f5\b \cf3 of
\f4\b0 \cf0  (\cf3 info for\cf0  \cf4 TheFile\cf0 )\

\f5\b \cf3 tell
\f4\b0 \cf0  \cf3 application\cf0  \cf4 shortName\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 launch\

\f5\b set
\f4\b0 \cf0  \cf4 containsApp\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 true\

\f5\b end
\f4\b0 \cf0  
\f5\b \cf3 if\

\f4\b0 \cf0 \

\f5\b \cf3 end
\f4\b0 \cf0  
\f5\b \cf3 repeat
\f4\b0 \cf0 \
	\

\f5\b \cf3 if
\f4\b0 \cf0  \cf4 containsApp\cf0  
\f5\b \cf3 then\

\f4\b0 \cf4 updateProcesses\cf0 ()\

\f5\b \cf3 set
\f4\b0 \cf0  \cf4 theDragSucceeded\cf0  
\f5\b \cf3 to
\f4\b0 \cf0  \cf3 true\cf0 \

\f5\b \cf3 end
\f4\b0 \cf0  
\f5\b \cf3 if\

\f4\b0 \cf0 	
\f5\b \cf3 end
\f4\b0 \cf0  
\f5\b \cf3 if\

\f4\b0 \cf0 	
\f5\b \cf3 end
\f4\b0 \cf0  
\f5\b \cf3 if\
\
return 
\f4\b0 \cf4 theDragSucceeded
\f5\b \cf3 \
\pard\tx1080\tx1360\tx1580\li1580\fi-1580\ql\qnatural\pardirnatural

\f3\b0\fs24 \cf0 	
\f0\fs26 \cf2 \CocoaLigature1 \'a1\'e5
\f3\fs24 \cf0 \CocoaLigature0 	
\f2 \CocoaLigature1 q\CocoaLigature0 	
\f3 Build and run Processes\
\pard\tx1440\tx1720\tx1940\li1940\fi-1940\ql\qnatural\pardirnatural
\cf0 \CocoaLigature1 	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Drag & drop applications on the table view to verify they are launched and the table view is updated\
	
\fs26 \'a5
\fs24 	
\f2 q	
\f3 Drag & drop other types of files and folders on the table view to verify that nothing happens\
}