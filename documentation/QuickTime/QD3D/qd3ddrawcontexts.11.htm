<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing Draw Contexts</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3303"> </A>Managing Draw Contexts</H1><P CLASS="T1.Text1"><A NAME="pgfId=3308"> </A><A NAME="marker=3304"> </A>QuickDraw&nbsp;3D provides a number of general routines for operating with draw context objects.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3309"> </A>Q3DrawContext_GetType</H2><P CLASS="T1.Text1"><A NAME="pgfId=3310"> </A><A NAME="marker=720"> </A>You can use the <TT CLASS="cv">Q3DrawContext_GetType</TT> function to get the type of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8517"> </A>TQ3ObjectType Q3DrawContext_GetType (TQ3DrawContextObject drawContext);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8519"> </A><TT CLASS="cv">drawContext</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3312"> </A>A draw context object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3313"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3314"> </A>The <TT CLASS="cv">Q3DrawContext_GetType</TT> function returns, as its function result, the type of the draw context specified by the <TT CLASS="cv">drawContext</TT> parameter. The types of draw contexts currently supported by QuickDraw&nbsp;3D are defined by these constants:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=8530"> </A>kQ3DrawContextTypeMacintosh<BR>kQ3DrawContextTypePixmap<BR>kQ3DrawContextTypeWin32DC<BR>kQ3DrawContextTypeDDSurface<BR></CODE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3319"> </A>Q3DrawContext_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=3320"> </A><A NAME="marker=732"> </A>You can use the <TT CLASS="cv">Q3DrawContext_GetData</TT> function to get the data associated with a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8536"> </A>TQ3Status Q3DrawContext_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextData *contextData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8538"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3322"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8547"> </A><TT CLASS="cv">contextData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3323"> </A>On exit, a pointer to a draw context data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3324"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3325"> </A>The <TT CLASS="cv">Q3DrawContext_GetData</TT> function returns, in the <TT CLASS="cv">contextData</TT> parameter, a pointer to a draw context data structure for the draw context specified by the <TT CLASS="cv">context</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3326"> </A>Q3DrawContext_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=3327"> </A><A NAME="marker=741"> </A>You can use the <TT CLASS="cv">Q3DrawContext_SetData</TT> function to set the data associated with a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8558"> </A>TQ3Status Q3DrawContext_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3DrawContextData *contextData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8560"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3329"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8569"> </A><TT CLASS="cv">contextData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3330"> </A>A pointer to a draw context data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3331"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3332"> </A>The <TT CLASS="cv">Q3DrawContext_SetData</TT> function sets the data associated with the draw context specified by the <TT CLASS="cv">context</TT> parameter to that specified in the draw context data structure pointed to by the <TT CLASS="cv">contextData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3333"> </A>Q3DrawContext_GetClearImageColor</H2><P CLASS="T1.Text1"><A NAME="pgfId=3334"> </A><A NAME="marker=750"> </A>You can use the <TT CLASS="cv">Q3DrawContext_GetClearImageColor</TT> function to get the image clearing color of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8580"> </A>TQ3Status Q3DrawContext_GetClearImageColor (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ColorARGB *color);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8582"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3336"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8591"> </A><TT CLASS="cv">color</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3337"> </A>On exit, the current image clearing color of the specified draw context.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3341"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3342"> </A>The <TT CLASS="cv">Q3DrawContext_GetClearImageColor</TT> function returns, in the <TT CLASS="cv">color</TT> parameter, a constant that indicates the current image clearing color for the draw context specified by the <TT CLASS="cv">context</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3343"> </A>Q3DrawContext_SetClearImageColor</H2><P CLASS="T1.Text1"><A NAME="pgfId=3344"> </A><A NAME="marker=762"> </A>You can use the <TT CLASS="cv">Q3DrawContext_SetClearImageColor</TT> function to set the image clearing color of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8602"> </A>TQ3Status Q3DrawContext_SetClearImageColor (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3ColorARGB *color);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8604"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3346"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8613"> </A><TT CLASS="cv">color</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3347"> </A>The desired image clearing color of the specified draw context.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3351"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3352"> </A>The <TT CLASS="cv">Q3DrawContext_SetClearImageColor</TT> function sets the image clearing color of the draw context specified by the <TT CLASS="cv">context</TT> parameter to the value specified in the <TT CLASS="cv">color</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3353"> </A>Q3DrawContext_GetPane</H2><P CLASS="T1.Text1"><A NAME="pgfId=3354"> </A><A NAME="marker=774"> </A>You can use the <TT CLASS="cv">Q3DrawContext_GetPane</TT> function to get the pane of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8624"> </A>TQ3Status Q3DrawContext_GetPane (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Area *pane);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8626"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4461"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8639"> </A><TT CLASS="cv">pane</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3357"> </A>On exit, the area in the specified draw context in which all drawing occurs.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3358"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3359"> </A>The <TT CLASS="cv">Q3DrawContext_GetPane</TT> function returns, in the <TT CLASS="cv">pane</TT> parameter, the area in the draw context specified by the <TT CLASS="cv">context</TT> parameter in which all drawing occurs.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3360"> </A>Q3DrawContext_SetPane</H2><P CLASS="T1.Text1"><A NAME="pgfId=3361"> </A><A NAME="marker=783"> </A>You can use the <TT CLASS="cv">Q3DrawContext_SetPane</TT> function to set the pane of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8650"> </A>TQ3Status Q3DrawContext_SetPane (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Area *pane);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8652"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3363"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8661"> </A><TT CLASS="cv">pane</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3364"> </A>The area in the specified draw context in which all drawing should occur.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3365"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3366"> </A>The <TT CLASS="cv">Q3DrawContext_SetPane</TT> function sets the area of the draw context specified by the <TT CLASS="cv">context</TT> parameter within which all drawing is to occur to the area specified in the <TT CLASS="cv">pane</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3367"> </A>Q3DrawContext_GetPaneState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3368"> </A><A NAME="marker=792"> </A>You can use the <TT CLASS="cv">Q3DrawContext_GetPaneState</TT> function to get the pane state of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8672"> </A>TQ3Status Q3DrawContext_GetPaneState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean *state);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8674"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3370"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8683"> </A><TT CLASS="cv">state</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3371"> </A>On exit, the current pane state of the specified draw context.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3372"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3373"> </A>The <TT CLASS="cv">Q3DrawContext_GetPaneState</TT> function returns, in the <TT CLASS="cv">state</TT> parameter, a Boolean value that determines whether the pane associated with the draw context specified by the <TT CLASS="cv">context</TT> parameter is to be used (<TT CLASS="cv">kQ3True</TT>) or not (<TT CLASS="cv">kQ3False</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3374"> </A>Q3DrawContext_SetPaneState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3375"> </A><A NAME="marker=801"> </A>You can use the <TT CLASS="cv">Q3DrawContext_SetPaneState</TT> function to set the pane state of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8694"> </A>TQ3Status Q3DrawContext_SetPaneState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean state);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8696"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3377"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8705"> </A><TT CLASS="cv">state</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3378"> </A>The desired pane state of the specified draw context.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3379"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3380"> </A>The <TT CLASS="cv">Q3DrawContext_SetPaneState</TT> function sets the pane state of the draw context specified by the <TT CLASS="cv">context</TT> parameter to the value specified in the <TT CLASS="cv">state</TT> parameter. If the value of <TT CLASS="cv">state</TT> is <TT CLASS="cv">kQ3True</TT>, the pane associated with that draw context is to be used; if <TT CLASS="cv">kQ3False</TT>, the pane is not used.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3381"> </A>Q3DrawContext_GetClearImageMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=3382"> </A><A NAME="marker=810"> </A>You can use the <TT CLASS="cv">Q3DrawContext_GetClearImageMethod</TT> function to get the image clearing method of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8716"> </A>TQ3Status Q3DrawContext_GetClearImageMethod (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextClearImageMethod *method);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8718"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3384"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8727"> </A><TT CLASS="cv">method</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3385"> </A>On exit, the current image clearing method of the specified draw context. See <A HREF="qd3ddrawcontexts.b.htm#34654" CLASS="XRef">[link]</A> for the values that can be returned in this parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3389"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3390"> </A>The <TT CLASS="cv">Q3DrawContext_GetClearImageMethod</TT> function returns, in the <TT CLASS="cv">method</TT> parameter, a constant that indicates the current image clearing method for the draw context specified by the <TT CLASS="cv">context</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3391"> </A>Q3DrawContext_SetClearImageMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=3392"> </A><A NAME="marker=822"> </A>You can use the <TT CLASS="cv">Q3DrawContext_SetClearImageMethod</TT> function to set the image clearing method of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8738"> </A>TQ3Status Q3DrawContext_SetClearImageMethod (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextClearImageMethod method);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8740"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3394"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8749"> </A><TT CLASS="cv">method</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3395"> </A>The desired image clearing method of the specified draw context. See <A HREF="qd3ddrawcontexts.b.htm#34654" CLASS="XRef">[link]</A> for the values that can be passed in this parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3399"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3400"> </A>The <TT CLASS="cv">Q3DrawContext_SetClearImageMethod</TT> function sets the image clearing method of the draw context specified by the <TT CLASS="cv">context</TT> parameter to the value specified in the <TT CLASS="cv">method</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3401"> </A>Q3DrawContext_GetMask</H2><P CLASS="T1.Text1"><A NAME="pgfId=3402"> </A><A NAME="marker=834"> </A>You can use the <TT CLASS="cv">Q3DrawContext_GetMask</TT> function to get the mask of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8760"> </A>TQ3Status Q3DrawContext_GetMask (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Bitmap *mask);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8762"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3404"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8771"> </A><TT CLASS="cv">mask</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3405"> </A>On exit, the mask of the specified draw context.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3406"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3407"> </A>The <TT CLASS="cv">Q3DrawContext_GetMask</TT> function returns, in the <TT CLASS="cv">mask</TT> parameter, the current mask for the draw context specified by the <TT CLASS="cv">context</TT> parameter. The mask is a bitmap whose bits determine whether or not corresponding pixels in the drawing destination are drawn or are masked out. <TT CLASS="cv">Q3DrawContext_GetMask</TT> allocates memory internally for the returned bitmap; when you're done using the bitmap, you should call the <TT CLASS="cv">Q3Bitmap_Empty</TT> function to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3408"> </A>Q3DrawContext_SetMask</H2><P CLASS="T1.Text1"><A NAME="pgfId=3409"> </A><A NAME="marker=843"> </A>You can use the <TT CLASS="cv">Q3DrawContext_SetMask</TT> function to set the mask of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8782"> </A>TQ3Status Q3DrawContext_SetMask (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Bitmap *mask);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8784"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3411"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8793"> </A><TT CLASS="cv">mask</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3412"> </A>The desired mask of the specified draw context.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3413"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3414"> </A>The <TT CLASS="cv">Q3DrawContext_SetMask</TT> function sets the mask of the draw context specified by the <TT CLASS="cv">context</TT> parameter to the bitmap specified in the <TT CLASS="cv">mask</TT> parameter. <TT CLASS="cv">Q3DrawContext_SetMask</TT> copies the bitmap to internal QuickDraw&nbsp;3D memory, so you can dispose of the specified bitmap after calling <TT CLASS="cv">Q3DrawContext_SetMask</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3418"> </A>Q3DrawContext_GetMaskState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3419"> </A><A NAME="marker=855"> </A>You can use the <TT CLASS="cv">Q3DrawContext_GetMaskState</TT> function to get the mask state of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8804"> </A>TQ3Status Q3DrawContext_GetMaskState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean *state);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8806"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3421"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8815"> </A><TT CLASS="cv">state</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3422"> </A>On exit, the current mask state of the specified draw context.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3423"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3424"> </A>The <TT CLASS="cv">Q3DrawContext_GetMaskState</TT> function returns, in the <TT CLASS="cv">state</TT> parameter, a Boolean value that determines whether the mask associated with the draw context specified by the <TT CLASS="cv">context</TT> parameter is to be used (<TT CLASS="cv">kQ3True</TT>) or not (<TT CLASS="cv">kQ3False</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3425"> </A>Q3DrawContext_SetMaskState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3426"> </A><A NAME="marker=864"> </A>You can use the <TT CLASS="cv">Q3DrawContext_SetMaskState</TT> function to set the mask state of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8826"> </A>TQ3Status Q3DrawContext_SetMaskState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean state);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8828"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3428"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8837"> </A><TT CLASS="cv">state</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3429"> </A>The desired mask state of the specified draw context.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3430"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3431"> </A>The <TT CLASS="cv">Q3DrawContext_SetMaskState</TT> function sets the mask state of the draw context specified by the <TT CLASS="cv">context</TT> parameter to the value specified in the <TT CLASS="cv">state</TT> parameter. Set <TT CLASS="cv">state</TT> to <TT CLASS="cv">kQ3True</TT> if you want the mask enabled and to <TT CLASS="cv">kQ3False</TT> otherwise.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3432"> </A>Q3DrawContext_GetDoubleBufferState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3433"> </A><A NAME="marker=873"> </A>You can use the <TT CLASS="cv">Q3DrawContext_GetDoubleBufferState</TT> function to get the double buffer state of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8848"> </A>TQ3Status Q3DrawContext_GetDoubleBufferState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean *state);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8850"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3435"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8859"> </A><TT CLASS="cv">state</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3436"> </A>On exit, the current mask state of the specified draw context.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3437"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3438"> </A>The <TT CLASS="cv">Q3DrawContext_GetDoubleBufferState</TT> function returns, in the <TT CLASS="cv">state</TT> parameter, a Boolean value that determines whether double buffering is enabled for the draw context specified by the <TT CLASS="cv">context</TT> parameter (<TT CLASS="cv">kQ3True</TT>) or not (<TT CLASS="cv">kQ3False</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3439"> </A>Q3DrawContext_SetDoubleBufferState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3440"> </A><A NAME="marker=882"> </A>You can use the <TT CLASS="cv">Q3DrawContext_SetDoubleBufferState</TT> function to set the double buffer state of a draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8874"> </A>TQ3Status Q3DrawContext_SetDoubleBufferState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextObject context, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean state);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8876"> </A><TT CLASS="cv">context</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3442"> </A>A draw context object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8885"> </A><TT CLASS="cv">state</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3443"> </A>The desired mask state of the specified draw context.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3444"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3445"> </A>The <TT CLASS="cv">Q3DrawContext_SetDoubleBufferState</TT> function sets the double buffer state of the draw context specified by the <TT CLASS="cv">context</TT> parameter to the value specified in the <TT CLASS="cv">state</TT> parameter. Set <TT CLASS="cv">state</TT> to <TT CLASS="cv">kQ3True</TT> if you want the double buffering enabled and to <TT CLASS="cv">kQ3False</TT> otherwise. When you enable double buffering, the active buffer is the back buffer.<A NAME="marker=3446"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>