<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Application-Defined Routines</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH2.RoutineHd2"><A NAME="pgfId=3769"> </A><A NAME="35903"> </A><A NAME="marker=3571"> </A>Application-Defined Routines</H1><P CLASS="T1.Text1"><A NAME="pgfId=4775"> </A><A NAME="marker=3770"> </A><A NAME="marker=3771"> </A>QuickDraw&nbsp;3D allows you to specify idle methods that QuickDraw&nbsp;3D can call occasionally during lengthy operations. Two tools, TQ3ViewIdleProgressMethod and TQ3ViewEndFrameMethod, provide progress and end-of-frame information. They can be called only from a renderer plug-in module.</P><DIV><H3 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3779"> </A><A NAME="34185"> </A>TQ3ViewIdleMethod</H3><P CLASS="T1.Text1"><A NAME="pgfId=3780"> </A>You can define an idle method to receive occasional callbacks to your application during lengthy operations.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9756"> </A>typedef TQ3Status (*TQ3ViewIdleMethod) (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const void *idleData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9758"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3782"> </A>A view.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9767"> </A><TT CLASS="cv">idleData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3783"> </A>A pointer to an application-defined block of data.</DD></DL COMPACT><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3784"> </A>DESCRIPTION</H4><P CLASS="T1.Text1"><A NAME="pgfId=3785"> </A>Your <TT CLASS="cv">TQ3ViewIdleMethod</TT> function is called occasionally during lengthy operations, such as rendering a complex model. You can use an idle method to provide a means for the user to cancel the lengthy operation (for example, by clicking a button or pressing a key sequence such as Command-period).</P><P CLASS="T1.Text1"><A NAME="pgfId=3789"> </A>If your idle method returns <TT CLASS="cv">kQ3Success</TT>, QuickDraw&nbsp;3D continues its current operation. If your idle method returns <TT CLASS="cv">kQ3Failure</TT>, QuickDraw&nbsp;3D cancels its current operation and returns <TT CLASS="cv">kQ3ViewStatusCancelled</TT> the next time you call <TT CLASS="cv">Q3View_EndRendering</TT> or a similar function. You should not call <TT CLASS="cv">Q3View_Cancel</TT> (or any other QuickDraw&nbsp;3D routine) inside your idle method.</P><P CLASS="T1.Text1"><A NAME="pgfId=2601"> </A>There is currently no way to indicate how often you want your idle method to be called. You can read the time maintained by the Operating System if you need to determine the amount of time that has elapsed since your idle method was last called.</P></DIV><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3797"> </A>SPECIAL CONSIDERATIONS</H4><P CLASS="T1.Text1"><A NAME="pgfId=3801"> </A>You must not call any QuickDraw&nbsp;3D routines inside your idle method. In particular, you must not change any of the settings of the view being rendered or call <TT CLASS="cv">Q3View_StartRendering</TT> on that same view.</P><P CLASS="T1.Text1"><A NAME="pgfId=3802"> </A>Some renderers (particularly those that use hardware accelerators) might not support idle methods.<A NAME="marker=3803"> </A><A NAME="marker=3804"> </A></P></DIV></DIV><DIV><H3 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4723"> </A>TQ3ViewIdleProgressMethod</H3><P CLASS="T1.Text1"><A NAME="pgfId=4724"> </A>You can use the TQ3ViewIdleProgressMethod function to to register callback routines that the view can call during long operations. It helps provide data for a user interface indicator showing progress, and may also be used to interrupt long renderings or traversals. Within the idler callback code, the application can check for a cancel button or command key combination that lets the user interrupt rendering. </P><P CLASS="T1.Text1"><A NAME="pgfId=4808"> </A>TQ3ViewIdleProgressMethod can be called only from a renderer plug-in module.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9778"> </A>TQ3Status Q3View_SetIdleProgressMethod(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewIdleProgressMethod idleMethod,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const void *idleData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9782"> </A>view</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5119"> </A>A view.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9792"> </A>idleMethod</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5120"> </A>An idle method (see below).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9801"> </A><TT CLASS="cv">idleData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5121"> </A>A pointer to an application-defined block of data.</DD></DL COMPACT><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9812"> </A>typedef TQ3Status (*TQ3ViewIdleProgressMethod)(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject&nbsp;&nbsp;&nbsp;&nbsp;view,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*idlerData,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;current,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;completed);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9814"> </A>view</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4726"> </A>A view.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9823"> </A><TT CLASS="cv">idlerData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4727"> </A>A pointer to an application-defined block of data. This pointer is passed to the idle method when it is executed.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9832"> </A>current</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4728"> </A>Numerator of progress fraction. Its value is always less than the value of completed.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9841"> </A>completed</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4729"> </A>Denominator of progress fraction. The value of <TT CLASS="cv"> current/completed</TT> gives the degree of completion.</DD></DL COMPACT><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4730"> </A>DESCRIPTION</H4><P CLASS="T1.Text1"><A NAME="pgfId=4731"> </A>TQ3ViewIdleProgressMethod registers a callback that also returns progress information. This information is supplied by the renderer, and may or may not be based on real time. If a renderer doesn't support the progress method, your method will be called with current and completed both set to 0. Otherwise, you are certain to get called at least twice:</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=5095"> </A>once	<TT CLASS="cv">idleMethod(view, 0, n)</TT>	Initialize, show dialog</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=5096"> </A>0 or more times	<TT CLASS="cv">idleMethod(view, 1..n-1, n)</TT>	Update progress</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=5097"> </A>once	<TT CLASS="cv">idleMethod(view, n, n)</TT>	Exit, hide dialog</LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=4732"> </A>There is no way to set timer intervals when you want to be called--it is up to the application's idler callback to check clock times to see how long ago the application was called. TQ3ViewIdleProgressMethod returns <TT CLASS="cv">kQ3Failure</TT> to cancel rendering, <TT CLASS="cv">kQ3Success</TT> to continue. It does not post errors.</P></DIV><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6320"> </A>SPECIAL CONSIDERATIONS</H4><P CLASS="T1.Text1"><A NAME="pgfId=6321"> </A>Because your callback function may be called at hardware interrupt level, be careful about using Macintosh Toolbox routines. To call the Toolbox, you may want to set a global variable that you can later poll at noninterrupt level.</P><P CLASS="W.Warning"><A NAME="pgfId=4736"> </A>It is not legal to call QD3D routines inside an idler callback. </P></DIV></DIV><DIV><H3 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4745"> </A>TQ3ViewEndFrameMethod</H3><P CLASS="T1.Text1"><A NAME="pgfId=4746"> </A>You can use the TQ3ViewEndFrameMethod function to determine when an asynchronous renderer has completed rendering a frame.</P><P CLASS="T1.Text1"><A NAME="pgfId=4807"> </A>TQ3ViewEndFrameMethod can be called only from a renderer plug-in module.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9855"> </A>TQ3Status Q3View_SetEndFrameMethod(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewEndFrameMethod endFrame,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void *endFrameData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9857"> </A>view</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5135"> </A>A view.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9866"> </A>endFrame</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5137"> </A>An end-of-frame method (see below).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9875"> </A>endFrameData</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5136"> </A>A pointer to an application-defined block of data.</DD></DL COMPACT><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9886"> </A>typedef void (*TQ3ViewEndFrameMethod)(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void *endFrameData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9888"> </A>view</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4748"> </A>A view.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9897"> </A>endFrameData</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4749"> </A>A pointer to an application-defined block of data.</DD></DL COMPACT><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4750"> </A>DESCRIPTION</H4><P CLASS="T1.Text1"><A NAME="pgfId=4751"> </A>TQ3ViewEndFrameMethod provides an alternative to <TT CLASS="cv">Q3View_Sync</TT> for determining when an asynchronous renderer has completed rendering a frame. With <TT CLASS="cv">Q3View_Sync</TT>, the application asks a renderer to finish rendering a frame and blocks until the frame is complete. With TQ3ViewEndFrameMethod, the renderer tells the application that it has completed a frame.</P><P CLASS="I.Important"><A NAME="pgfId=4752"> </A>If <TT CLASS="cv">Q3View_Sync</TT> is called before TQ3ViewEndFrameMethod has been called, TQ3ViewEndFrameMethod will never be called. If <TT CLASS="cv">Q3View_Sync</TT> is called after TQ3ViewEndFrameMethod has been called, <TT CLASS="cv">Q3View_Sync</TT> will return immediately because the frame has already been completed. </P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>