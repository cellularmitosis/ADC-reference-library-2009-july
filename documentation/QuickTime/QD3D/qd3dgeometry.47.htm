<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Ellipsoids</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=21825"> </A><A NAME="28340"> </A>Creating and Editing Ellipsoids</H1><P CLASS="T1.Text1"><A NAME="pgfId=21830"> </A><A NAME="marker=21826"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate ellipsoids. See <A HREF="qd3dgeometry.30.htm#12496" CLASS="XRef">&quot;Ellipsoids&quot;</A> for the definition of an ellipsoid.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21834"> </A>Q3Ellipsoid_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=21836"> </A><A NAME="marker=21835"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_New</TT> function to create a new ellipsoid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47787"> </A>TQ3GeometryObject Q3Ellipsoid_New (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3EllipsoidData *ellipsoidData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47789"> </A><TT CLASS="cv">ellipsoidData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21838"> </A> A pointer to a <TT CLASS="cv">TQ3EllipsoidData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21839"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21840"> </A>The <TT CLASS="cv">Q3Ellipsoid_New</TT> function returns, as its function result, a new ellipsoid having the shape and attributes specified by the <TT CLASS="cv">ellipsoidData</TT> parameter. If a new ellipsoid could not be created, <TT CLASS="cv">Q3Ellipsoid_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21841"> </A>Q3Ellipsoid_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=21843"> </A><A NAME="marker=21842"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_Submit</TT> function to submit an immediate ellipsoid for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47801"> </A>TQ3Status Q3Ellipsoid_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3EllipsoidData *ellipsoidData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47803"> </A><TT CLASS="cv">ellipsoidData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21845"> </A> A pointer to a <TT CLASS="cv">TQ3EllipsoidData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47813"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21846"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21847"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21848"> </A>The <TT CLASS="cv">Q3Ellipsoid_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate ellipsoid whose shape and attribute set are specified by the <TT CLASS="cv">ellipsoidData</TT> parameter. The ellipsoid is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21849"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=21850"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21851"> </A>Q3Ellipsoid_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=21853"> </A><A NAME="marker=21852"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_GetData</TT> function to get the data that defines an ellipsoid and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47824"> </A>TQ3Status Q3Ellipsoid_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipsoid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3EllipsoidData *ellipsoidData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47826"> </A><TT CLASS="cv">ellipsoid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21855"> </A>An ellipsoid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47835"> </A><TT CLASS="cv">ellipsoidData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21856"> </A> On exit, a pointer to a <TT CLASS="cv">TQ3EllipsoidData</TT> structure that contains information about the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21857"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21858"> </A>The <TT CLASS="cv">Q3Ellipsoid_GetData</TT> function returns, through the <TT CLASS="cv">ellipsoidData</TT> parameter, information about the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3EllipsoidData</TT> structure internally; you must call <TT CLASS="cv">Q3Ellipsoid_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21862"> </A>Q3Ellipsoid_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=21864"> </A><A NAME="marker=21863"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_SetData</TT> function to set the data that defines an ellipsoid and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47847"> </A>TQ3Status Q3Ellipsoid_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipsoid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3EllipsoidData *ellipsoidData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47849"> </A><TT CLASS="cv">ellipsoid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21866"> </A>An ellipsoid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47858"> </A><TT CLASS="cv">ellipsoidData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21867"> </A> A pointer to a <TT CLASS="cv">TQ3EllipsoidData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21868"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21869"> </A>The <TT CLASS="cv">Q3Ellipsoid_SetData</TT> function sets the data associated with the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter to the data specified by the <TT CLASS="cv">ellipsoidData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21870"> </A>Q3Ellipsoid_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=21872"> </A><A NAME="marker=21871"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3Ellipsoid_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47870"> </A>TQ3Status Q3Ellipsoid_EmptyData (TQ3EllipsoidData *ellipsoidData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47872"> </A><TT CLASS="cv">ellipsoidData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21874"> </A> A pointer to a <TT CLASS="cv">TQ3EllipsoidData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21875"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21876"> </A>The <TT CLASS="cv">Q3Ellipsoid_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3EllipsoidData</TT> structure pointed to by the <TT CLASS="cv">ellipsoidData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3Ellipsoid_GetData</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21877"> </A>Q3Ellipsoid_GetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=21879"> </A><A NAME="marker=21878"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_GetOrigin</TT> function to get the origin of an ellipsoid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47884"> </A>TQ3Status Q3Ellipsoid_GetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipsoid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47886"> </A><TT CLASS="cv">ellipsoid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21881"> </A>An ellipsoid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47895"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21882"> </A>On exit, the origin of the specified ellipsoid.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21883"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21884"> </A>The <TT CLASS="cv">Q3Ellipsoid_GetOrigin</TT> function returns, in the <TT CLASS="cv">origin</TT> parameter, the origin of the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21885"> </A>Q3Ellipsoid_SetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=21887"> </A><A NAME="marker=21886"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_SetOrigin</TT> function to set the origin of an ellipsoid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47906"> </A>TQ3Status Q3Ellipsoid_SetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipsoid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47908"> </A><TT CLASS="cv">ellipsoid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21889"> </A>An ellipsoid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47917"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21890"> </A>The desired origin of the specified ellipsoid.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21891"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21892"> </A>The <TT CLASS="cv">Q3Ellipsoid_SetOrigin</TT> function sets the origin of the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter to that specified in the <TT CLASS="cv">origin</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21893"> </A>Q3Ellipsoid_GetOrientation</H2><P CLASS="T1.Text1"><A NAME="pgfId=21895"> </A><A NAME="marker=21894"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_GetOrientation</TT> function to get the orientation of an ellipsoid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47928"> </A>TQ3Status Q3Ellipsoid_GetOrientation (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipsoid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *orientation);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47930"> </A><TT CLASS="cv">ellipsoid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21897"> </A>An ellipsoid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47939"> </A><TT CLASS="cv">orientation</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21898"> </A>On exit, the orientation of the specified ellipsoid.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21899"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21900"> </A>The <TT CLASS="cv">Q3Ellipsoid_GetOrientation</TT> function returns, in the <TT CLASS="cv">orientation</TT> parameter, the orientation of the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21901"> </A>Q3Ellipsoid_SetOrientation</H2><P CLASS="T1.Text1"><A NAME="pgfId=21903"> </A><A NAME="marker=21902"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_SetOrientation</TT> function to set the orientation of an ellipsoid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47950"> </A>TQ3Status Q3Ellipsoid_SetOrientation (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipsoid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *orientation);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47952"> </A><TT CLASS="cv">ellipsoid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21905"> </A>An ellipsoid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47961"> </A><TT CLASS="cv">orientation</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21906"> </A>The desired orientation of the specified ellipsoid.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21907"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21908"> </A>The <TT CLASS="cv">Q3Ellipsoid_SetOrientation</TT> function sets the orientation of the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter to that specified in the <TT CLASS="cv">orientation</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21909"> </A>Q3Ellipsoid_GetMajorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=21911"> </A><A NAME="marker=21910"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_GetMajorRadius</TT> function to get the major radius of an ellipsoid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47972"> </A>TQ3Status Q3Ellipsoid_GetMajorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipsoid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *majorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47974"> </A><TT CLASS="cv">ellipsoid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21913"> </A>An ellipsoid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47983"> </A><TT CLASS="cv">majorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21914"> </A>On exit, the major radius of the specified ellipsoid.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21915"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21916"> </A>The <TT CLASS="cv">Q3Ellipsoid_GetMajorRadius</TT> function returns, in the <TT CLASS="cv">majorRadius</TT> parameter, the major radius of the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21917"> </A>Q3Ellipsoid_SetMajorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=21919"> </A><A NAME="marker=21918"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_SetMajorRadius</TT> function to set the major radius of an ellipsoid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47994"> </A>TQ3Status Q3Ellipsoid_SetMajorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipsoid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *majorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47996"> </A><TT CLASS="cv">ellipsoid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21921"> </A>An ellipsoid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48005"> </A><TT CLASS="cv">majorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21922"> </A>The desired major radius of the specified ellipsoid.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21923"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21924"> </A>The <TT CLASS="cv">Q3Ellipsoid_SetMajorRadius</TT> function sets the major radius of the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter to that specified in the <TT CLASS="cv">majorRadius</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21925"> </A>Q3Ellipsoid_GetMinorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=21927"> </A><A NAME="marker=21926"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_GetMinorRadius</TT> function to get the minor radius of an ellipsoid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48016"> </A>TQ3Status Q3Ellipsoid_GetMinorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipsoid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *minorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48018"> </A><TT CLASS="cv">ellipsoid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21929"> </A>An ellipsoid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48027"> </A><TT CLASS="cv">minorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21930"> </A>On exit, the minor radius of the specified ellipsoid.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21931"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21932"> </A>The <TT CLASS="cv">Q3Ellipsoid_GetMinorRadius</TT> function returns, in the <TT CLASS="cv">minorRadius</TT> parameter, the minor radius of the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=21933"> </A>Q3Ellipsoid_SetMinorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=21935"> </A><A NAME="marker=21934"> </A>You can use the <TT CLASS="cv">Q3Ellipsoid_SetMinorRadius</TT> function to set the minor radius of an ellipsoid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48038"> </A>TQ3Status Q3Ellipsoid_SetMinorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject ellipsoid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *minorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48040"> </A><TT CLASS="cv">ellipsoid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21937"> </A>An ellipsoid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48049"> </A><TT CLASS="cv">minorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=21938"> </A>The desired minor radius of the specified ellipsoid.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=21939"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=21940"> </A>The <TT CLASS="cv">Q3Ellipsoid_SetMinorRadius</TT> function sets the minor radius of the ellipsoid specified by the <TT CLASS="cv">ellipsoid</TT> parameter to that specified in the <TT CLASS="cv">minorRadius</TT> parameter.<A NAME="marker=36570"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>