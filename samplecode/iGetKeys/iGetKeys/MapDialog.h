/*    File: MapDialog.h        Description:       MapDialog provides an easily accessable set of routines that allow your       application to resize dialog windows reposition their contents to similarily       located positions in the window after it has been resized.    Copyright:        © Copyright 2001 Apple Computer, Inc. All rights reserved.        Disclaimer:        IMPORTANT:  This Apple software is supplied to you by Apple Computer, Inc.        ("Apple") in consideration of your agreement to the following terms, and your        use, installation, modification or redistribution of this Apple software        constitutes acceptance of these terms.  If you do not agree with these terms,        please do not use, install, modify or redistribute this Apple software.        In consideration of your agreement to abide by the following terms, and subject        to these terms, Apple grants you a personal, non-exclusive license, under AppleÍs        copyrights in this original Apple software (the "Apple Software"), to use,        reproduce, modify and redistribute the Apple Software, with or without        modifications, in source and/or binary forms; provided that if you redistribute        the Apple Software in its entirety and without modifications, you must retain        this notice and the following text and disclaimers in all such redistributions of        the Apple Software.  Neither the name, trademarks, service marks or logos of        Apple Computer, Inc. may be used to endorse or promote products derived from the        Apple Software without specific prior written permission from Apple.  Except as        expressly stated in this notice, no other rights or licenses, express or implied,        are granted by Apple herein, including but not limited to any patent rights that        may be infringed by your derivative works or by other works in which the Apple        Software may be incorporated.        The Apple Software is provided by Apple on an "AS IS" basis.  APPLE MAKES NO        WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED        WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR        PURPOSE, REGARDING THE APPLE SOFTWARE OR ITS USE AND OPERATION ALONE OR IN        COMBINATION WITH YOUR PRODUCTS.        IN NO EVENT SHALL APPLE BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL OR        CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE        GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)        ARISING IN ANY WAY OUT OF THE USE, REPRODUCTION, MODIFICATION AND/OR DISTRIBUTION        OF THE APPLE SOFTWARE, HOWEVER CAUSED AND WHETHER UNDER THEORY OF CONTRACT, TORT        (INCLUDING NEGLIGENCE), STRICT LIABILITY OR OTHERWISE, EVEN IF APPLE HAS BEEN        ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    Change History (most recent first):        Mon, Jan 15, 2001 -- created*/#ifndef __MAPDIALOG__#define __MAPDIALOG__#ifdef __APPLE_CC__#include <Carbon/Carbon.h>#else#include <Carbon.h>#endif	/* the position of each item in the dialog is recorded inside of a	DialogMapItem record.  It is assumed that the dialog was created	using a control heirarchy, so every item has a control associated	with it.  The control handle is cached here, along with the item's	coordinates */typedef struct {	ControlHandle theItem; /* handle to the control */	Rect bounds; /* the control's bounds */	Rect ibounds; /* the dialog item's bounds */} DialogMapItem;	/* DialogMapRecord contains a list of DialogMapItem records	together with the original coordinates of the dialog window.  If the	dialog is ever resized, the items are remapped from the dialog's original	boundary into the new window boundary. */typedef struct {	Rect bounds; /* the dialog's window bounds */	long count; /* the number of items in the dialog */	DialogMapItem itemb[1]; /* a list of items */} DialogMapRecord, *DialogMapRecPtr;	/* NewDialogItemMap creates a new DialogMapRecord for all of the	items in the dialog.  This DialogMapRecord can later be passed to RemapDialog	to reposition the dialog items after the dialog window has been resized. */OSStatus NewDialogItemMap(DialogPtr theDialog, DialogMapRecPtr *theItems);	/* DeleteDialogItemMap disposes of a DialogMapRecord allocated by	NewDialogItemMap. */void DeleteDialogItemMap(DialogMapRecPtr theItems);	/* RemapDialog repositions all of the items in the dialog according	proportionately to the new dialog size. */OSStatus RemapDialog(DialogPtr theDialog, DialogMapRecPtr theItems);	/* GrowMappedDialog calls grow-window and tracks the mouse movement	and then calls RemapDialog to reposition all of the items if the size of the	window changes. */void GrowMappedDialog(Point globalWhere, DialogPtr theDialog, DialogMapRecPtr theItems);#ifdef __cplusplus}#endif#endif