<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Drawing Engines</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=44461"> </A>Drawing Engines</H1><P CLASS="T1.Text1"><A NAME="pgfId=44479"> </A><A NAME="marker=51423"> </A>A drawing engine is a plug-in software module that accepts drawing commands and produces a rasterized image. QuickDraw&nbsp;3D RAVE is designed to make it easy for you to add drawing engines to those already available. When you register a drawing engine, it thereby becomes available for use by any application or system software running on a Macintosh computer.</P><P CLASS="T1.Text1"><A NAME="pgfId=44483"> </A>QuickDraw&nbsp;3D RAVE expects that a drawing engine will have a certain minimum set of required features and possibly one or more optional features. Every drawing engine must provide these features:<A NAME="marker=51425"> </A></P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=44354"> </A>hidden surface removal (usually accomplished using z buffering with at least 16 bits per pixel)</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44355"> </A>point and line drawing, with application-specifiable point and line widths</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44359"> </A>drawing of Gouraud-shaded triangles</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44509"> </A>drawing of bitmaps having depths of 1, 16, or 32 bits per pixel</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44510"> </A>support for double buffering</LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=44511"> </A>In addition to the required features, a drawing engine may support one or more of these optional features:<A NAME="marker=51426"> </A></P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=44365"> </A>high-precision hidden surface removal (using z buffering with at least 24 bits per pixel)</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44377"> </A>perspective-corrected hidden surface removal</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44378"> </A>texture mapping</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=57792"> </A>triangle meshes (a memory and time optimization that allows rendered triangles to share vertices)<A NAME="marker=57992"> </A></LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44379"> </A>transparency blending, with or without an alpha channel</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44382"> </A>antialiasing</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44383"> </A>z-sorted rendering of non-opaque objects</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44384"> </A>support for OpenGL features (such as scissoring, multiple blending modes, area and line stipple patterns, and so forth)</LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=44401"> </A><A NAME="marker=51427"> </A>The interactive renderer supplied as part of QuickDraw&nbsp;3D uses a software-only drawing engine that can draw to any available device. In addition to the required features listed earlier, the drawing engine supplied with the interactive renderer supports these optional features:</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=44423"> </A>z buffering with 16 or 32 bits per pixel</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44434"> </A>direct rendering at 16 or 32 bits per pixel (rendering at fewer than 16 bits per pixel is also supported, but with lower performance)</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44437"> </A>perspective-corrected texture mapping</LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=44344"> </A>It's important to keep in mind that a drawing engine is a low-level 3D driver and hence does not support some features found in higher-level interfaces. The current programming interfaces to drawing engines do not support any of these features:</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=44452"> </A>transformations, shading, or clipping</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44453"> </A>I/O support (such as reading and writing 3D metafiles)</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44454"> </A>high-level primitives (such as curved surfaces)</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=44455"> </A>support for drawing to windows that straddle two or more devices</LI></UL><P CLASS="I.Important"><A NAME="pgfId=44514"> </A>Because of these limitations, most applications should not use QuickDraw&nbsp;3D RAVE directly. Instead, you should use the high-level programming interfaces provided by QuickDraw&nbsp;3D or other system software that provides 3D capabilities. </P><P CLASS="T1.Text1"><A NAME="pgfId=44537"> </A>QuickDraw&nbsp;3D RAVE does not require that a drawing engine be capable of drawing to all devices available on a particular computer. Rather, a particular drawing engine may support only a single output device. For example, a drawing engine that uses a frame buffer's built-in 3D acceleration hardware may be incapable of rendering to any other device. As a result, QuickDraw&nbsp;3D RAVE won't allow some other device to be associated with that drawing engine. This means that QuickDraw&nbsp;3D RAVE does not provide automatic support for drawing into windows that cross multiple devices. Instead, it is the application's responsibility to determine when a window does straddle devices and to construct multiple draw contexts (described next) for the output image.<A NAME="marker=51424"> </A></P><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>