<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Rendering in a View</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3291"> </A>Rendering in a View</H1><P CLASS="T1.Text1"><A NAME="pgfId=3297"> </A><A NAME="marker=3292"> </A><A NAME="marker=3293"> </A>QuickDraw&nbsp;3D provides routines that you can use to manage the process of rendering in a view. The view must already exist and be fully configured before you call these routines.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3298"> </A>Q3View_StartRendering</H2><P CLASS="T1.Text1"><A NAME="pgfId=3300"> </A><A NAME="marker=3299"> </A><A NAME="marker=782"> </A>You can use the <TT CLASS="cv">Q3View_StartRendering</TT> function to start rendering an image of a model.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8965"> </A>TQ3Status Q3View_StartRendering (TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8967"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3302"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3303"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3304"> </A>The <TT CLASS="cv">Q3View_StartRendering</TT> function begins the process of rendering an image of a model in the view specified by the <TT CLASS="cv">view</TT> parameter. After calling <TT CLASS="cv">Q3View_StartRendering</TT>, you specify the model to be drawn (for instance, by calling <TT CLASS="cv">Q3Geometry_Submit</TT>). When you have completely specified that model, you should call <TT CLASS="cv">Q3View_EndRendering</TT> to complete the rendering of the image. Because the renderer attached to the specified view might need to reprocess the model data, you should always call <TT CLASS="cv">Q3View_StartRendering</TT> and <TT CLASS="cv">Q3View_EndRendering</TT> in a rendering loop.</P><P CLASS="T1.Text1"><A NAME="pgfId=3305"> </A>Calling <TT CLASS="cv">Q3View_StartRendering</TT> automatically clears the buffer into which the rendered image is drawn.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3306"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3307"> </A>You should not call <TT CLASS="cv">Q3View_StartRendering</TT> while rendering is already occurring.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3308"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3309"> </A><TT CLASS="cv">kQ3ErrorRenderingIsActive</TT></P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3310"> </A>SEE ALSO</H3><P CLASS="T1.Text1"><A NAME="pgfId=3314"> </A>See <A HREF="qd3dviews.5.htm#41773" CLASS="XRef">&quot;Rendering an Image&quot;</A> for more information about a rendering loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3315"> </A>Q3View_EndRendering</H2><P CLASS="T1.Text1"><A NAME="pgfId=3317"> </A><A NAME="marker=3316"> </A><A NAME="marker=801"> </A>You can use the <TT CLASS="cv">Q3View_EndRendering</TT> function to stop rendering an image of a model.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8978"> </A>TQ3ViewStatus Q3View_EndRendering (TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8980"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3319"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3320"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3321"> </A>The <TT CLASS="cv">Q3View_EndRendering</TT> function returns, as its function result, a view status value that indicates the current state of the rendering of an image of a model in the view specified by the <TT CLASS="cv">view</TT> parameter. <TT CLASS="cv">Q3View_EndRendering</TT> returns one of these four values:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=8991"> </A>typedef enum TQ3ViewStatus {<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ViewStatusDone,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ViewStatusRetraverse,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ViewStatusError,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ViewStatusCancelled<BR>} TQ3ViewStatus;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3324"> </A>If <TT CLASS="cv">Q3View_EndRendering</TT> returns <TT CLASS="cv">kQ3ViewStatusDone</TT>, the rendering of the image has been completed and the specified view is no longer in rendering mode. At that point, it is safe to exit your rendering loop. If double-buffering is active, the front buffer is updated with the rendered image.</P><P CLASS="I.Important"><A NAME="pgfId=3325"> </A>If the renderer associated with the specified view relies on a hardware accelerator for some or all of its operation, <TT CLASS="cv">Q3View_EndRendering</TT> may return <TT CLASS="cv">kQ3ViewStatusDone</TT> even though the rendering has not yet completed. (When a hardware accelerator is present, rendering occurs asynchronously.) If you must know when the rendering has actually finished, call the <TT CLASS="cv">Q3View_Sync</TT> function. </P><P CLASS="T1.Text1"><A NAME="pgfId=3332"> </A>If <TT CLASS="cv">Q3View_EndRendering</TT> returns <TT CLASS="cv">kQ3ViewStatusRetraverse</TT>, the rendering of the image has not yet been completed. You should respecify the model by reentering your rendering loop.</P><P CLASS="T1.Text1"><A NAME="pgfId=3333"> </A>If <TT CLASS="cv">Q3View_EndRendering</TT> returns <TT CLASS="cv">kQ3ViewStatusError</TT>, the rendering of the image has failed because the renderer associated with the view encountered an error in processing the model. You should exit the rendering loop.</P><P CLASS="T1.Text1"><A NAME="pgfId=3334"> </A>If <TT CLASS="cv">Q3View_EndRendering</TT> returns <TT CLASS="cv">kQ3ViewStatusCancelled</TT>, the rendering of the image has been canceled. You should exit the rendering loop.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3335"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3336"> </A>You should call <TT CLASS="cv">Q3View_EndRendering</TT> only if rendering is already occurring.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3337"> </A>SEE ALSO</H3><P CLASS="T1.Text1"><A NAME="pgfId=3341"> </A>See <A HREF="qd3dviews.5.htm#41773" CLASS="XRef">&quot;Rendering an Image&quot;</A> for a sample rendering loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3342"> </A>Q3View_Cancel</H2><P CLASS="T1.Text1"><A NAME="pgfId=3344"> </A><A NAME="marker=3343"> </A><A NAME="marker=830"> </A>You can use the <TT CLASS="cv">Q3View_Cancel</TT> function to cancel the rendering, picking, bounding, or writing operation currently occurring in a view.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=8997"> </A>TQ3Status Q3View_Cancel (TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=8999"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3346"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3347"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3348"> </A>The <TT CLASS="cv">Q3View_Cancel</TT> function interrupts the process of rendering an image of a model, submitting objects for picking, calculating a bounding box or sphere, or writing data to a file in accordance with the view specified by the <TT CLASS="cv">view</TT> parameter. Any subsequent calls to <TT CLASS="cv">_Submit</TT> routines for the specified view will fail, and <TT CLASS="cv">Q3View_EndRendering</TT> (or the similar call for picking, bounding, or writing) will return <TT CLASS="cv">kQ3ViewStatusCancelled</TT> when it is next executed. Note that you must still call <TT CLASS="cv">Q3View_EndRendering</TT> (or the similar call for picking, bounding, or writing) after you have called <TT CLASS="cv">Q3View_Cancel</TT>.</P><P CLASS="T1.Text1"><A NAME="pgfId=3349"> </A>You can call <TT CLASS="cv">Q3View_Cancel</TT> at any time. If the specified view is not in the submitting state, <TT CLASS="cv">Q3View_Cancel</TT> returns <TT CLASS="cv">kQ3Failure</TT>.<A NAME="marker=3350"> </A><A NAME="marker=3351"> </A></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4556"> </A><A NAME="34818"> </A>Q3View_Flush</H2><P CLASS="T1.Text1"><A NAME="pgfId=4557"> </A>You can use the Q3View_Flush function to flush buffered graphics to a rasterizer.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9010"> </A>TQ3Status Q3View_Flush (TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9012"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4633"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4562"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4563"> </A>The Q3View_Flush function is a non-blocking call that flushes all buffered graphics to a rasterizer (if one is implemented). It may or may not update the draw context, depending on the type of renderer. The Q3View_Flush function may be called only between calls to <TT CLASS="cv">Q3View_StartRendering</TT> and <TT CLASS="cv">Q3View_EndRendering</TT>. </P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4569"> </A><A NAME="23205"> </A>Q3View_Sync</H2><P CLASS="T1.Text1"><A NAME="pgfId=4570"> </A>You can use the Q3View_Sync function to flush buffered graphics to a rasterizer and also update the draw context.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9023"> </A>TQ3Status Q3View_Sync (TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9025"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4635"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4575"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4576"> </A>The Q3View_Sync function is a blocking call that flushes all buffered graphics to a rasterizer and updates the draw context. Calling this function guarantees that the image is updated on return. You may call it only after calling <TT CLASS="cv">Q3View_EndRendering</TT>.</P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>