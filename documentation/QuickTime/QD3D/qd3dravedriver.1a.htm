<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Tags for State Variables</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=34643"> </A><A NAME="24990"> </A>Tags for State Variables</H1><P CLASS="T1.Text1"><A NAME="pgfId=34644"> </A><A NAME="marker=51483"> </A>A drawing engine maintains a large number of state variables that determine how the engine draws into a device. Each state variable has a state value, which is either an unsigned long integer, a floating-point value, or a pointer. You can read and write state values by calling QuickDraw&nbsp;3D RAVE functions. (For instance, you can set a state value by calling <TT CLASS="cv">QASetInt</TT>, <TT CLASS="cv">QASetFloat</TT>, or <TT CLASS="cv">QASetPtr</TT>.) You specify which state variable to get or set using a state tag, a unique identifier associated with that variable.</P><P CLASS="Note"><A NAME="pgfId=38678"> </A>All tag values greater than 0 and less than <TT CLASS="cv">kQATag_EngineSpecific_Minimum</TT> are reserved for use by QuickDraw&nbsp;3D RAVE. If you need to define engine-specific tags, you should assign them tag values greater than or equal to <TT CLASS="cv">kQATag_EngineSpecific_Minimum</TT>. </P><P CLASS="T1.Text1"><A NAME="pgfId=34684"> </A>Here are the tags for state variables having unsigned long integer values:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=64299"> </A>typedef enum TQATagInt {<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_ZFunction&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0,&nbsp;&nbsp;&nbsp;&nbsp;/*required variables*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_Antialias&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 8,&nbsp;&nbsp;&nbsp;&nbsp;/*optional variables*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_Blend&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 9,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_PerspectiveZ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 10,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_TextureFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 11,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_TextureOp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 12,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_CSGTag&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 14,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_CSGEquation&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 15,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_BufferComposite&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 16,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_DrawBuffer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 100,&nbsp;&nbsp;/*OpenGL variables*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_TextureWrapU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 101,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_TextureWrapV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 102,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_TextureMagFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 103,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_TextureMinFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 104,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_ScissorXMin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 105,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_ScissorYMin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 106,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_ScissorXMax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 107,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_ScissorYMax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 108,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_BlendSrc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 109,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_BlendDst&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 110,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_LinePattern&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 111,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_AreaPattern0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 117,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_AreaPattern31&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 148,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_EngineSpecific_Minimum&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 1000<BR>} TQATagInt;<BR></CODE><DIV><H2 CLASS="UH.UserHd"><A NAME="pgfId=34705"> </A>Constant descriptions</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64301"> </A><TT CLASS="cv">kQATag_ZFunction</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=37123"> </A>The z sorting function of the drawing engine. This function determines which surfaces are to be removed during hidden surface removal. See <A HREF="qd3dravedriver.1b.htm#22399" CLASS="XRef">&quot;Z Sorting Function Selectors&quot;</A> for a description of the available z sorting functions. The default value for a drawing engine that is z buffered is <TT CLASS="cv">kQAZFunction_LT</TT>; the default value for a draw context that is not z buffered is <TT CLASS="cv">kQAZFunction_None</TT>. The z sorting function state variable must be supported by all drawing engines.<A NAME="marker=52066"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64311"> </A><TT CLASS="cv">kQATag_Antialias</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=37127"> </A>The antialiasing mode of the drawing engine. This mode determines how, if at all, antialiasing is applied to the draw context. See <A HREF="qd3dravedriver.1c.htm#26450" CLASS="XRef">&quot;Antialiasing Selectors&quot;</A> for a description of the available antialiasing modes. The default value for a drawing engine that supports antialiasing is <TT CLASS="cv">kQAAntiAlias_Fast</TT>. The antialiasing mode state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_Antialias</TT> feature.<A NAME="marker=52067"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64321"> </A><TT CLASS="cv">kQATag_Blend</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=37131"> </A>The transparency blending function of the drawing engine. See <A HREF="qd3dravedriver.1d.htm#22734" CLASS="XRef">&quot;Blending Operations&quot;</A> for a description of the available transparency blending functions. The default value for a drawing engine that supports blending is <TT CLASS="cv">kQABlend_Premultiply</TT>. The transparency blending function state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_Blend</TT> feature.<A NAME="marker=52068"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64331"> </A><TT CLASS="cv">kQATag_PerspectiveZ</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34779"> </A> The z perspective control of the drawing engine. This control determines how a drawing engine performs hidden surface removal. See <A HREF="qd3dravedriver.1e.htm#38773" CLASS="XRef">&quot;Z Perspective Selectors&quot;</A> for a description of the available z perspective controls. The default value for a drawing engine that supports z perspective is <TT CLASS="cv">kQAPerspectiveZ_Off</TT>. The z perspective control state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_PerspectiveZ</TT> feature.<A NAME="marker=52069"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64342"> </A><TT CLASS="cv">kQATag_TextureFilter</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34781"> </A> The texture mapping filter mode of the drawing engine. This mode determines how a drawing engine performs texture mapping. See <A HREF="qd3dravedriver.1f.htm#11456" CLASS="XRef">&quot;Texture Filter Selectors&quot;</A> for a description of the available texture mapping filter modes. The default value for a drawing engine that supports texture mapping is <TT CLASS="cv">kQATextureFilter_Fast</TT>. The texture mapping filter state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_Texture</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64353"> </A><TT CLASS="cv">kQATag_TextureOp</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=37956"> </A>The texture mapping operation of the drawing engine. This mode determines the current texture mapping operation of a drawing engine. See <A HREF="qd3dravedriver.20.htm#29338" CLASS="XRef">&quot;Texture Operations&quot;</A> for a description of the available texture mapping operations. The default value for a drawing engine that supports texture mapping is <TT CLASS="cv">kQATextureOp_None</TT>. The texture mapping operation variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_Texture</TT> feature.<A NAME="marker=52065"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64363"> </A><TT CLASS="cv">kQATag_CSGTag</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34783"> </A><A NAME="marker=58027"> </A>The CSG ID of triangles subsequently submitted to the drawing engine. See <A HREF="qd3dravedriver.21.htm#31052" CLASS="XRef">&quot;CSG IDs&quot;</A> for a description of the available CSG IDs. The default value for a drawing engine that supports CSG operations is <TT CLASS="cv">kQACSGTag_None</TT>. The CSG ID variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_CSG</TT> feature.<A NAME="marker=52064"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64373"> </A><TT CLASS="cv">kQATag_CSGEquation</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=60629"> </A><A NAME="marker=60628"> </A>The CSG equation for the drawing engine, which determines the manner in which triangles with CSG IDs are combined into solid objects. See the book <I CLASS="italics">3D Graphics Programming With QuickDraw&nbsp;3D</I> for an explanation of how to specify a CSG equation. The CSG equation variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_CSG</TT> feature.<A NAME="marker=60633"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64383"> </A><TT CLASS="cv">kQATag_BufferComposite</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=60734"> </A> <A NAME="marker=60735"> </A>The buffer compositing mode of the drawing engine. This mode determines how a drawing engine composites generated pixels with the initial contents of the drawing buffer. See <A HREF="qd3dravedriver.22.htm#10798" CLASS="XRef">&quot;Buffer Compositing Modes&quot;</A> for a description of the available buffer compositing modes. The default value for a drawing engine that supports buffer compositing is <TT CLASS="cv">kQABufferComposite_None</TT>. The buffer compositing state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_BufferComposite</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64394"> </A><TT CLASS="cv">kQATagGL_DrawBuffer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=60740"> </A> The OpenGL color buffer of the drawing engine. This determines where a drawing engine draws when writing colors to a frame buffer. See <A HREF="qd3dravedriver.26.htm#32566" CLASS="XRef">&quot;Buffer Drawing Operations&quot;</A> for a description of the buffer drawing modes. The default value of this variable for a drawing engine that supports OpenGL buffering is <TT CLASS="cv">kQAGL_DrawBuffer_Front</TT> for single-buffered contexts and <TT CLASS="cv">kQAGL_DrawBuffer_Back</TT> for double-buffered contexts. The OpenGL color buffer state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64405"> </A><TT CLASS="cv">kQATagGL_TextureWrapU</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34790"> </A> The OpenGL texture <I CLASS="italics">u</I> wrapping mode of the drawing engine. See <A HREF="qd3dravedriver.23.htm#35669" CLASS="XRef">&quot;Texture Wrapping Values&quot;</A> for a description of the wrapping modes. The default value of this variable for a drawing engine that supports OpenGL texture wrapping is <TT CLASS="cv">kQAGL_Repeat</TT>. The OpenGL texture <I CLASS="italics">u</I> wrapping mode state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64416"> </A><TT CLASS="cv">kQATagGL_TextureWrapV</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34791"> </A> The OpenGL texture <I CLASS="italics">v</I> wrapping mode of the drawing engine. See <A HREF="qd3dravedriver.23.htm#35669" CLASS="XRef">&quot;Texture Wrapping Values&quot;</A> for a description of the wrapping modes. The default value of this variable for a drawing engine that supports OpenGL texture wrapping is <TT CLASS="cv">kQAGL_Repeat</TT>. The OpenGL texture <I CLASS="italics">v</I> wrapping mode state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64427"> </A><TT CLASS="cv">kQATagGL_TextureMagFilter</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34804"> </A> <A NAME="marker=52062"> </A>The OpenGL <B CLASS="bold">texture magnification function</B> of the drawing engine. This function is called when a pixel being textured maps to an area that is less than or equal to one texture element. The default value of this variable for a drawing engine that supports OpenGL texture magnification is <TT CLASS="cv">kQAGL_Linear</TT>. The OpenGL texture magnification function state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64438"> </A><TT CLASS="cv">kQATagGL_TextureMinFilter</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34803"> </A> <A NAME="marker=52061"> </A>The OpenGL <B CLASS="bold">texture minifying function</B> of the drawing engine. This function is called when a pixel being textured maps to an area that is greater than one texture element. See <B CLASS="bold">[to be supplied]</B> for a description of the available minifying functions. The default value of this variable for a drawing engine that supports OpenGL texture minifying is <TT CLASS="cv">kQAGL_ToBeSupplied</TT>. The OpenGL texture minifying function state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64449"> </A><TT CLASS="cv">kQATagGL_ScissorXMin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34802"> </A> The minimum <I CLASS="italics">x</I> value of the <B CLASS="bold">scissor box,</B> a rectangle that determines which pixels can be modified by drawing commands. This state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.<A NAME="marker=52060"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64460"> </A><TT CLASS="cv">kQATagGL_ScissorYMin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34801"> </A> The minimum <I CLASS="italics">y</I> value of the scissor box. This state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64471"> </A><TT CLASS="cv">kQATagGL_ScissorXMax</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34800"> </A> The maximum <I CLASS="italics">x</I> value of the scissor box. This state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64482"> </A><TT CLASS="cv">kQATagGL_ScissorYMax</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34799"> </A> The maximum <I CLASS="italics">y</I> value of the scissor box. This state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64493"> </A><TT CLASS="cv">kQATagGL_BlendSrc</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34798"> </A>The source blending operation of the drawing engine. This control determines how a drawing engine computes the</DD><DD CLASS="DD.DefinitionDefCont"><A NAME="pgfId=61573"> </A>red, green, blue, and alpha source-blending factors when performing transparency blending. The source blending operation state variable is optional; it must be supported only when a drawing engine supports both the <TT CLASS="cv">kQAOptional_Blend</TT> and <TT CLASS="cv">kQAOptional_OpenGL</TT> features.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64505"> </A><TT CLASS="cv">kQATagGL_BlendDst</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34797"> </A>The destination blending operation of the drawing engine. This control determines how a drawing engine computes the red, green, blue, and alpha destination-blending factors when performing transparency blending. The destination blending operation state variable is optional; it must be supported only when a drawing engine supports both the <TT CLASS="cv">kQAOptional_Blend</TT> and <TT CLASS="cv">kQAOptional_OpenGL</TT> features.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64515"> </A><TT CLASS="cv">kQATagGL_LinePattern</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34796"> </A> The OpenGL <B CLASS="bold">line stipple pattern</B> of the drawing engine. This pattern specifies which bits in a line are to be drawn and which are masked out.<B CLASS="bold"></B><A NAME="marker=52057"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64526"> </A><TT CLASS="cv">kQATagGL_AreaPattern0</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34795"> </A> The first of 32 registers that specify an <B CLASS="bold">area stipple pattern.</B><A NAME="marker=52058"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64537"> </A><TT CLASS="cv">kQATagGL_AreaPattern31</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34794"> </A> The last of 32 area stipple pattern registers.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64548"> </A><TT CLASS="cv">kQATag_EngineSpecific_Minimum</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34793"> </A> The minimum tag value to be used for variables that are specific to a particular drawing engine. Any custom variables you support must have tag values greater than or equal to this value. Note that you should use engine-specific tags only in exceptional circumstances, because the operations determined by the associated state variables are not generally accessible.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=34711"> </A>Here are the tags for state variables having floating-point values:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=64561"> </A>typedef enum TQATagFloat {<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_ColorBG_a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 1,&nbsp;&nbsp;&nbsp;&nbsp;/*required variables*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_ColorBG_r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 2,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_ColorBG_g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 3,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_ColorBG_b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 4,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_Width&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 5,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_ZMinOffset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 6,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_ZMinScale&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 7,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_DepthBG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 112,&nbsp;&nbsp;/*OpenGL variables*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_TextureBorder_a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 113,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_TextureBorder_r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 114,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_TextureBorder_g&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 115,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATagGL_TextureBorder_b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 116<BR>} TQATagFloat;<BR></CODE></DIV><DIV><H2 CLASS="UH.UserHd"><A NAME="pgfId=35155"> </A>Constant descriptions</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64563"> </A><TT CLASS="cv">kQATag_ColorBG_a</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35165"> </A><TT CLASS="cv"></TT><A NAME="marker=52187"> </A><A NAME="marker=52228"> </A>The alpha channel value of a drawing engine's background color. This value must be greater than or equal to 0.0 and less than or equal to 1.0. The default value for the background color alpha channel is 0.0. The background color alpha channel state variable must be supported by all drawing engines.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64573"> </A><TT CLASS="cv">kQATag_ColorBG_r</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35182"> </A>The red component of a drawing engine's background color. This value must be greater than or equal to 0.0 and less than or equal to 1.0. The default value for the background color red component is 0.0. The background color red component state variable must be supported by all drawing engines.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64583"> </A><TT CLASS="cv">kQATag_ColorBG_g</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35181"> </A>The green component of a drawing engine's background color. This value must be greater than or equal to 0.0 and less than or equal to 1.0. The default value for the background color green component is 0.0. The background color green component state variable must be supported by all drawing engines.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64593"> </A><TT CLASS="cv">kQATag_ColorBG_b</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35180"> </A>The blue component of a drawing engine's background color. This value must be greater than or equal to 0.0 and less than or equal to 1.0. The default value for the background color blue component is 0.0. The background color blue component state variable must be supported by all drawing engines.<A NAME="marker=52229"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64603"> </A><TT CLASS="cv">kQATag_Width</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35183"> </A>The width (in pixels) of points or lines drawn by the drawing engine. This value must be greater than or equal to 0.0 and less than or equal to <TT CLASS="cv">kQAMaxWidth</TT> (currently defined as 128.0). The default value for the width is 1.0. The width state variable must be supported by all drawing engines.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64613"> </A><TT CLASS="cv">kQATag_ZMinOffset</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=39802"> </A>The minimum <I CLASS="italics">z</I> offset that must be performed to guarantee that a drawn object passes the <TT CLASS="cv">kQAZFunction_LT</TT> hidden surface test. This variable is read-only; you cannot set its value. In general, a drawing engine that employs fixed-point values for the <I CLASS="italics">z</I> coordinate returns a small negative value (for example, -1/65536) for the minimum offset; a drawing engine that employs floating-point values for the <I CLASS="italics">z</I> coordinate returns 0.0 for the minimum offset.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64623"> </A><TT CLASS="cv">kQATag_ZMinScale</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=39803"> </A>The minimum <I CLASS="italics">z</I> scale factor that must be applied to guarantee that a drawn object passes the <TT CLASS="cv">kQAZFunction_LT</TT> hidden surface test. This variable is read-only; you cannot set its value. In general, a drawing engine that employs fixed-point values for the <I CLASS="italics">z</I> coordinate returns 1.0 for the minimum scale factor; a drawing engine that employs floating-point values for the <I CLASS="italics">z</I> coordinate returns a value slightly less than 1.0 (for example, 0.9999) for the minimum scale factor.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64633"> </A><TT CLASS="cv">kQATagGL_DepthBG</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35176"> </A>The OpenGL background z of the drawing engine. The default value of this variable for a drawing engine that supports OpenGL texture magnification is <TT CLASS="cv">kQAGL_Linear</TT>. The OpenGL background z state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64643"> </A><TT CLASS="cv">kQATagGL_TextureBorder_a</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35175"> </A> <A NAME="marker=52231"> </A>The alpha component of a drawing engine's texture border color. This value must be greater than or equal to 0.0 and less than or equal to 1.0. The default value for the texture border color alpha component is 0.0. The texture border color alpha component state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64654"> </A><TT CLASS="cv">kQATagGL_TextureBorder_r</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35174"> </A> The red component of a drawing engine's texture border color. This value must be greater than or equal to 0.0 and less than or equal to 1.0. The default value for the texture border color red component is 0.0. The texture border color red component state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64665"> </A><TT CLASS="cv">kQATagGL_TextureBorder_g</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35173"> </A> The green component of a drawing engine's texture border color. This value must be greater than or equal to 0.0 and less than or equal to 1.0. The default value for the texture border color green component is 0.0. The texture border color green component state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64676"> </A><TT CLASS="cv">kQATagGL_TextureBorder_b</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35172"> </A> The blue component of a drawing engine's texture border color. This value must be greater than or equal to 0.0 and less than or equal to 1.0. The default value for the texture border color blue component is 0.0. The texture border color blue component state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_OpenGL</TT> feature.<A NAME="marker=52232"> </A></DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=34695"> </A>Here are the tags for state variables having pointer values:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=64689"> </A>typedef enum TQATagPtr {<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQATag_Texture&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 13<BR>} TQATagPtr;<BR></CODE></DIV><DIV><H2 CLASS="UH.UserHd"><A NAME="pgfId=34718"> </A>Constant descriptions</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64691"> </A><TT CLASS="cv">kQATag_Texture</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34719"> </A>A pointer to the current texture map of the drawing engine, as created by the <TT CLASS="cv">QATextureNew</TT> function. The default value for the texture map pointer is <TT CLASS="cv">NULL</TT>. The texture map pointer state variable is optional; it must be supported only when a drawing engine supports the <TT CLASS="cv">kQAOptional_Texture</TT> feature.<A NAME="marker=51484"> </A></DD></DL COMPACT></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>