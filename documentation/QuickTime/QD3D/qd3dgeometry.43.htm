<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Polyhedra</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=29434"> </A>Creating and Editing Polyhedra</H1><P CLASS="T1.Text1"><A NAME="pgfId=29723"> </A><A NAME="marker=29719"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate polyhedra. See <A HREF="qd3dgeometry.2c.htm#22139" CLASS="XRef">&quot;Polyhedra&quot;</A> for the definition of a polyhedron.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=29731"> </A>Q3Polyhedron_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=30350"> </A>You can use the <TT CLASS="cv">Q3Polyhedron_New</TT> function to create a new polyhedron.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46686"> </A>TQ3GeometryObject Q3Polyhedron_New (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3PolyhedronData *polyhedronData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46688"> </A><TT CLASS="cv">polyhedronData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30554"> </A> A pointer to a <TT CLASS="cv">TQ3PolyhedronData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=29754"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30408"> </A>The <TT CLASS="cv">Q3Polyhedron_New</TT> function returns, as its function result, a new polyhedron having the shape and attributes specified by the <TT CLASS="cv">polyhedronData</TT> parameter. If a new polyhedron could not be created, <TT CLASS="cv">Q3Polyhedron_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=29769"> </A>Q3Polyhedron_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=30354"> </A>You can use the <TT CLASS="cv">Q3Polyhedron_Submit</TT> function to submit an immediate polyhedron for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46700"> </A>TQ3Status Q3Polyhedron_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3PolyhedronData *polyhedronData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46702"> </A><TT CLASS="cv">polyhedronData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30570"> </A> A pointer to a <TT CLASS="cv">TQ3PolyhedronData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46712"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=29786"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=29797"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30406"> </A>The <TT CLASS="cv">Q3Polyhedron_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate polyhedron whose shape and attribute set are specified by the <TT CLASS="cv">polyhedronData</TT> parameter. The polyhedron is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=30584"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=30585"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=29809"> </A>Q3Polyhedron_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=30356"> </A>You can use the <TT CLASS="cv">Q3Polyhedron_GetData</TT> function to get the data that defines a polyhedron and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46723"> </A>TQ3Status Q3Polyhedron_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyhedron, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3PolyhedronData *polyhedronData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46725"> </A><TT CLASS="cv">polyhedron</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30330"> </A>A polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46734"> </A><TT CLASS="cv">polyhedronData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30574"> </A> On exit, a pointer to a <TT CLASS="cv">TQ3PolyhedronData</TT> structure that contains information about the polyhedron specified by the <TT CLASS="cv">polyhedron</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=29841"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30404"> </A>The <TT CLASS="cv">Q3Polyhedron_GetData</TT> function returns, through the <TT CLASS="cv">polyhedronData</TT> parameter, information about the polyhedron specified by the <TT CLASS="cv">polyhedron</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3PolyhedronData</TT> structure internally; you must call <TT CLASS="cv">Q3Polyhedron_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=29853"> </A>Q3Polyhedron_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=30358"> </A>You can use the <TT CLASS="cv">Q3Polyhedron_SetData</TT> function to set the data that defines a polyhedron and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46746"> </A>TQ3Status Q3Polyhedron_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyhedron,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3PolyhedronData *polyhedronData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46748"> </A><TT CLASS="cv">polyhedron</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30332"> </A>A polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46757"> </A><TT CLASS="cv">polyhedronData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30572"> </A> A pointer to a <TT CLASS="cv">TQ3PolyhedronData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=29881"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30402"> </A>The <TT CLASS="cv">Q3Polyhedron_SetData</TT> function sets the data associated with the polyhedron specified by the <TT CLASS="cv">polyhedron</TT> parameter to the data specified by the <TT CLASS="cv">polyhedronData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=29893"> </A>Q3Polyhedron_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=30360"> </A>You can use the <TT CLASS="cv">Q3Polyhedron_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3Polyhedron_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46769"> </A>TQ3Status Q3Polyhedron_EmptyData (TQ3PolyhedronData *polyhedronData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46771"> </A><TT CLASS="cv">polyhedronData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30642"> </A> A pointer to a <TT CLASS="cv">TQ3PolyhedronData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=29916"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30400"> </A>The <TT CLASS="cv">Q3Polyhedron_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3PolyhedronData</TT> structure pointed to by the <TT CLASS="cv">polyhedronData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3Polyhedron_GetData</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=34907"> </A>Q3Polyhedron_GetVertexPosition</H2><P CLASS="T1.Text1"><A NAME="pgfId=34908"> </A>You can use the Q3Polyhedron_GetVertexPosition function to get the position of a vertex of a polyhedron.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46783"> </A>TQ3Status Q3Polyhedron_GetVertexPosition (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject    polyhedron,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long        index,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D           *point);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46785"> </A><TT CLASS="cv">polyhedron</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35062"> </A>A polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46794"> </A>index</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34911"> </A>An index into an array of three-dimensional points.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46803"> </A>point</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34912"> </A>A pointer to the array of points in the polyhedron.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=34913"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=34914"> </A>The Q3Polyhedron_GetVertexPosition function returns, in the <TT CLASS="cv">point</TT> parameter, the position of the vertex having the index specified by the <TT CLASS="cv">index</TT> parameter in the <TT CLASS="cv">vertices</TT> array of the polyhedron specified by the polyhedron parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=34926"> </A>Q3Polyhedron_SetVertexPosition</H2><P CLASS="T1.Text1"><A NAME="pgfId=35174"> </A>You can use the Q3Polyhedron_SetVertexPosition function to set the position of a vertex of a polyhedron.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46814"> </A>TQ3Status Q3Polyhedron_SetVertexPosition (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject    polyhedron,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long        index,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D     *point);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46816"> </A><TT CLASS="cv">polyhedron</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35091"> </A>A polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46825"> </A>index</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35092"> </A>An index into an array of three-dimensional points.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46834"> </A>point</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35093"> </A>A pointer to the array of points in the polyhedron.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=34932"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=34933"> </A>The Q3Polyhedron_SetVertexPosition function sets the position of the vertex having the index specified by the <TT CLASS="cv">index</TT> parameter in the <TT CLASS="cv">vertices</TT> array of the polyhedron specified by the polyhedron parameter to that specified in the <TT CLASS="cv">point</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=34937"> </A>Q3Polyhedron_GetVertexAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=34938"> </A>You can use the Q3Polyhedron_GetVertexAttributeSet function to get the attribute set of a vertex of a polyhedron.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46845"> </A>TQ3Status Q3Polyhedron_GetVertexAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject    polyhedron,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long        index,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet      *attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46847"> </A><TT CLASS="cv">polyhedron</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35095"> </A>A polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46856"> </A>index</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35096"> </A>An index into an array of three-dimensional points.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46865"> </A>attributeSet</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=34942"> </A>On exit, a pointer to a vertex attribute set.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=34943"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=34944"> </A>The Q3Polyhedron_GetVertexAttributeSet function returns, in the <TT CLASS="cv">attributeSet</TT> parameter, the set of attributes for the vertex having the index specified by the <TT CLASS="cv">index</TT> parameter in the <TT CLASS="cv">vertices</TT> array of the polyhedron specified by the polyhedron parameter. The reference count of the set is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=34952"> </A>Q3Polyhedron_SetVertexAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=35228"> </A>You can use the Q3Polyhedron_SetVertexAttributeSet function to set the attribute set of a vertex of a polyhedron.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46876"> </A>TQ3Status Q3Polyhedron_SetVertexAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject    polyhedron,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long        index,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet      attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46878"> </A><TT CLASS="cv">polyhedron</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35120"> </A>A polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46891"> </A>index</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35121"> </A>An index into an array of three-dimensional points.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46900"> </A>attributeSet</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35122"> </A>On exit, a pointer to a vertex attribute set.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=34958"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=34959"> </A>The Q3Polyhedron_SetVertexAttributeSet function sets the attribute set of the vertex having the index specified by the <TT CLASS="cv">index</TT> parameter in the <TT CLASS="cv">vertices</TT> array of the polyhedron specified by the polyhedron parameter to the set specified in the <TT CLASS="cv">attributeSet</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=30127"> </A>Q3Polyhedron_GetTriangleData</H2><P CLASS="T1.Text1"><A NAME="pgfId=30372"> </A>You can use the <TT CLASS="cv">Q3Polyhedron_GetTriangleData</TT> function to get the data for a face in a polyhedron.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46911"> </A>TQ3Status Q3Polyhedron_GetTriangleData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyhedron, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long triangleIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3PolyhedronTriangleData *triangleData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46913"> </A><TT CLASS="cv">polyhedron</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30320"> </A>A polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46922"> </A><TT CLASS="cv">triangleIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30774"> </A>A triangle index. The value in this parameter should be greater than or equal to 0 and less than the total number of triangles (that is, faces) in the specified polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46931"> </A><TT CLASS="cv">triangleData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30149"> </A>On entry, a pointer to a polyhedron triangle data structure. On exit, the data in that structure is set to the specified triangle in the specified polyhedron.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=30160"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30390"> </A>The <TT CLASS="cv">Q3Polyhedron_GetTriangleData</TT> function returns, in the <TT CLASS="cv">triangleData</TT> parameter, the data for the triangle specified by the <TT CLASS="cv">triangleIndex</TT> parameter in the polyhedron specified by the <TT CLASS="cv">polyhedron</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=30172"> </A>Q3Polyhedron_SetTriangleData</H2><P CLASS="T1.Text1"><A NAME="pgfId=30374"> </A>You can use the <TT CLASS="cv">Q3Polyhedron_SetTriangleData</TT> function to set the data for a face in a polyhedron.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46942"> </A>TQ3Status Q3Polyhedron_SetTriangleData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyhedron, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long triangleIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3PolyhedronTriangleData *triangleData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46944"> </A><TT CLASS="cv">polyhedron</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30318"> </A>A polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46953"> </A><TT CLASS="cv">triangleIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30833"> </A>A triangle index. The value in this parameter should be greater than or equal to 0 and less than the total number of triangles (that is, faces) in the specified polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46962"> </A><TT CLASS="cv">triangleData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30838"> </A>A pointer to a polyhedron triangle data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=30835"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30388"> </A>The <TT CLASS="cv">Q3Polyhedron_SetTriangleData</TT> function sets the data for the triangle specified by the <TT CLASS="cv">triangleIndex</TT> parameter in the polyhedron specified by the <TT CLASS="cv">polyhedron</TT> parameter to the data specified by the <TT CLASS="cv">triangleData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=30217"> </A>Q3Polyhedron_GetEdgeData</H2><P CLASS="T1.Text1"><A NAME="pgfId=30376"> </A>You can use the <TT CLASS="cv">Q3Polyhedron_GetEdgeData</TT> function to get the data that describe an edge in a polyhedron.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46973"> </A>TQ3Status Q3Polyhedron_GetEdgeData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyhedron, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long edgeIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3PolyhedronEdgeData *edgeData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46975"> </A><TT CLASS="cv">polyhedron</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30312"> </A>A polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46984"> </A><TT CLASS="cv">edgeIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30234"> </A>An edge index. The value in this parameter should be greater than or equal to 0 and less than the total number of edges in the specified polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46993"> </A><TT CLASS="cv">edgeData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30239"> </A>On entry, a pointer to a polyhedron edge data structure. On exit, the data in that structure is set to the specified edge in the specified polyhedron.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=30254"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30386"> </A>The <TT CLASS="cv">Q3Polyhedron_GetEdgeData</TT> function returns, in the <TT CLASS="cv">edgeData</TT> parameter, the data for the edge specified by the <TT CLASS="cv">edgeIndex</TT> parameter in the polyhedron specified by the <TT CLASS="cv">polyhedron</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=30266"> </A>Q3Polyhedron_SetEdgeData</H2><P CLASS="T1.Text1"><A NAME="pgfId=30378"> </A>You can use the <TT CLASS="cv">Q3Polyhedron_SetEdgeData</TT> function to set the data that describe an edge in a polyhedron.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=47004"> </A>TQ3Status Q3Polyhedron_SetEdgeData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyhedron, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long edgeIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3PolyhedronEdgeData *edgeData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47006"> </A><TT CLASS="cv">polyhedron</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30493"> </A>A polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47015"> </A><TT CLASS="cv">edgeIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30893"> </A>An edge index. The value in this parameter should be greater than or equal to 0 and less than the total number of edges in the specified polyhedron.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=47024"> </A><TT CLASS="cv">edgeData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=30288"> </A>A pointer to a polyhedron edge data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=30299"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=30302"> </A>The <TT CLASS="cv">Q3Polyhedron_SetEdgeData</TT> function sets the data for the edge specified by the <TT CLASS="cv">edgeIndex</TT> parameter in the polyhedron specified by the <TT CLASS="cv">polyhedron</TT> parameter to the data specified by the <TT CLASS="cv">edgeData</TT> parameter.<A NAME="marker=29516"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>