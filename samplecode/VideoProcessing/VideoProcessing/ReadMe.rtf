{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fmodern\fcharset77 Courier;
\f3\fswiss\fcharset77 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12260\viewh14400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs48 \cf0 VideoProcessing ReadMe\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f1\b0\fs24 \cf0 This is a demonstration program for processing video (both live and stored) using various methods within QuickTime.  More specifically, this sample demonstrates the following techniques:\
\
	- color clamped movie playback\
	- alpha overlay movie playback\
	- alpha overlay movie conversion\
	- motion detect sequence grab\
	- alpha overlay sequence grab\
	- color clamped sequence grab\
	- film-noise effect sequence grab\
	- blended sequence grab\
\
Portions of this code are based on other QuickTime examples, including:\
\
	 - BasicRAEL\
	 - MiniMung\
	 - ConvertToMovieJr\
	 - HackTV\
	 - MovieGWorlds\
\
Sequence Grabbing code is based on the MiniMung/HackTV samples. Movie Playback is based on the MovieGWorlds sample. Movie conversion code is base on the ConvertToMovieJr example. Finally, Carbon event handling code is based on the BasicRAEL example.\
\
This sample makes use of a custom decompressor component which is built-in to the application (rather than a standalone component). \CocoaLigature0 With this custom decompressor component we associate a data structure whose contents are used during our decompression operations. Our data structure includes an offscreen gworld for decompressing frames. Also included is color clamp information which is passed to our decompressor component for performing color clamp operations on our data, and an overlay offscreen which is used to overlay an image on top of our data.
\f2 \

\f1 \CocoaLigature1 \

\f0\b\fs26 Running the Application
\f1\b0\fs24 \
\
Here's instructions for running the application and executing the various demos:\
\
Simply launch the application and navigate to the "Demo" menu. Select any of the following items from this menu:\
\

\f3\i\fs26 Color-clamped movie playback
\f1\i0\fs24 \
\
- Demonstrates simple movie playback with color clamping of the movie frames. Select any movie at the open-file dialog prompt, and the movie will play in the left-portion of the window with color-clamp information shown to the right of the movie in the window. Press a key 1-6 to select an "endpoint". Endpoints 1,2 let you adjust the red component for the video. Endpoints 3,4 let you adjust the green component for the video. Endpoints 5,6 let you adjust the blue component for the video. The selected endpoint is shown by the pink-color bar. Once an endpoint is selected, you can click the mouse anywhere along the color spectrum for that endpoint and the new endpoint will be set to where the mouse is clicked.\
\
Press 'r' or 'R' to reset the endpoints to their defaults.\
\
Press 'S' or 'Q' to stop the currently running demo.\
\

\f3\i\fs26 Alpha-overlay movie playback
\f1\i0\fs24 \
\
- Demonstrates movie playback with an overlay image. Select any movie at the open-file dialog prompt, and the movie will play with the lobster image overlayed on top.\
\
Press 'S' or 'Q' to stop the currently running demo. \
\

\f3\i\fs26 Alpha-overlay movie conversion
\f1\i0\fs24 \
\
- Demonstrates re-compression of a movie and all its tracks, plus it adds an overlay image on top of each frame. Select any movie for conversion at the open-file dialog prompt, and subsequent dialogs will let you set compression settings. Each frame of the movie is displayed in the window as it is converted. Finally, a file-save dialog is presented to allow you to specify where to save the newly converted file. \
\

\f3\i\fs26 Motion-detect sequence grab
\f1\i0\fs24 \
\
- Demonstrates how to detect (red) colors in the captured video frames. At the prompt, configure the video channel. Next, present any red-colored image to the camera and it will identify it as such by examining the color data for each video frame.\
\

\f3\i\fs26 Alpha-overlay sequence grab
\f1\i0\fs24 \
\
- Demonstrates how to overlay an image (a image of a lobster) over live video. At the prompt, configure the video channel. Next, you will see the lobster image overlayed on top of your live video.\
\

\f3\i\fs26 Color-clamped sequence grab
\f1\i0\fs24 \
\
- Demonstrates how to color-clamp frames of live video. At the prompt, configure the video channel. Next, you'll see the live video in the left-portion of the window, with the color-clamp information shown to the right. Instructions for adjusting the color are the same as for "Color-clamped movie playback" above.\
\

\f3\i\fs26 Film-noise effect sequence grab
\f1\i0\fs24 \
\
- Demonstrates how to apply a QuickTime effect to live video. At the prompt, configure the video channel. Next, you'll see the live video with the QuickTime film-noise effect applied to each frame.\
\
Press 'S' or 'Q' to stop the currently running demo. \
\

\f3\i\fs26 **Blended sequence grab
\f1\i0\fs24 \
\
**Note: requires *two* IIDC cameras\
\
- Demonstrates how to capture live video from two different cameras, then "blend" the data from these two sources using a QuickTime effect. At the first prompt, the standard QuickTime effects dialog is presented to allow you to select any of the QuickTime effects. At the next prompt, configure the first video channel. At the next prompt, configure the second video channel. Once this is done, shown in the upper left corner of the window is the live video from the first source. Shown to the right is the video from the second source. Below these are the results of "blending" the two sources with the selected QuickTime effect. Drag the slider to cause the effect to be executed.\
\
Press 'S' or 'Q' to stop the currently running demo. \

\fs20 \

\fs24 \
\
This sample requires Mac OS X version 10.2 or higher, Project Builder version 2.0.1 or higher, and MetroWerks CodeWarrior 8.0 or better.\
\
Version History:\
\
1.0 - initial version}