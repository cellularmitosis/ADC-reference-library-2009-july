<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Accessing Memory Storage Objects</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3290"> </A>Creating and Accessing Memory Storage Objects</H1><P CLASS="T1.Text1"><A NAME="pgfId=3295"> </A><A NAME="marker=3291"> </A>QuickDraw&nbsp;3D provides routines for creating and managing memory storage objects.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3296"> </A>Q3MemoryStorage_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=3297"> </A><A NAME="marker=688"> </A>You can use the <TT CLASS="cv">Q3MemoryStorage_New</TT> function to create a new memory storage object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5450"> </A>TQ3StorageObject Q3MemoryStorage_New (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const unsigned char *buffer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long validSize);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5452"> </A><TT CLASS="cv">buffer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3302"> </A>A pointer to a buffer in memory, or <TT CLASS="cv">NULL</TT>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5461"> </A><TT CLASS="cv">validSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=1606"> </A>The size, in bytes, of the valid metafile data contained in the specified buffer. If <TT CLASS="cv">buffer</TT> is set to <TT CLASS="cv">NULL</TT>, this parameter specifies the initial size and also the grow size of the buffer that QuickDraw&nbsp;3D allocates internally.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3304"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3305"> </A>The <TT CLASS="cv">Q3MemoryStorage_New</TT> function returns, as its function result, a new memory storage object associated with the data in the buffer specified by the <TT CLASS="cv">buffer</TT> and <TT CLASS="cv">validSize</TT> parameters. The data in the specified buffer is copied into internal QuickDraw&nbsp;3D memory, so you can dispose of the buffer if <TT CLASS="cv">Q3MemoryStorage_New</TT> returns successfully.</P><P CLASS="T1.Text1"><A NAME="pgfId=1630"> </A>If you pass the value <TT CLASS="cv">NULL</TT> in the <TT CLASS="cv">buffer</TT> parameter, QuickDraw&nbsp;3D allocates a buffer of <TT CLASS="cv">validSize</TT> bytes, increases the buffer by that size whenever necessary, and later disposes of the buffer when the associated storage object is closed or disposed of. If <TT CLASS="cv">buffer</TT> is set to <TT CLASS="cv">NULL</TT> and <TT CLASS="cv">validSize</TT> is set to 0, QuickDraw&nbsp;3D uses a default initial buffer and grow size.</P><P CLASS="T1.Text1"><A NAME="pgfId=1614"> </A>If <TT CLASS="cv">Q3MemoryStorage_New</TT> cannot create a new storage object, it returns the value <TT CLASS="cv">NULL</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3312"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3313"> </A><TT CLASS="cv">kQ3ErrorOutOfMemory</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3314"> </A>Q3MemoryStorage_NewBuffer</H2><P CLASS="T1.Text1"><A NAME="pgfId=3315"> </A><A NAME="marker=708"> </A>You can use the <TT CLASS="cv">Q3MemoryStorage_NewBuffer</TT> function to create a new memory storage object. The data you provide is not copied into QuickDraw&nbsp;3D memory.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5472"> </A>TQ3StorageObject Q3MemoryStorage_NewBuffer (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char *buffer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long validSize, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long bufferSize);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5474"> </A><TT CLASS="cv">buffer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3320"> </A>A pointer to a buffer in memory, or <TT CLASS="cv">NULL</TT>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5483"> </A><TT CLASS="cv">validSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=1541"> </A>The size, in bytes, of the valid metafile data contained in the specified buffer. If <TT CLASS="cv">buffer</TT> is set to <TT CLASS="cv">NULL</TT>, this parameter specifies the initial size and also the grow size of the buffer that QuickDraw&nbsp;3D allocates internally.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5492"> </A><TT CLASS="cv">bufferSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3322"> </A>The size, in bytes, of the specified buffer.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3323"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3324"> </A>The <TT CLASS="cv">Q3MemoryStorage_NewBuffer</TT> function returns, as its function result, a new memory storage object associated with the buffer specified by the <TT CLASS="cv">buffer</TT> and <TT CLASS="cv">validSize</TT> parameters. The data in the specified buffer is not copied into internal QuickDraw&nbsp;3D memory, so your application must not access that buffer until the associated storage object is closed or disposed of.</P><P CLASS="T1.Text1"><A NAME="pgfId=1596"> </A>If you pass the value <TT CLASS="cv">NULL</TT> in the <TT CLASS="cv">buffer</TT> parameter, QuickDraw&nbsp;3D allocates a buffer of <TT CLASS="cv">validSize</TT> bytes, increases the buffer by that size whenever necessary, and later disposes of the buffer when the associated storage object is closed or disposed of. If <TT CLASS="cv">buffer</TT> is set to <TT CLASS="cv">NULL</TT> and <TT CLASS="cv">validSize</TT> is set to 0, QuickDraw&nbsp;3D uses a default initial buffer and grow size.</P><P CLASS="T1.Text1"><A NAME="pgfId=1549"> </A>The <TT CLASS="cv">bufferSize</TT> parameter specifies the size of the specified buffer. The <TT CLASS="cv">validSize</TT> parameter specifies the size of the valid metafile data contained in the buffer. The value of the <TT CLASS="cv">validSize</TT> parameter should always be less than or equal to the value of the <TT CLASS="cv">bufferSize</TT> parameter. This allows you to maintain other data in the buffer following the valid metafile data.</P><P CLASS="T1.Text1"><A NAME="pgfId=1548"> </A>If <TT CLASS="cv">Q3MemoryStorage_NewBuffer</TT> cannot create a new storage object, it returns the value <TT CLASS="cv">NULL</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3331"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3332"> </A><TT CLASS="cv">kQ3ErrorOutOfMemory</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3333"> </A>Q3MemoryStorage_Set</H2><P CLASS="T1.Text1"><A NAME="pgfId=3334"> </A><A NAME="marker=729"> </A>You can use the <TT CLASS="cv">Q3MemoryStorage_Set</TT> function to set the data of a memory storage object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5503"> </A>TQ3Status Q3MemoryStorage_Set (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3StorageObject storage, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const unsigned char *buffer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long validSize);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5505"> </A><TT CLASS="cv">storage</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3339"> </A>A memory storage object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5514"> </A><TT CLASS="cv">buffer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3340"> </A>A pointer to a contiguous block of memory to be associated with the specified storage object, or <TT CLASS="cv">NULL</TT>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5523"> </A><TT CLASS="cv">validSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=1639"> </A>The size, in bytes, of the valid metafile data contained in the specified buffer. If <TT CLASS="cv">buffer</TT> is set to <TT CLASS="cv">NULL</TT>, this parameter specifies the initial size and also the grow size of the buffer that QuickDraw&nbsp;3D allocates internally.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3342"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3343"> </A>The <TT CLASS="cv">Q3MemoryStorage_Set</TT> function sets the data for the memory storage object specified by the <TT CLASS="cv">storage</TT> parameter to the values specified in the <TT CLASS="cv">buffer</TT> and <TT CLASS="cv">validSize</TT> parameters. The data in the specified buffer is copied into internal QuickDraw&nbsp;3D memory, so you can dispose of the buffer if <TT CLASS="cv">Q3MemoryStorage_Set</TT> returns successfully.</P><P CLASS="T1.Text1"><A NAME="pgfId=1655"> </A>If you pass the value <TT CLASS="cv">NULL</TT> in the <TT CLASS="cv">buffer</TT> parameter, QuickDraw&nbsp;3D allocates a buffer of <TT CLASS="cv">validSize</TT> bytes, increases the buffer by that size whenever necessary, and later disposes of the buffer when the associated storage object is closed or disposed of. If <TT CLASS="cv">buffer</TT> is set to <TT CLASS="cv">NULL</TT> and <TT CLASS="cv">validSize</TT> is set to 0, and if the <TT CLASS="cv">buffer</TT> parameter was set to <TT CLASS="cv">NULL</TT> when the storage object was created, QuickDraw&nbsp;3D uses a default initial buffer and grow size.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3353"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3354"> </A>You must not use <TT CLASS="cv">Q3MemoryStorage_Set</TT> with an open memory storage object.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3355"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3356"> </A><TT CLASS="cv">kQ3ErrorAccessRestricted kQ3ErrorInvalidObjectParameter</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3357"> </A>Q3MemoryStorage_GetBuffer</H2><P CLASS="T1.Text1"><A NAME="pgfId=3358"> </A><A NAME="marker=755"> </A>You can use the <TT CLASS="cv">Q3MemoryStorage_GetBuffer</TT> function to get the data of a memory storage object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5537"> </A>TQ3Status Q3MemoryStorage_GetBuffer (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3StorageObject storage, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char **buffer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long *validSize, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long *bufferSize);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5539"> </A><TT CLASS="cv">storage</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3360"> </A>A memory storage object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5548"> </A><TT CLASS="cv">buffer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3361"> </A>On entry, a pointer to a pointer. On exit, a pointer to a pointer to the block of memory associated with the specified storage object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5557"> </A><TT CLASS="cv">validSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=1664"> </A>On exit, the size, in bytes, of the valid metafile data contained in the specified buffer.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5566"> </A><TT CLASS="cv">bufferSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3363"> </A>On exit, the size, in bytes, of the block of memory whose address is returned through the <TT CLASS="cv">buffer</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3364"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3365"> </A>The <TT CLASS="cv">Q3MemoryStorage_GetBuffer</TT> function returns, in the <TT CLASS="cv">buffer</TT> and <TT CLASS="cv">bufferSize</TT> parameters, the address and size of the block of memory currently associated with the memory storage object specified by the <TT CLASS="cv">storage</TT> parameter. Note that the returned address is the address of the storage object's data, not of a <I CLASS="italics">copy</I> of that data. As a result, the returned pointer may become a dangling pointer if the buffer holding the storage object's data is dynamically reallocated (perhaps because additional data was written to the object).</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3366"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3367"> </A><TT CLASS="cv">kQ3ErrorAccessRestricted kQ3ErrorInvalidObjectParameter</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3368"> </A>Q3MemoryStorage_SetBuffer</H2><P CLASS="T1.Text1"><A NAME="pgfId=3369"> </A><A NAME="marker=768"> </A>You can use the <TT CLASS="cv">Q3MemoryStorage_SetBuffer</TT> function to set the data of a memory storage object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5580"> </A>TQ3Status Q3MemoryStorage_SetBuffer (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3StorageObject storage, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char *buffer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long validSize, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long bufferSize);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5582"> </A><TT CLASS="cv">storage</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3371"> </A>A memory storage object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5591"> </A><TT CLASS="cv">buffer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3372"> </A>A pointer to a block of memory to be associated with the specified storage object, or <TT CLASS="cv">NULL</TT>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5600"> </A><TT CLASS="cv">validSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=1875"> </A>The size, in bytes, of the valid metafile data contained in the specified buffer. If the value of <TT CLASS="cv">buffer</TT> is <TT CLASS="cv">NULL</TT>, this parameter specifies the initial size and also the grow size of the buffer that QuickDraw&nbsp;3D allocates internally.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5609"> </A><TT CLASS="cv">bufferSize</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3374"> </A>The size, in bytes, of the specified buffer.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3375"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3376"> </A>The <TT CLASS="cv">Q3MemoryStorage_SetBuffer</TT> function sets the buffer location, size, and valid size of the memory storage object specified by the <TT CLASS="cv">storage</TT> parameter to the values specified in the <TT CLASS="cv">buffer</TT>, <TT CLASS="cv">bufferSize</TT>, and <TT CLASS="cv">validSize</TT> parameters.</P><P CLASS="T1.Text1"><A NAME="pgfId=1686"> </A>If you pass the value <TT CLASS="cv">NULL</TT> in the <TT CLASS="cv">buffer</TT> parameter, QuickDraw&nbsp;3D allocates a buffer of <TT CLASS="cv">validSize</TT> bytes, increases the buffer by that size whenever necessary, and later disposes of the buffer when the associated storage object is closed or disposed of. If <TT CLASS="cv">buffer</TT> is set to <TT CLASS="cv">NULL</TT> and <TT CLASS="cv">validSize</TT> is set to 0, QuickDraw&nbsp;3D uses a default initial buffer and grow size.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3383"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3384"> </A>You must not use <TT CLASS="cv">Q3MemoryStorage_SetBuffer</TT> with an open memory storage object.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3385"> </A>Q3MemoryStorage_GetType</H2><P CLASS="T1.Text1"><A NAME="pgfId=3386"> </A><A NAME="marker=787"> </A>You can use the <TT CLASS="cv">Q3MemoryStorage_GetType</TT> function to get the type of a memory storage object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5620"> </A>TQ3ObjectType Q3MemoryStorage_GetType (TQ3StorageObject storage);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5622"> </A><TT CLASS="cv">storage</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3388"> </A>A memory storage object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3389"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3390"> </A>The <TT CLASS="cv">Q3MemoryStorage_GetType</TT> function returns, as its function result, the type of the memory storage object specified by the <TT CLASS="cv">storage</TT> parameter. The types of memory storage objects currently supported by QuickDraw&nbsp;3D are defined by this constant:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=5633"> </A>kQ3MemoryStorageTypeHandle<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3395"> </A>If the specified memory storage object is invalid or is not of this type, <TT CLASS="cv">Q3MemoryStorage_GetType</TT> returns the value <TT CLASS="cv">kQ3ObjectTypeInvalid</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3396"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3397"> </A><TT CLASS="cv">kQ3ErrorNoSubclass kQ3ErrorInvalidObjectParameter kQ3ErrorNULLParameter</TT><A NAME="marker=3398"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>