<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Getting and Setting Storage Object Information</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=3220"> </A>Getting and Setting Storage Object Information</H1><P CLASS="T1.Text1"><A NAME="pgfId=3225"> </A><A NAME="marker=3221"> </A>QuickDraw&nbsp;3D provides routines that you can use to get or set some of the information it maintains about storage objects. For example, you can get the file reference number of the Macintosh file associated with a Macintosh storage object by calling the function <TT CLASS="cv">Q3MacintoshStorage_Get</TT>. Similarly, you can determine the starting address and size of a buffer associated with a memory storage object by calling <TT CLASS="cv">Q3MemoryStorage_GetBuffer</TT>.</P><P CLASS="T1.Text1"><A NAME="pgfId=3226"> </A>In general, the routines that get and set storage object information operate like the get and set routines for other types of QuickDraw&nbsp;3D objects, but with several important differences:</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=3230"> </A>For memory storage objects created by a call to <TT CLASS="cv">Q3MemoryStorage_NewBuffer</TT>, the returned address is the address of the actual buffer associated with the storage object, <I CLASS="italics">not</I> the address of a copy of that buffer. In addition, that buffer may change locations in memory (but only if QuickDraw&nbsp;3D allocated the buffer on your behalf and writing data to the storage object causes QuickDraw&nbsp;3D to resize the buffer).</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=1380"> </A>You cannot access subclass data using the get and set methods of a class. For example, you cannot use <TT CLASS="cv">Q3MemoryStorage_Get</TT> or <TT CLASS="cv">Q3MemoryStorage_Set</TT> with a handle storage object (of type <TT CLASS="cv">kQ3MemoryStorageTypeHandle</TT>). Similarly, you cannot use <TT CLASS="cv">Q3UnixStorage_Get</TT> or <TT CLASS="cv">Q3UnixStorage_Set</TT> with a UNIX path name storage object (of type <TT CLASS="cv">kQ3UnixStorageTypePath</TT>).</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=1381"> </A>You cannot use the get or set methods with a storage object that is open. A&nbsp;storage object is considered <B CLASS="bold">open </B>whenever its associated storage is in use--for example, when an application is reading data from a file object attached to the storage object. (To be more specific, a storage object is open if it has been attached to a file object by a call to the <TT CLASS="cv">Q3File_SetStorage</TT> function and that file object has been opened by a call to the <TT CLASS="cv">Q3File_OpenRead</TT> or <TT CLASS="cv">Q3File_OpenWrite</TT> function.) A storage object is considered <B CLASS="bold">closed</B> at all other times. (Note that a storage object can be closed even though the associated file on disk is open to the operating system.)<A NAME="marker=1382"> </A></LI></UL><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>