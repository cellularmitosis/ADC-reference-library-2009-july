<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Converting Dimensions of Points and Vectors</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3217"> </A>Converting Dimensions of Points and Vectors</H1><P CLASS="T1.Text1"><A NAME="pgfId=3222"> </A><A NAME="marker=3218"> </A>QuickDraw&nbsp;3D provides routines that you can use to convert a point or vector of a given dimension to another dimension. When the given dimension is less than the result dimension, the last component is set to 1.0. When the given dimension is greater than the result dimension, each component in the result structure is set to its corresponding component in the given structure divided by the last component.</P><P CLASS="I.Important"><A NAME="pgfId=3223"> </A>You must already have allocated space for the result structure before attempting to convert the dimension of a point or vector. </P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3227"> </A>Q3Point2D_To3D</H2><P CLASS="T1.Text1"><A NAME="pgfId=3228"> </A><A NAME="marker=791"> </A>You can use the <TT CLASS="cv">Q3Point2D_To3D</TT> function to convert a two-dimensional point to a three-dimensional point.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=7742"> </A>TQ3Point3D *Q3Point2D_To3D (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point2D *point2D, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D *result);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7744"> </A><TT CLASS="cv">point2D</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3230"> </A>A two-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7753"> </A><TT CLASS="cv">result</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3231"> </A>On exit, a three-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3232"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3233"> </A>The <TT CLASS="cv">Q3Point2D_To3D</TT> function returns, as its function result and in the <TT CLASS="cv">result</TT> parameter, the three-dimensional point that corresponds to the two-dimensional point <TT CLASS="cv">point2D</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3234"> </A>Q3Point3D_To4D</H2><P CLASS="T1.Text1"><A NAME="pgfId=3235"> </A><A NAME="marker=800"> </A>You can use the <TT CLASS="cv">Q3Point3D_To4D</TT> function to convert a three-dimensional point to a four-dimensional point.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=7764"> </A>TQ3RationalPoint4D *Q3Point3D_To4D (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *point3D, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3RationalPoint4D *result);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7766"> </A><TT CLASS="cv">point3D</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3237"> </A>A three-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7775"> </A><TT CLASS="cv">result</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3238"> </A>On exit, a rational four-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3239"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3240"> </A>The <TT CLASS="cv">Q3Point3D_To4D</TT> function returns, as its function result and in the <TT CLASS="cv">result</TT> parameter, the rational four-dimensional point that corresponds to the three-dimensional point <TT CLASS="cv">point3D</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3241"> </A>Q3RationalPoint3D_To2D</H2><P CLASS="T1.Text1"><A NAME="pgfId=3242"> </A><A NAME="marker=809"> </A>You can use the <TT CLASS="cv">Q3RationalPoint3D_To2D</TT> function to convert a three-dimensional rational point to a two-dimensional point.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=7786"> </A>TQ3Point2D *Q3RationalPoint3D_To2D (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint3D *point3D, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point2D *result);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7788"> </A><TT CLASS="cv">point3D</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3244"> </A>A rational three-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7797"> </A><TT CLASS="cv">result</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3245"> </A>On exit, a two-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3246"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3247"> </A>The <TT CLASS="cv">Q3RationalPoint3D_To2D</TT> function returns, as its function result and in the <TT CLASS="cv">result</TT> parameter, the two-dimensional point that corresponds to the rational three-dimensional point <TT CLASS="cv">point3D</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3248"> </A>Q3RationalPoint4D_To3D</H2><P CLASS="T1.Text1"><A NAME="pgfId=3249"> </A><A NAME="marker=818"> </A>You can use the <TT CLASS="cv">Q3RationalPoint4D_To3D</TT> function to convert a four-dimensional rational point to a three-dimensional point.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=7808"> </A>TQ3Point3D *Q3RationalPoint4D_To3D (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RationalPoint4D *point4D, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D *result);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7810"> </A><TT CLASS="cv">point4D</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3251"> </A>A rational four-dimensional point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7819"> </A><TT CLASS="cv">result</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3252"> </A>On exit, a three-dimensional point.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3253"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3254"> </A>The <TT CLASS="cv">Q3RationalPoint4D_To3D</TT> function returns, as its function result and in the <TT CLASS="cv">result</TT> parameter, the three-dimensional point that corresponds to the rational four-dimensional point <TT CLASS="cv">point4D</TT>.<A NAME="marker=3255"> </A></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3256"> </A>Q3Vector2D_To3D</H2><P CLASS="T1.Text1"><A NAME="pgfId=3258"> </A><A NAME="marker=3257"> </A><A NAME="marker=829"> </A>You can use the <TT CLASS="cv">Q3Vector2D_To3D</TT> function to convert a two-dimensional vector to a three-dimensional vector.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=7830"> </A>TQ3Vector3D *Q3Vector2D_To3D (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector2D *vector2D, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *result);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7832"> </A><TT CLASS="cv">vector2D</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3260"> </A>A two-dimensional vector.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7841"> </A><TT CLASS="cv">result</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3261"> </A>On exit, a three-dimensional vector.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3262"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3263"> </A>The <TT CLASS="cv">Q3Vector2D_To3D</TT> function returns, as its function result and in the <TT CLASS="cv">result</TT> parameter, the three-dimensional vector that corresponds to the two-dimensional vector <TT CLASS="cv">vector2D</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3264"> </A>Q3Vector3D_To2D</H2><P CLASS="T1.Text1"><A NAME="pgfId=3265"> </A><A NAME="marker=838"> </A>You can use the <TT CLASS="cv">Q3Vector3D_To2D</TT> function to convert a three-dimensional vector to a two-dimensional vector.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=7852"> </A>TQ3Vector2D *Q3Vector3D_To2D (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *vector3D, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector2D *result);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7854"> </A><TT CLASS="cv">vector3D</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3267"> </A>A three-dimensional vector.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=7863"> </A><TT CLASS="cv">result</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3268"> </A>On exit, a two-dimensional vector.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3269"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3270"> </A>The <TT CLASS="cv">Q3Vector3D_To2D</TT> function returns, as its function result and in the <TT CLASS="cv">result</TT> parameter, the two-dimensional vector that corresponds to the three-dimensional vector <TT CLASS="cv">vector3D</TT>.<A NAME="marker=3271"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>