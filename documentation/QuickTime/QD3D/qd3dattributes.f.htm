<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Registering Custom Attributes</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=1214"> </A>Registering Custom Attributes</H1><P CLASS="T1.Text1"><A NAME="pgfId=3459"> </A><A NAME="marker=3458"> </A>You can add a custom attribute type by calling the <TT CLASS="cv">Q3AttributeClass_Register</TT> function. If necessary, you can delete an application-defined attribute type by calling the Q3XObjectHierarchy_UnregisterClass function.</P><P CLASS="Note"><A NAME="pgfId=3462"> </A>For complete details on adding custom attribute types, see <A HREF="qd3dattributes.8.htm#18290" CLASS="XRef">&quot;Defining Custom Attribute Types&quot;</A>. </P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3467"> </A>Q3AttributeClass_Register</H2><P CLASS="T1.Text1"><A NAME="pgfId=3468"> </A><A NAME="marker=821"> </A>You can use the <TT CLASS="cv">Q3AttributeClass_Register</TT> function to register an application-defined attribute type.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6499"> </A>TQ3ObjectClass Q3AttributeClass_Register (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeType attributeType, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const char *creatorName, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long sizeOfElement, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MetaHandler metaHandler);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6501"> </A><TT CLASS="cv">attributeType</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3470"> </A> The type of your custom attribute.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6511"> </A><TT CLASS="cv">creatorName</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3471"> </A>A pointer to a null-terminated string containing the name of the attribute's creator and the name of the type of attribute being registered.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6520"> </A><TT CLASS="cv">sizeOfElement</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3472"> </A> The size of the data associated with the specified custom attribute type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6530"> </A><TT CLASS="cv">metaHandler</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3473"> </A>A pointer to an application-defined metahandler that QuickDraw&nbsp;3D calls to handle the new custom attribute type.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3477"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3478"> </A>The <TT CLASS="cv">Q3AttributeClass_Register</TT> function returns, as its function result, an object class reference for a new custom attribute type having a type specified by the <TT CLASS="cv">attributeType</TT> parameter and a name specified by the <TT CLASS="cv">creatorName</TT> parameter. The <TT CLASS="cv">metaHandler</TT> parameter is a pointer to the metahandler for your custom attribute type. See the chapter <A HREF="qd3dobjects.htm#16698" CLASS="XRef">&quot;QuickDraw&nbsp;3D Objects&quot;</A> for information on writing a metahandler. If <TT CLASS="cv">Q3AttributeClass_Register</TT> cannot create a new attribute type, it returns the value <TT CLASS="cv">NULL</TT>.</P><P CLASS="T1.Text1"><A NAME="pgfId=3482"> </A>The <TT CLASS="cv">creatorName</TT> parameter should be a pointer to null-terminated C string that contains your (or your company's) name and the name of the type of attribute you are defining. Use the colon character (:) to delimit fields within this string. The string should not contain any spaces or punctuation other than the colon character, and it cannot end with a colon. Here are some examples of valid creator names:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=6541"> </A>&quot;MyCompany:SurfDraw:Wavelength&quot;<BR>&quot;MyCompany:SurfWorks:VRModule:WaterTemperature&quot;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3484"> </A>The <TT CLASS="cv">sizeOfElement</TT> parameter specifies the fixed size of the data associated with your custom attribute type. You can associate dynamically sized data with your attribute type by putting a pointer to a dynamically sized block of data into the attribute set and having your handler's copy method duplicate the data. (In this case, you would set the <TT CLASS="cv">sizeOfElement</TT> parameter to <TT CLASS="cv">sizeof(Ptr)</TT>.) Your handler's dispose method must also deallocate any dynamically sized blocks.<A NAME="marker=3611"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>