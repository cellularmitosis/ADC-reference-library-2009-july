<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Accessing File Objects</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3277"> </A>Accessing File Objects</H1><P CLASS="T1.Text1"><A NAME="pgfId=3281"> </A>QuickDraw&nbsp;3D provides routines that you can use to open file objects, access information about them, and read and write their data.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3282"> </A>Q3File_OpenRead</H2><P CLASS="T1.Text1"><A NAME="pgfId=3284"> </A><A NAME="marker=3283"> </A><A NAME="marker=968"> </A>You can use the <TT CLASS="cv">Q3File_OpenRead</TT> function to open a file object for reading.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=11944"> </A>TQ3Status Q3File_OpenRead (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3FileObject file, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3FileMode *mode);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=11946"> </A><TT CLASS="cv">file</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3314"> </A>A file object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=11955"> </A><TT CLASS="cv">mode</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3287"> </A>On exit, a set of bit flags that specify the file mode of the specified file object. Set this field to <TT CLASS="cv">NULL</TT> if you do not want a file mode to be returned.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3288"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3289"> </A>The <TT CLASS="cv">Q3File_OpenRead</TT> function opens for reading the file object specified by the <TT CLASS="cv">file</TT> parameter and returns, in the <TT CLASS="cv">mode</TT> parameter, the file mode of the file object. See <A HREF="qd3dfileobj.d.htm#26171" CLASS="XRef">&quot;File Mode Flags&quot;</A> for a description of the available file mode flags.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3293"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3294"> </A><TT CLASS="cv">kQ3ErrorOSError kQ3ErrorOutOfMemory</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3295"> </A>Q3File_OpenWrite</H2><P CLASS="T1.Text1"><A NAME="pgfId=3297"> </A><A NAME="marker=3296"> </A><A NAME="marker=983"> </A>You can use the <TT CLASS="cv">Q3File_OpenWrite</TT> function to open a file object for writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=11969"> </A>TQ3Status Q3File_OpenWrite (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3FileObject file, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3FileMode mode);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=11971"> </A><TT CLASS="cv">file</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3299"> </A>A file object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=11980"> </A><TT CLASS="cv">mode</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4876"> </A>On exit, a set of bit flags that specify the file mode of the specified file object. Set this field to <TT CLASS="cv">NULL</TT> if you do not want a file mode to be returned.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3301"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3547"> </A>The <TT CLASS="cv">Q3File_OpenWrite</TT> function opens for writing the file object specified by the <TT CLASS="cv">file</TT> parameter and returns the file mode of the file object in the <TT CLASS="cv">mode</TT> parameter. See <A HREF="qd3dfileobj.d.htm#26171" CLASS="XRef">&quot;File Mode Flags&quot;</A> for a description of the available file mode flags.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3306"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3307"> </A><TT CLASS="cv">kQ3ErrorOSError kQ3ErrorOutOfMemory</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3308"> </A>Q3File_IsOpen</H2><P CLASS="T1.Text1"><A NAME="pgfId=3310"> </A><A NAME="marker=3309"> </A><A NAME="marker=998"> </A>You can use the <TT CLASS="cv">Q3File_IsOpen</TT> function to determine whether a file object is open.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=11994"> </A>TQ3Status Q3File_IsOpen (TQ3FileObject file, TQ3Boolean *isOpen);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=11996"> </A><TT CLASS="cv">file</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3312"> </A>A file object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12005"> </A><TT CLASS="cv">isOpen</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3313"> </A>On exit, a Boolean value that indicates whether the specified file is open (<TT CLASS="cv">kQ3True</TT>) or closed (<TT CLASS="cv">kQ3False</TT>).</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3314"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3315"> </A>The <TT CLASS="cv">Q3File_IsOpen</TT> function returns, in the <TT CLASS="cv">isOpen</TT> parameter, a Boolean value that indicates whether the file object specified by the <TT CLASS="cv">file</TT> parameter is open (<TT CLASS="cv">kQ3True</TT>) or closed (<TT CLASS="cv">kQ3False</TT>).</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3316"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3317"> </A><TT CLASS="cv">kQ3ErrorFileNotOpen kQ3ErrorInvalidObjectParameter kQ3ErrorNULLParameter</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3318"> </A>Q3File_Close</H2><P CLASS="T1.Text1"><A NAME="pgfId=3320"> </A><A NAME="marker=3319"> </A><A NAME="marker=1010"> </A>You can use the <TT CLASS="cv">Q3File_Close</TT> function to close a file object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12022"> </A>TQ3Status Q3File_Close (TQ3FileObject file);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12024"> </A><TT CLASS="cv">file</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3322"> </A>A file object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3323"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3324"> </A>The <TT CLASS="cv">Q3File_Close</TT> function closes the file object specified by the <TT CLASS="cv">file</TT> parameter. <TT CLASS="cv">Q3File_Close</TT> flushes any caches associated with the file and releases that memory for other uses. You should close a file object only when all operations on the file have completed successfully and you no longer need to keep the file object open.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3325"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3326"> </A><TT CLASS="cv">kQ3ErrorFileInUse kQ3ErrorInvalidObjectParameter kQ3ErrorOSError</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3327"> </A>Q3File_Cancel</H2><P CLASS="T1.Text1"><A NAME="pgfId=3329"> </A><A NAME="marker=3328"> </A><A NAME="marker=1021"> </A>You can use the <TT CLASS="cv">Q3File_Cancel</TT> function to cancel a file object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12041"> </A>TQ3Status Q3File_Cancel (TQ3FileObject file);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12043"> </A><TT CLASS="cv">file</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3331"> </A>A file object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3332"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3333"> </A>The <TT CLASS="cv">Q3File_Cancel</TT> function removes from memory any data associated with the file object specified by the <TT CLASS="cv">file</TT> parameter and disposes of the file object itself. You should call <TT CLASS="cv">Q3File_Cancel</TT> when some fatal error occurs in your application or simply when you're finished using a file object. Once the file object has been canceled, you can no longer read data from it or write data to it. In all likelihood, the file object is corrupt after you call the <TT CLASS="cv">Q3File_Cancel</TT> function.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3334"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3335"> </A><TT CLASS="cv">kQ3ErrorInvalidObjectParameter kQ3ErrorOSError</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3336"> </A>Q3File_GetMode</H2><P CLASS="T1.Text1"><A NAME="pgfId=3338"> </A><A NAME="marker=3337"> </A><A NAME="marker=1032"> </A>You can use the <TT CLASS="cv">Q3File_GetMode</TT> function to determine an open file object's current file mode.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12057"> </A>TQ3Status Q3File_GetMode (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3FileObject file, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3FileMode *mode);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12059"> </A><TT CLASS="cv">file</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3340"> </A>A file object. This file object must be open.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12068"> </A><TT CLASS="cv">mode</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3341"> </A>On exit, the current file mode of the specified file object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3342"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3343"> </A>The <TT CLASS="cv">Q3File_GetMode</TT> function returns, in the <TT CLASS="cv">mode</TT> parameter, a set of flags that encodes the current file mode of the file object specified by the <TT CLASS="cv">file</TT> parameter. See <A HREF="qd3dfileobj.d.htm#26171" CLASS="XRef">&quot;File Mode Flags&quot;</A> for a complete description of the available file mode flags.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3347"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3348"> </A><TT CLASS="cv">kQ3ErrorFileNotOpen kQ3ErrorInvalidObjectParameter kQ3ErrorNULLParameter</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3349"> </A>Q3File_GetVersion</H2><P CLASS="T1.Text1"><A NAME="pgfId=3351"> </A><A NAME="marker=3350"> </A><A NAME="marker=1047"> </A>You can use the <TT CLASS="cv">Q3File_GetVersion</TT> function to get the version of an open file object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12085"> </A>TQ3Status Q3File_GetVersion (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3FileObject file, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3FileVersion *version);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12087"> </A><TT CLASS="cv">file</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3353"> </A>A file object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=12096"> </A><TT CLASS="cv">version</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3354"> </A>On entry, a pointer to a file version. On exit, the current version of the specified file object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3355"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3356"> </A>The <TT CLASS="cv">Q3File_GetVersion</TT> function returns, through the <TT CLASS="cv">version</TT> parameter, the current version of the file object specified by the <TT CLASS="cv">file</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3357"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3358"> </A><TT CLASS="cv">kQ3ErrorFileNotOpen kQ3ErrorInvalidObjectParameter kQ3ErrorNULLParameter</TT></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>