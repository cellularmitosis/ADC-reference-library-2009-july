<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Trigrids</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=5000"> </A><A NAME="37468"> </A>Creating and Editing Trigrids</H1><P CLASS="T1.Text1"><A NAME="pgfId=5005"> </A><A NAME="marker=5001"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate trigrids. See <A HREF="qd3dgeometry.29.htm#42706" CLASS="XRef">&quot;Trigrids&quot;</A> for the definition of a trigrid.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5009"> </A>Q3TriGrid_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=5010"> </A><A NAME="marker=3232"> </A>You can use the <TT CLASS="cv">Q3TriGrid_New</TT> function to create a new trigrid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44354"> </A>TQ3GeometryObject Q3TriGrid_New (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3TriGridData *triGridData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44356"> </A><TT CLASS="cv">triGridData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5012"> </A>A pointer to a <TT CLASS="cv">TQ3TriGridData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5013"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5014"> </A>The <TT CLASS="cv">Q3TriGrid_New</TT> function returns, as its function result, a new trigrid having the vertices and attributes specified by the <TT CLASS="cv">triGridData</TT> parameter. If a new trigrid could not be created, <TT CLASS="cv">Q3TriGrid_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5015"> </A>Q3TriGrid_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=5016"> </A><A NAME="marker=3240"> </A>You can use the <TT CLASS="cv">Q3TriGrid_Submit</TT> function to submit an immediate trigrid for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44367"> </A>TQ3Status Q3TriGrid_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3TriGridData *triGridData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44369"> </A><TT CLASS="cv">triGridData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5018"> </A>A pointer to a <TT CLASS="cv">TQ3TriGridData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44378"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5019"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5020"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5021"> </A>The <TT CLASS="cv">Q3TriGrid_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate trigrid whose shape and attribute set are specified by the <TT CLASS="cv">triGridData</TT> parameter. The trigrid is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5022"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=5023"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5031"> </A>Q3TriGrid_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=5032"> </A><A NAME="marker=3260"> </A>You can use the <TT CLASS="cv">Q3TriGrid_GetData</TT> function to get the data that defines a trigrid and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44389"> </A>TQ3Status Q3TriGrid_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject trigrid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TriGridData *triGridData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44391"> </A><TT CLASS="cv">trigrid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5034"> </A>A trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44400"> </A><TT CLASS="cv">triGridData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5035"> </A>On exit, a pointer to a <TT CLASS="cv">TQ3TriGridData</TT> structure that contains information about the trigrid specified by the <TT CLASS="cv">trigrid</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5036"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5037"> </A>The <TT CLASS="cv">Q3TriGrid_GetData</TT> function returns, through the <TT CLASS="cv">triGridData</TT> parameter, information about the trigrid specified by the <TT CLASS="cv">trigrid</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3TriGridData</TT> structure internally; you must call <TT CLASS="cv">Q3TriGrid_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5041"> </A>Q3TriGrid_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=5042"> </A><A NAME="marker=3272"> </A>You can use the <TT CLASS="cv">Q3TriGrid_SetData</TT> function to set the data that defines a trigrid and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44411"> </A>TQ3Status Q3TriGrid_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject trigrid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3TriGridData *triGridData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44413"> </A><TT CLASS="cv">trigrid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5044"> </A>A trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44422"> </A><TT CLASS="cv">triGridData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5045"> </A>A pointer to a <TT CLASS="cv">TQ3TriGridData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5046"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5047"> </A>The <TT CLASS="cv">Q3TriGrid_SetData</TT> function sets the data associated with the trigrid specified by the <TT CLASS="cv">trigrid</TT> parameter to the data specified by the <TT CLASS="cv">triGridData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5048"> </A>Q3TriGrid_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=5049"> </A><A NAME="marker=3281"> </A>You can use the <TT CLASS="cv">Q3TriGrid_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3TriGrid_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44433"> </A>TQ3Status Q3TriGrid_EmptyData (TQ3TriGridData *triGridData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44435"> </A><TT CLASS="cv">triGridData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5051"> </A>A pointer to a <TT CLASS="cv">TQ3TriGridData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5052"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5053"> </A>The <TT CLASS="cv">Q3TriGrid_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3TriGridData</TT> structure pointed to by the <TT CLASS="cv">triGridData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3TriGrid_GetData</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5054"> </A>Q3TriGrid_GetVertexPosition</H2><P CLASS="T1.Text1"><A NAME="pgfId=5055"> </A><A NAME="marker=3289"> </A>You can use the <TT CLASS="cv">Q3TriGrid_GetVertexPosition</TT> function to get the position of a vertex of a trigrid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44446"> </A>TQ3Status Q3TriGrid_GetVertexPosition (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject triGrid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long rowIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long columnIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D *position);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44448"> </A><TT CLASS="cv">triGrid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5057"> </A>A trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44457"> </A><TT CLASS="cv">rowIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5058"> </A>A row index into the <TT CLASS="cv">vertices</TT> array of the specified trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44466"> </A><TT CLASS="cv">columnIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5059"> </A>A column index into the <TT CLASS="cv">vertices</TT> array of the specified trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44475"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5060"> </A>On exit, the position of the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5061"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5062"> </A>The <TT CLASS="cv">Q3TriGrid_GetVertexPosition</TT> function returns, in the <TT CLASS="cv">position</TT> parameter, the position of the vertex having row and column indices <TT CLASS="cv">rowIndex</TT> and <TT CLASS="cv">columnIndex</TT> in the <TT CLASS="cv">vertices</TT> array of the trigrid specified by the <TT CLASS="cv">triGrid</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5063"> </A>Q3TriGrid_SetVertexPosition</H2><P CLASS="T1.Text1"><A NAME="pgfId=5064"> </A><A NAME="marker=3300"> </A>You can use the <TT CLASS="cv">Q3TriGrid_SetVertexPosition</TT> function to set the position of a vertex of a trigrid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44486"> </A>TQ3Status Q3TriGrid_SetVertexPosition (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject triGrid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long rowIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long columnIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *position);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44488"> </A><TT CLASS="cv">triGrid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5066"> </A>A trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44501"> </A><TT CLASS="cv">rowIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5067"> </A>A row index into the <TT CLASS="cv">vertices</TT> array of the specified trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44510"> </A><TT CLASS="cv">columnIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5068"> </A>A column index into the <TT CLASS="cv">vertices</TT> array of the specified trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44519"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5069"> </A>The desired position of the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5070"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5071"> </A>The <TT CLASS="cv">Q3TriGrid_SetVertexPosition</TT> function sets the position of the vertex having row and column indices <TT CLASS="cv">rowIndex</TT> and <TT CLASS="cv">columnIndex</TT> in the <TT CLASS="cv">vertices</TT> array of the trigrid specified by the <TT CLASS="cv">triGrid</TT> parameter to that specified in the <TT CLASS="cv">position</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5072"> </A>Q3TriGrid_GetVertexAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=5073"> </A><A NAME="marker=3311"> </A>You can use the <TT CLASS="cv">Q3TriGrid_GetVertexAttributeSet</TT> function to get the attribute set of a vertex of a trigrid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44530"> </A>TQ3Status Q3TriGrid_GetVertexAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject triGrid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long rowIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long columnIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet *attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44532"> </A><TT CLASS="cv">triGrid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5075"> </A>A trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44541"> </A><TT CLASS="cv">rowIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5076"> </A>A row index into the <TT CLASS="cv">vertices</TT> array of the specified trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44550"> </A><TT CLASS="cv">columnIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5077"> </A>A column index into the <TT CLASS="cv">vertices</TT> array of the specified trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44559"> </A><TT CLASS="cv">attributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5078"> </A>On exit, a pointer to a vertex attribute set for the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5079"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5080"> </A>The <TT CLASS="cv">Q3TriGrid_GetVertexAttributeSet</TT> function returns, in the <TT CLASS="cv">attributeSet</TT> parameter, the set of attributes for the vertex having row and column indices <TT CLASS="cv">rowIndex</TT> and <TT CLASS="cv">columnIndex</TT> in the <TT CLASS="cv">vertices</TT> array of the trigrid specified by the <TT CLASS="cv">triGrid</TT> parameter. The reference count of the set is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5081"> </A>Q3TriGrid_SetVertexAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=5082"> </A><A NAME="marker=3322"> </A>You can use the <TT CLASS="cv">Q3TriGrid_SetVertexAttributeSet</TT> function to set the attribute set of a vertex of a trigrid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44570"> </A>TQ3Status Q3TriGrid_SetVertexAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject triGrid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long rowIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long columnIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44572"> </A><TT CLASS="cv">triGrid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5084"> </A>A trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44581"> </A><TT CLASS="cv">rowIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5085"> </A>A row index into the <TT CLASS="cv">vertices</TT> array of the specified trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44590"> </A><TT CLASS="cv">columnIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5086"> </A>A column index into the <TT CLASS="cv">vertices</TT> array of the specified trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44599"> </A><TT CLASS="cv">attributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5087"> </A>The desired set of attributes for the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5088"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5089"> </A>The <TT CLASS="cv">Q3TriGrid_SetVertexAttributeSet</TT> function sets the attribute set of the vertex having row and column indices <TT CLASS="cv">rowIndex</TT> and <TT CLASS="cv">columnIndex</TT> in the <TT CLASS="cv">vertices</TT> array of the trigrid specified by the <TT CLASS="cv">triGrid</TT> parameter to the set specified in the <TT CLASS="cv">attributeSet</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5090"> </A>Q3TriGrid_GetFacetAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=5091"> </A><A NAME="marker=3333"> </A>You can use the <TT CLASS="cv">Q3TriGrid_GetFacetAttributeSet</TT> function to get the attribute set of a facet of a trigrid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44610"> </A>TQ3Status Q3TriGrid_GetFacetAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject triGrid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long faceIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet *facetAttributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44612"> </A><TT CLASS="cv">triGrid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5093"> </A>A trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44621"> </A><TT CLASS="cv">faceIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5094"> </A>An index into the array of facets for the specified trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44630"> </A><TT CLASS="cv">facetAttributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5095"> </A> On exit, a pointer to an attribute set for the specified facet.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5096"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5097"> </A>The <TT CLASS="cv">Q3TriGrid_GetFacetAttributeSet</TT> function returns, in the <TT CLASS="cv">facetAttributeSet</TT> parameter, the set of attributes for the facet having the index <TT CLASS="cv">faceIndex</TT> of the trigrid specified by the <TT CLASS="cv">triGrid</TT> parameter. The reference count of the set is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5098"> </A>Q3TriGrid_SetFacetAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=5099"> </A><A NAME="marker=3343"> </A>You can use the <TT CLASS="cv">Q3TriGrid_SetFacetAttributeSet</TT> function to set the attribute set of a facet of a trigrid.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44642"> </A>TQ3Status Q3TriGrid_SetFacetAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject triGrid, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long faceIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet facetAttributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44644"> </A><TT CLASS="cv">triGrid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5101"> </A>A trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44653"> </A><TT CLASS="cv">faceIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5102"> </A>An index into the array of facets for the specified trigrid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44662"> </A><TT CLASS="cv">facetAttributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5103"> </A> The desired set of attributes for the specified facet.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5104"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5105"> </A>The <TT CLASS="cv">Q3TriGrid_SetFacetAttributeSet</TT> function sets the attribute set of the facet having index <TT CLASS="cv">faceIndex</TT> of the trigrid specified by the <TT CLASS="cv">triGrid</TT> parameter to the set specified by the <TT CLASS="cv">facetAttributeSet</TT> parameter.<A NAME="marker=5106"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>