<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Extending QuickDraw&nbsp;3D</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=3198"> </A>Extending QuickDraw&nbsp;3D</H1><P CLASS="T1.Text1"><A NAME="pgfId=3203"> </A><A NAME="marker=3199"> </A>QuickDraw&nbsp;3D is designed to be easily extensible, so that you can, if necessary, add capabilities that are not part of the basic QuickDraw&nbsp;3D feature set. For instance, you've already seen that QuickDraw&nbsp;3D supplies two types of renderers, the wireframe and interactive renderers. The wireframe renderer creates line renderings of models, as illustrated in <A HREF="qd3dintroduction.5.htm#26040" CLASS="XRef">Figure&nbsp;2</A>.</P><P CLASS="Fg.Figure"><A NAME="pgfId=3217"> </A>Figure&nbsp;2<A NAME="26040"> </A>A model rendered by the wireframe renderer</P><DIV><IMG SRC="qd3dintroduction-2.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=3218"> </A>The interactive renderer uses a more complex rendering algorithm that allows illumination and shading effects to be produced. <A HREF="qd3dintroduction.5.htm#19497" CLASS="XRef">Figure&nbsp;3</A> shows the same teapot model rendered by the interactive renderer.</P><P CLASS="Fg.Figure"><A NAME="pgfId=3226"> </A>Figure&nbsp;3<A NAME="19497"> </A>A model rendered by the interactive renderer</P><DIV><IMG SRC="qd3dintroduction-3.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=7213"> </A>It's possible that some applications require even more complex rendering algorithms to render images adequately from a 3D model. For example, you might want to define a ray tracing renderer to support additional lighting effects such as reflection and refraction. In&nbsp;those cases, the application can define and register a custom renderer with QuickDraw&nbsp;3D and then use that renderer in exactly the same way it would use any standard QuickDraw&nbsp;3D renderer.</P><P CLASS="T1.Text1"><A NAME="pgfId=3237"> </A>QuickDraw&nbsp;3D is extensible in several ways:</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=7228"> </A>You can define <I CLASS="italics">custom object types</I> to augment the standard QuickDraw&nbsp;3D object types.</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=3242"> </A>You can define <I CLASS="italics">custom attributes</I> and assign them to shapes or sets.</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=7231"> </A>You can define <I CLASS="italics">custom shaders</I> to create special shading effects or to handle any custom attributes you've defined. (The shaders that QuickDraw&nbsp;3D supplies can handle all the predefined attribute types.)</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=7235"> </A>You can define <I CLASS="italics">custom renderers</I> to support other rendering algorithms.</LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=3252"> </A>In addition, QuickDraw&nbsp;3D is designed to be portable to other software platforms and to support a variety of hardware accelerators:</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=3256"> </A>QuickDraw&nbsp;3D is <I CLASS="italics">cross-platform.</I> It is available for the PowerPC version of the Mac OS and for the Microsoft Win32 API (running on either Windows 95 or on the Intel processor version of Windows NT 3.51 and later). This portability to other window systems is accomplished by isolating all window system-specific information into a layer called a <I CLASS="italics">draw context,</I> which is associated with a view. QuickDraw&nbsp;3D automatically handles system-dependent issues such as byte ordering.</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=3263"> </A>QuickDraw&nbsp;3D renderers can take advantage of <I CLASS="italics">hardware accelerators,</I> if available.</LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=3268"> </A>Finally, QuickDraw&nbsp;3D defines a platform-independent <A NAME="marker=3267"> </A><B CLASS="bold">metafile</B> (that is, a file format) for storing and interchanging 3D data. This metafile is intended to provide a standard format according to which applications can read and write 3D data, even applications that use 3D graphics systems other than QuickDraw&nbsp;3D. QuickDraw&nbsp;3D itself includes routines that you can use to read and write data in the metafile format. Apple Computer, Inc. also supplies a parser that you can use to read and write metafile data on operating systems that do not support QuickDraw&nbsp;3D.<A NAME="marker=3278"> </A></P><P CLASS="Note"><A NAME="pgfId=8287"> </A>For further information about the metafile format, see <I CLASS="italics">3D&nbsp;Metafile 1.5 Reference. </I>This document is available online in the QuickDraw&nbsp;3D 1.5 SDK. </P><P CLASS="T1.Text1"><A NAME="pgfId=5125"> </A><A HREF="qd3dintroduction.5.htm#34662" CLASS="XRef">Figure&nbsp;4</A> shows the functional components of QuickDraw&nbsp;3D.</P><P CLASS="Fg.Figure"><A NAME="pgfId=5129"> </A>Figure&nbsp;4<A NAME="34662"> </A>The parts of QuickDraw&nbsp;3D</P><DIV><IMG SRC="qd3dintroduction-4.gif"></DIV><hr>&#169; mat. Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>