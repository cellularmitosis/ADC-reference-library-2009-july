<!-- legacy work start --><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"        "http://www.w3.org/TR/html4/loose.dtd"><!-- legacy work end --><HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><TITLE>Sound Command Numbers (deprecated)</title><!-- legacy work start -->        <META NAME="Generator" CONTENT="manual">        <META http-equiv="content-type" CONTENT="text/html;charset=utf-8">        <META NAME = "Copyright" CONTENT="Copyright 2007 Apple Inc. All Rights Reserved.">        <META NAME="IndexTitle" CONTENT="Sound Input Manager (Not Recommended)">        <meta name="xcode-display" content="render">        <LINK REL="stylesheet" TYPE="text/css" HREF="../../../Resources/CSS/frameset_styles.css"> <!-- before submitting, globally replace ".." with "developer.apple.com" -->        <script type="text/javascript" language="JavaScript" src="../../../Resources/JavaScript/page.js"></script><!-- legacy work end --></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>Inside Macintosh: Sound</I><P>| <A target="doc" HREF="imsoundmgr.3a.htm">Previous</A> | <A target="doc" HREF="imsoundmgr.1.htm">Chapter contents</A> | <A target="doc" HREF="imsoundmgr.htm">Chapter top</A> | <A target="doc" HREF="imsoundmgr.38.htm">Section top</A> | <A target="doc" HREF="imsoundmgr.3c.htm">Next</a> | <!-- QTnavbar end --><!-- legacy work start --><script type="text/javascript"> placeWatermark()</script><div style="width:100%; position:fixed;"><div align="center" id="watermark" style="position: relative; margin-left:auto; margin-right:auto; z-index:20; width:500px;"><div class="legacybox" style="position: relative;"><h1>Legacy Document<span class=closebutton><a href="javascript:closeWatermark()"><img src="../../../Resources/Images/closebutton.png" width="14" height="14" border="0" align="top" alt="close button"></a></span></h1><p><b>Important:</b><i>Sound Input Manager</i> is deprecated as of Mac OS X v10.5. For new audio development in Mac OS X, use Core Audio. See the <a href="http://developer.apple.com/referencelibrary/MusicAudio/" target="_top">Audio</a> page in the ADC Reference Library.</p></div></div></div><!-- legacy work end --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=2113"> </A><A NAME="marker=10393"> </A><A NAME="17214"> </A>Sound Command Numbers</H1><P CLASS="T1.Text1"><A NAME="pgfId=4609"> </A>You can perform many sound-related operations by sending sound commands to a sound channel. For example, to change the volume of a sound that is currently playing, you can send the <TT CLASS="cv">ampCmd</TT> sound command to the channel using the <TT CLASS="cv">SndDoImmediate</TT> routine. Similarly, to change the volume of all sounds subsequently to be played in a sound channel, you can send the <TT CLASS="cv">volumeCmd</TT> sound command to that channel using the <TT CLASS="cv">SndDoCommand</TT> routine.</P><P CLASS="T1.Text1"><A NAME="pgfId=4611"> </A>The <TT CLASS="cv">cmd</TT> field of the <TT CLASS="cv">SndCommand</TT> data structure (described on <A target="doc" HREF="imsoundmgr.3e.htm#17553" CLASS="XRef">[link]</A>) specifies the sound command you want to execute. The <TT CLASS="cv">param1</TT> and <TT CLASS="cv">param2</TT> fields of that structure contain any additional information that might be needed to complete the command. One or both of these parameter fields might be ignored by a particular sound command. In some cases, the Sound Manager returns information to your application in one of the parameter fields.</P><P CLASS="I.Important"><A NAME="pgfId=4610"> </A>In general, you'll use either <TT CLASS="cv">SndDoCommand</TT> or <TT CLASS="cv">SndDoImmediate</TT> to send sound commands to a sound channel. With several commands, however, you must use the <TT CLASS="cv">SndControl</TT> function to issue the sound command. In Sound Manager version 3.0 and later, however, you virtually never need to use <TT CLASS="cv">SndControl</TT> because the commands that require it are either no longer supported (for example, <TT CLASS="cv">availableCmd</TT>, <TT CLASS="cv">totalLoadCmd</TT>, and <TT CLASS="cv">loadCmd</TT>) or are obsolete (for example, <TT CLASS="cv">versionCmd</TT>). The sound commands specific to the <TT CLASS="cv">SndControl</TT> function are documented here for completeness only. </P><P CLASS="T1.Text1"><A NAME="pgfId=4612"> </A>The sound commands available to your application are defined by constants.<A NAME="marker=1745"> </A></P><CODE CLASS="CvF.CodeFull"><A NAME="pgfId=10397"> </A>CONST<BR>&nbsp;&nbsp;&nbsp;&nbsp;nullCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{do nothing}<BR>&nbsp;&nbsp;&nbsp;&nbsp;quietCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 3;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{stop a sound that is playing}<BR>&nbsp;&nbsp;&nbsp;&nbsp;flushCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 4;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{flush a sound channel}<BR>&nbsp;&nbsp;&nbsp;&nbsp;reInitCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{reinitialize a sound channel}<BR>&nbsp;&nbsp;&nbsp;&nbsp;waitCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{suspend processing in a channel}<BR>&nbsp;&nbsp;&nbsp;&nbsp;pauseCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 11;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{pause processing in a channel}<BR>&nbsp;&nbsp;&nbsp;&nbsp;resumeCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 12;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{resume processing in a channel}<BR>&nbsp;&nbsp;&nbsp;&nbsp;callBackCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 13;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{execute a callback procedure}<BR>&nbsp;&nbsp;&nbsp;&nbsp;syncCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 14;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{synchronize channels}<BR>&nbsp;&nbsp;&nbsp;&nbsp;availableCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 24;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{see if initialization options are }<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ supported}<BR>&nbsp;&nbsp;&nbsp;&nbsp;versionCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 25;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{determine version}<BR>&nbsp;&nbsp;&nbsp;&nbsp;totalLoadCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 26;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{report total CPU load}<BR>&nbsp;&nbsp;&nbsp;&nbsp;loadCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 27;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{report CPU load for a new channel}<BR>&nbsp;&nbsp;&nbsp;&nbsp;freqDurationCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 40;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{play a note for a duration}<BR>&nbsp;&nbsp;&nbsp;&nbsp;restCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 41;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{rest a channel for a duration}<BR>&nbsp;&nbsp;&nbsp;&nbsp;freqCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 42;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{change the pitch of a sound<BR>&nbsp;&nbsp;&nbsp;&nbsp;ampCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 43;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{change the amplitude of a sound}<BR>&nbsp;&nbsp;&nbsp;&nbsp;timbreCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 44;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{change the timbre of a sound}<BR>&nbsp;&nbsp;&nbsp;&nbsp;getAmpCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 45;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{get the amplitude of a sound}<BR>&nbsp;&nbsp;&nbsp;&nbsp;volumeCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 46;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{set volume}<BR>&nbsp;&nbsp;&nbsp;&nbsp;getVolumeCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 47;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{get volume}<BR>&nbsp;&nbsp;&nbsp;&nbsp;waveTableCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 60;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{install a wave table as a voice}<BR>&nbsp;&nbsp;&nbsp;&nbsp;soundCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 80;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{install a sampled sound as a voice}<BR>&nbsp;&nbsp;&nbsp;&nbsp;bufferCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 81;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{play a sampled sound}<BR>&nbsp;&nbsp;&nbsp;&nbsp;rateCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 82;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{set the pitch of a sampled sound}<BR>&nbsp;&nbsp;&nbsp;&nbsp;getRateCmd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 85;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{get the pitch of a sampled sound}<BR></CODE><DIV><H2 CLASS="UH.UserHd"><A NAME="pgfId=4659"> </A>Constant descriptions</H2><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10399"> </A><TT CLASS="cv">nullCmd</TT><A NAME="marker=10403"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4655"> </A>Do nothing.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: 0 (ignored on input and output)</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10415"> </A><TT CLASS="cv">quietCmd</TT><A NAME="marker=10419"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4677"> </A>Stop the sound that is currently playing. You should send <TT CLASS="cv">quietCmd</TT> by using <TT CLASS="cv">SndDoImmediate</TT>.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: 0 (ignored on input and output)<A NAME="marker=1133"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10431"> </A><TT CLASS="cv">flushCmd</TT><A NAME="marker=10435"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4678"> </A>Remove all commands currently queued in the specified sound channel. A <TT CLASS="cv">flushCmd</TT> command does not affect any sound that is currently in progress. You should send <TT CLASS="cv">flushCmd</TT> by using <TT CLASS="cv">SndDoImmediate</TT>.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: 0 (ignored on input and output)<A NAME="marker=55"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10447"> </A><TT CLASS="cv">reInitCmd</TT><A NAME="marker=10451"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3648"> </A>Reset the initialization parameters specified in <TT CLASS="cv">param2</TT> for the specified channel.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: initialization parameters<A NAME="marker=253"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10463"> </A><TT CLASS="cv">waitCmd</TT><A NAME="marker=10467"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4679"> </A>Suspend further command processing in a channel until the specified duration has elapsed. To achieve sounds longer than 32,767 half-milliseconds, Pascal programmers can pass a negative number in <TT CLASS="cv">param1</TT>, in which case the sound plays for 32,767 half-milliseconds plus the absolute value of <TT CLASS="cv">param1</TT>.<TT CLASS="cv"> param1</TT>: duration in half-milliseconds (0 to 65,565)<TT CLASS="cv"> param2</TT>: 0 (ignored on input and output)<A NAME="marker=1138"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10479"> </A><TT CLASS="cv">pauseCmd</TT><A NAME="marker=10483"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4680"> </A>Pause any further command processing in a channel until <TT CLASS="cv">resumeCmd</TT> is received.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: 0 (ignored on input and output)<A NAME="marker=1141"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10495"> </A><TT CLASS="cv">resumeCmd</TT><A NAME="marker=10499"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4681"> </A>Resume command processing in a channel that was previously paused by <TT CLASS="cv">pauseCmd</TT>.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: 0 (ignored on input and output)<A NAME="marker=1142"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10511"> </A><TT CLASS="cv">callBackCmd</TT><A NAME="marker=10515"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4682"> </A>Execute the callback procedure specified as a parameter to the <TT CLASS="cv">SndNewChannel</TT> function. Both <TT CLASS="cv">param1</TT> and <TT CLASS="cv">param2</TT> are application-specific; you can use these two parameters to send data to your callback routine.<TT CLASS="cv"> param1</TT>: application-defined<TT CLASS="cv"> param2</TT>: application-defined<A NAME="marker=1145"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10527"> </A><TT CLASS="cv">syncCmd</TT><A NAME="marker=10531"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4683"> </A>Synchronize multiple channels of sound. A <TT CLASS="cv">syncCmd</TT> command is held in the specified channel, suspending all further command processing. The <TT CLASS="cv">param2</TT> parameter contains an identifier that is arbitrary. Each time the Sound Manager receives <TT CLASS="cv">syncCmd</TT>, it decrements the <TT CLASS="cv">count</TT> parameter for each channel having that identifier. When the count for a specific channel reaches 0, command processing in that channel resumes.<TT CLASS="cv"> param1</TT>: count<TT CLASS="cv"> param2</TT>: identifier<A NAME="marker=1147"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10543"> </A><TT CLASS="cv">availableCmd</TT><A NAME="marker=10547"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4676"> </A>Return 1 in <TT CLASS="cv">param1</TT> if the Sound Manager supports the initialization options specified in <TT CLASS="cv">param2</TT> and 0 otherwise. However, the Sound Manager might support certain initialization parameters in general but not on a specific machine. You should send <TT CLASS="cv">availableCmd</TT> using the <TT CLASS="cv">SndControl</TT> function.<TT CLASS="cv"> param1</TT>: 0 on input; result of command on output<TT CLASS="cv"> param2</TT>: initialization parameters</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10559"> </A><TT CLASS="cv">versionCmd</TT><A NAME="marker=10563"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4684"> </A>Previously, this command determined which version of a sound data format is available. The result is returned in <TT CLASS="cv">param2</TT>. The high word of the result indicates the major revision number, and the low word indicates the minor revision number. For example, version 2.0 of a data format would be returned as $00020000. However, this command is obsolete, and your application should not rely on it. You send <TT CLASS="cv">versionCmd</TT> by using the <TT CLASS="cv">SndControl</TT> function.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: 0 on input; version on output</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10575"> </A><TT CLASS="cv">totalLoadCmd</TT><A NAME="marker=10579"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4685"> </A>Previously, this command determined the total CPU load factor for all existing sound activity and for a new sound channel having the initialization parameters specified in <TT CLASS="cv">param2</TT>. However, this command is obsolete, and your application should not rely on it. You send <TT CLASS="cv">totalLoadCmd</TT> by using the <TT CLASS="cv">SndControl</TT> function.<TT CLASS="cv"> param1</TT>: 0 on input, load factor on output<TT CLASS="cv"> param2</TT>: initialization parameters</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10591"> </A><TT CLASS="cv">loadCmd</TT><A NAME="marker=10595"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4686"> </A>Previously, this command determined the CPU load factor that would be incurred by a new channel of sound having the initialization parameters specified in <TT CLASS="cv">param2</TT>. The load factor returned in <TT CLASS="cv">param1</TT> is the percentage of CPU processing power that the specified sound channel would require. However, this command is obsolete, and your application should not rely on it. You send <TT CLASS="cv">loadCmd</TT> by using the <TT CLASS="cv">SndControl</TT> function.<TT CLASS="cv"> param1</TT>: 0 on input, load factor on output<TT CLASS="cv"> param2</TT>: initialization parameters</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10607"> </A><TT CLASS="cv">freqDurationCmd</TT><A NAME="marker=10611"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4687"> </A> <A NAME="marker=1163"> </A>Play the note specified in <TT CLASS="cv">param2</TT> for the duration specified in <TT CLASS="cv">param1</TT>. To achieve sounds longer than 32,767 half-milliseconds, Pascal programmers can pass a negative number in <TT CLASS="cv">param1</TT>, in which case the sound plays for 32,767 half-milliseconds plus the absolute value of <TT CLASS="cv">param1</TT>. The <TT CLASS="cv">param2</TT> parameter must contain a value in the range 0 to 127. If you want the note to stop playing after the duration specified in <TT CLASS="cv">param1</TT>, you must send <TT CLASS="cv">quietCmd</TT> after <TT CLASS="cv">freqDurationCmd</TT>.<TT CLASS="cv"> param1</TT>: duration in half-milliseconds (0 to 65,565)<TT CLASS="cv"> param2</TT>: desired frequency</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10624"> </A><TT CLASS="cv">restCmd</TT><A NAME="marker=10628"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4688"> </A>Rest a channel for a specified duration. The duration is specified in half-milliseconds in <TT CLASS="cv">param1</TT>. To achieve sounds longer than 32,767 half-milliseconds, Pascal programmers can pass a negative number in <TT CLASS="cv">param1</TT>, in which case the sound plays for 32,767 half-milliseconds plus the absolute value of <TT CLASS="cv">param1</TT>.<TT CLASS="cv"> param1</TT>: duration in half-milliseconds (0 to 65,565)<TT CLASS="cv"> param2</TT>: 0 (ignored on input and output)<A NAME="marker=1164"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10640"> </A><TT CLASS="cv">freqCmd</TT><A NAME="marker=10644"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4689"> </A>Change the frequency (or pitch) of a sound. If no sound is currently playing, then <TT CLASS="cv">freqCmd</TT> causes the Sound Manager to begin playing indefinitely at the frequency specified in <TT CLASS="cv">param2</TT>. If, however, no instrument is installed in the channel and you attempt to play either wave-table or sampled-sound data, no sound is produced. The <TT CLASS="cv">param2</TT> parameter must contain a value in the range 0 to 127. The <TT CLASS="cv">freqCmd</TT> command is identical to the <TT CLASS="cv">freqDurationCmd</TT> command, except that no duration is specified to a <TT CLASS="cv">freqCmd</TT> command.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: desired frequency<A NAME="marker=1165"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10656"> </A><TT CLASS="cv">ampCmd</TT><A NAME="marker=10660"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4690"> </A>Change the amplitude (or loudness) of a sound. If no sound is currently playing, then <TT CLASS="cv">ampCmd</TT> sets the amplitude of the next sound to be played. You specify the amplitude in <TT CLASS="cv">param1</TT>; the amplitude should be an integer in the range 0 to 255.<TT CLASS="cv"> param1</TT>: desired amplitude<TT CLASS="cv"> param2</TT>: 0 (ignored on input and output)<A NAME="marker=1166"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10672"> </A><TT CLASS="cv">timbreCmd</TT><A NAME="marker=10676"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4691"> </A>Change the timbre (or tone) of a sound currently being defined using square-wave data. A timbre value of 0 produces a clear tone; a timbre value of 254 produces a buzzing tone. You can use <TT CLASS="cv">timbreCmd</TT> only for sounds defined using square-wave data.<TT CLASS="cv"> param1</TT>: desired timbre (0 to 254)<TT CLASS="cv"> param2</TT>: 0 (ignored on input and output)<A NAME="marker=1170"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10688"> </A><TT CLASS="cv">getAmpCmd</TT><A NAME="marker=10692"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4692"> </A>Determine the current amplitude (or loudness) of a sound. The amplitude is returned in an integer variable whose address you pass in <TT CLASS="cv">param2</TT> and is in the range 0 to 255.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: pointer to amplitude variable</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10704"> </A><TT CLASS="cv">volumeCmd</TT><A NAME="10002"> </A><A NAME="marker=10709"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3660"> </A><A NAME="marker=531"> </A>Set the right and left volumes of the specified sound channel to the volumes specified in the high and low words of <TT CLASS="cv">param2</TT>. The value $0100 represents full volume, and $0080 represents half volume. You can specify values larger than $0100 to overdrive the volume. For example, setting <TT CLASS="cv">param2</TT> to $02000200 sets the volume on both left and right speakers to twice full volume. Note, however, that <TT CLASS="cv">volumeCmd</TT> is available only in Sound Manager versions 3.0 and later.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: high word is right volume, low word is left volume</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10721"> </A><TT CLASS="cv">getVolumeCmd</TT><A NAME="marker=10725"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=3664"> </A>Get the current right and left volumes of the specified sound channel. The volumes are returned in the high and low words of the long integer pointed to by <TT CLASS="cv">param2</TT>. The value $0100 represents full volume, and $0080 represents half volume. Note, however, that <TT CLASS="cv">getVolumeCmd</TT> is available only in Sound Manager versions 3.0 and later.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: pointer to volume data<A NAME="marker=611"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10737"> </A><TT CLASS="cv">waveTableCmd</TT><A NAME="marker=10741"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4693"> </A>Install a wave table as a voice in the specified channel. The <TT CLASS="cv">param1</TT> parameter specifies the length of the wave table, and the <TT CLASS="cv">param2</TT> parameter is a pointer to the wave-table data itself. You can use <TT CLASS="cv">waveTableCmd</TT> only for sounds defined using wave-table data.<TT CLASS="cv"> param1</TT>: length of wave table<TT CLASS="cv"> param2</TT>: pointer to wave-table data</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10753"> </A><TT CLASS="cv">soundCmd</TT><A NAME="marker=10757"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4694"> </A>Install a sampled sound as a voice in a channel. If the high bit of the command is set, <TT CLASS="cv">param2</TT> is interpreted as an offset from the beginning of the <TT CLASS="cv">'snd&nbsp;'</TT> resource containing the command to the sound header. If the high bit is not set, <TT CLASS="cv">param2</TT> is interpreted as a pointer to the sound header. You can use the <TT CLASS="cv">soundCmd</TT> command only with noncompressed sampled-sound data. You can also use <TT CLASS="cv">soundCmd</TT> to preconfigure a sound channel, so that you can later send sound commands to it at interrupt time.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: offset or pointer to sound header<A NAME="marker=1932"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10769"> </A><TT CLASS="cv">bufferCmd</TT><A NAME="marker=10773"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4695"> </A>Play a buffer of sampled-sound data. If the high bit of the command is set, <TT CLASS="cv">param2</TT> is interpreted as an offset from the beginning of the <TT CLASS="cv">'snd&nbsp;'</TT> resource containing the command to the sound header. If the high bit is not set, <TT CLASS="cv">param2</TT> is interpreted as a pointer to the sound header. You can use <TT CLASS="cv">bufferCmd</TT> only with sampled-sound data. Note that sending a <TT CLASS="cv">bufferCmd</TT> resets the rate of the channel to 1.0.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: offset or pointer to sound header</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10785"> </A><TT CLASS="cv">rateCmd</TT><A NAME="marker=10789"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4618"> </A>Set the rate of a sampled sound that is currently playing, thus effectively altering its pitch and duration. Your application can set a rate of 0 to pause a sampled sound that is playing. The new rate is set to the value specified in <TT CLASS="cv">param2</TT>, which is interpreted relative to 22&nbsp;kHz. (For example, to set the rate to 44&nbsp;kHz, pass $00020000 in <TT CLASS="cv">param2</TT>; see <A target="doc" HREF="imsoundmgr.f.htm#23581" CLASS="XRef">Listing 1-14</A> for sample code that uses <TT CLASS="cv">rateCmd</TT>.) You can use <TT CLASS="cv">rateCmd</TT> only with sampled-sound data.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: desired rate of sound<A NAME="marker=1177"> </A><A NAME="marker=1173"> </A></BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=10801"> </A><TT CLASS="cv">getRateCmd</TT><A NAME="marker=10805"> </A></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=4696"> </A>Determine the sample rate of the sampled sound currently playing. The current rate of the channel is returned in a <TT CLASS="cv">Fixed</TT> variable whose address you pass in <TT CLASS="cv">param2</TT> of the sound command. The values returned are always relative to the 22&nbsp;kHz sampling rate, as with the <TT CLASS="cv">rateCmd</TT> sound command. You can use <TT CLASS="cv">getRateCmd</TT> only with sampled-sound data, and you should send it by using <TT CLASS="cv">SndDoImmediate</TT>.<TT CLASS="cv"> param1</TT>: 0 (ignored on input and output)<TT CLASS="cv"> param2</TT>: pointer to rate variable<A NAME="marker=1035"> </A></BLOCKQUOTE><hr>&#169; 1999 Apple Computer, Inc.<!-- QTnavbar start --><P><I>Inside Macintosh: Sound</I><P>| <A target="doc" HREF="imsoundmgr.3a.htm">Previous</A> | <A target="doc" HREF="imsoundmgr.1.htm">Chapter contents</A> | <A target="doc" HREF="imsoundmgr.htm">Chapter top</A> | <A target="doc" HREF="imsoundmgr.38.htm">Section top</A> | <A target="doc" HREF="imsoundmgr.3c.htm">Next</a> | <!-- QTnavbar end --><!-- legacy work start --><script type="text/javascript"> placeWatermark()</script><div style="width:100%; position:fixed;"><div align="center" id="watermark" style="position: relative; margin-left:auto; margin-right:auto; z-index:20; width:500px;"><div class="legacybox" style="position: relative;"><h1>Legacy Document<span class=closebutton><a href="javascript:closeWatermark()"><img src="../../../Resources/Images/closebutton.png" width="14" height="14" border="0" align="top" alt="close button"></a></span></h1><p><b>Important:</b><i>Sound Input Manager</i> is deprecated as of Mac OS X v10.5. For new audio development in Mac OS X, use Core Audio. See the <a href="http://developer.apple.com/referencelibrary/MusicAudio/" target="_top">Audio</a> page in the ADC Reference Library.</p></div></div></div><!-- legacy work end --></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>