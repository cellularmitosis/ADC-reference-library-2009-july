<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><TITLE> QuickTime Concepts</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>QuickTime API Documentation</I><P><A target="doc" HREF="xxIntroductions.7.htm">Previous</A> | <A target="doc" HREF="xxIntroductions.7.htm">Chapter Top</A> | <A target="doc" HREF="xxIntroductions.1.htm">Chapter Contents</A> | <A target="doc" HREF="xxIntroductions.9.htm">Next</A> | <!-- QTnavbar end --><H1 CLASS="H2.Heading2"><A NAME="pgfId=25420"> </A>QuickTime Concepts</H1><P CLASS="T0.Text0"><A NAME="pgfId=25421"> </A>To use QuickTime, you need to understand some concepts that are new to most developers of Macintosh applications: movies, media data structures, components, image compression, and time.</P><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=25422"> </A>Movies and Media Data Structures</H2><P CLASS="T0.Text0"><A NAME="pgfId=25424"> </A><A NAME="marker=25423"> </A>A traditional movie, whether stored on film, laser disk, or tape, is a continuous stream of data. A QuickTime movie can be similarly constructed, but it need not be: a QuickTime movie can consist of data in sequences from different forms, such as analog video and CD-ROM. The movie is not the medium; it is the organizing principle.</P><P CLASS="T1.Text1"><A NAME="pgfId=25425"> </A>A QuickTime movie may contain several <B CLASS="bold">tracks.</B> Each track refers to a media that contains references to the movie data, which may be stored as images or sound on hard disks, floppy disks, compact discs, or other devices. The data references constitute the track's <B CLASS="bold">media.</B> Each track has a single media data structure.</P><P CLASS="Note"><A NAME="pgfId=25427"> </A><DIV><IMG SRC="xxIntroductions-4.gif"></DIV><A NAME="15112"> </A>Throughout this book, the term <I CLASS="italics">media</I> is used to refer to a Movie Toolbox data structure that contains information that describes the data for a track in a movie. Note that a media does not contain its data; rather, a media contains a reference to its data. If more than one media is being discussed, the term <I CLASS="italics">media structures</I> is used. </P><P CLASS="T1.Text1"><A NAME="pgfId=25431"> </A>Your application need never work directly with the movie data, as Movie Toolbox functions allow you to manage movie content and characteristics. See the chapter &quot;Movie Toolbox&quot; later in this book for a comprehensive reference to the Movie Toolbox.</P></DIV><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=25432"> </A>Components</H2><P CLASS="T0.Text0"><A NAME="pgfId=25434"> </A><A NAME="marker=25433"> </A>QuickTime provides components so that every application doesn't need to know about all possible types of audio, visual, and storage devices. A <B CLASS="bold">component</B> is a code resource that is registered by the Component Manager. The component's code can be available as a systemwide resource or in a resource that is local to a particular application. Each QuickTime component supports a defined set of features and presents a specified functional interface to its client applications. Applications are thereby isolated from the details of implementing and managing a given technology. For example, you could create a component that supports a certain data encryption algorithm. Applications could then use your algorithm by connecting to your component through the Component Manager, rather than by implementing the algorithm over again. For comprehensive reference to the QuickTime components supplied by Apple, see the book <I CLASS="italics">Inside Macintosh: QuickTime Components</I>.<A NAME="marker=25435"> </A></P></DIV><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=25436"> </A>Image Compression</H2><P CLASS="T0.Text0"><A NAME="pgfId=25438"> </A><A NAME="marker=25437"> </A>Image data requires a large amount of storage space. Storing a single 640-by-480  pixel image in 32-bit color can require as much as 1.2 MB. Similarly, sequences of images, like those that might be contained in a QuickTime movie, demand substantially more storage than single images. This is true even for sequences that consist of fairly small images, because the movie consists of a large number of those images. Consequently, minimizing the storage requirements for image data is an important consideration for any application that works with images or sequences of images.</P><P CLASS="T1.Text1"><A NAME="pgfId=25439"> </A>The Image Compression Manager provides your application with an interface for compressing and decompressing images and sequences of images that is independent of devices and algorithms. See the chapter &quot;Image Compression Manager&quot; later in this book for details.</P></DIV><DIV><H2 CLASS="H3.Heading3"><A NAME="pgfId=25440"> </A>Time</H2><P CLASS="T0.Text0"><A NAME="pgfId=25441"> </A>Image compression is difficult but worthwhile--images, not to mention long sequences of images, take a lot of memory. Time management in QuickTime is equally essential. You must understand time management to understand the QuickTime functions and data structures.</P><P CLASS="T1.Text1"><A NAME="pgfId=25442"> </A>Seemingly simple issues prove interesting--for example, determining the proper length (duration) of a movie. For many movies, the proper duration is the time required to play them in &quot;real&quot; time--that is, a rate in which human actions appear natural, and objects fall to earth accelerating at 32 feet per second per second. But what is the length of a movie that shows spreadsheet data charted over time, or a map of the earth that recapitulates continental drift? Add to this the differing clock speeds of different platforms, and the need to decompress in real time, and time proves, as ever, complex.</P><P CLASS="T1.Text1"><A NAME="pgfId=25443"> </A>To manage these situations, QuickTime defines <B CLASS="bold">time coordinate systems,</B> which anchor movies and their media data structures to a common temporal reality, the second. A time coordinate system contains a <B CLASS="bold">time scale</B> that provides the translation between real time and the time in a movie. Time scales are marked in <B CLASS="bold">time units.</B> The number of units that pass per second quantifies the scale--that is, a time scale of 26 means that 26 units pass per second and each time unit is 1/26 of a second. A time coordinate system also contains a <B CLASS="bold">duration,</B> which is the length of a movie or a media in the number of time units it contains. Particular points in a movie can be identified by a time value, the number of time units elapsed to that point.</P><P CLASS="T1.Text1"><A NAME="pgfId=25444"> </A>Each media has its own time coordinate system, which starts at time 0. The Movie Toolbox maps each type of media data from the movie's time coordinate system to the media's time coordinate system.</P><P CLASS="T1.Text1"><A NAME="pgfId=25445"> </A>Time bases and time coordinate systems are described in the chapter &quot;Movie Toolbox&quot; later in this book.</P></DIV><hr>&#169; 1997 Apple Computer, Inc.<!-- QTnavbar start --><P><I>QuickTime API Documentation</I><P><A target="doc" HREF="xxIntroductions.7.htm">Previous</A> | <A target="doc" HREF="xxIntroductions.7.htm">Chapter Top</A> | <A target="doc" HREF="xxIntroductions.1.htm">Chapter Contents</A> | <A target="doc" HREF="xxIntroductions.9.htm">Next</A> | <!-- QTnavbar end --><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>