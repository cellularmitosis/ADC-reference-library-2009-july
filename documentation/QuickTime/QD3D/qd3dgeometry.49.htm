<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Disks</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=22125"> </A><A NAME="37183"> </A>Creating and Editing Disks</H1><P CLASS="T1.Text1"><A NAME="pgfId=22130"> </A><A NAME="marker=22126"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate disks. See <A HREF="qd3dgeometry.32.htm#12650" CLASS="XRef">&quot;Disks&quot;</A> for the definition of a disk.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22134"> </A>Q3Disk_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=22136"> </A><A NAME="marker=22135"> </A>You can use the <TT CLASS="cv">Q3Disk_New</TT> function to create a new disk.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48517"> </A>TQ3GeometryObject Q3Disk_New (const TQ3DiskData *diskData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48519"> </A><TT CLASS="cv">diskData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22138"> </A>A pointer to a <TT CLASS="cv">TQ3DiskData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22139"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22140"> </A>The <TT CLASS="cv">Q3Disk_New</TT> function returns, as its function result, a new disk having the shape and attributes specified by the <TT CLASS="cv">diskData</TT> parameter. If a new disk could not be created, <TT CLASS="cv">Q3Disk_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22141"> </A>Q3Disk_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=22143"> </A><A NAME="marker=22142"> </A>You can use the <TT CLASS="cv">Q3Disk_Submit</TT> function to submit an immediate disk for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48530"> </A>TQ3Status Q3Disk_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3DiskData *diskData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48532"> </A><TT CLASS="cv">diskData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=24402"> </A>A pointer to a <TT CLASS="cv">TQ3DiskData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48545"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22146"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22147"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22148"> </A>The <TT CLASS="cv">Q3Disk_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate disk whose shape and attribute set are specified by the <TT CLASS="cv">diskData</TT> parameter. The disk is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22149"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=22150"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22151"> </A>Q3Disk_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=22153"> </A><A NAME="marker=22152"> </A>You can use the <TT CLASS="cv">Q3Disk_GetData</TT> function to get the data that defines a disk and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48556"> </A>TQ3Status Q3Disk_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject disk, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DiskData *diskData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48558"> </A><TT CLASS="cv">disk</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22155"> </A>A disk.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48567"> </A><TT CLASS="cv">diskData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22156"> </A>On exit, a pointer to a <TT CLASS="cv">TQ3DiskData</TT> structure that contains information about the disk specified by the <TT CLASS="cv">disk</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22157"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22158"> </A>The <TT CLASS="cv">Q3Disk_GetData</TT> function returns, through the <TT CLASS="cv">diskData</TT> parameter, information about the disk specified by the <TT CLASS="cv">disk</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3DiskData</TT> structure internally; you must call <TT CLASS="cv">Q3Disk_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22162"> </A>Q3Disk_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=22164"> </A><A NAME="marker=22163"> </A>You can use the <TT CLASS="cv">Q3Disk_SetData</TT> function to set the data that defines a disk and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48578"> </A>TQ3Status Q3Disk_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject disk, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3DiskData *diskData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48580"> </A><TT CLASS="cv">disk</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22166"> </A>A disk.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48589"> </A><TT CLASS="cv">diskData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22167"> </A>A pointer to a <TT CLASS="cv">TQ3DiskData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22168"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22169"> </A>The <TT CLASS="cv">Q3Disk_SetData</TT> function sets the data associated with the disk specified by the <TT CLASS="cv">disk</TT> parameter to the data specified by the <TT CLASS="cv">diskData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22170"> </A>Q3Disk_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=22172"> </A><A NAME="marker=22171"> </A>You can use the <TT CLASS="cv">Q3Disk_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3Disk_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48600"> </A>TQ3Status Q3Disk_EmptyData (TQ3DiskData *diskData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48602"> </A><TT CLASS="cv">diskData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22174"> </A>A pointer to a <TT CLASS="cv">TQ3DiskData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22175"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22176"> </A>The <TT CLASS="cv">Q3Disk_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3DiskData</TT> structure pointed to by the <TT CLASS="cv">diskData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3Disk_GetData</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22177"> </A>Q3Disk_GetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=22179"> </A><A NAME="marker=22178"> </A>You can use the <TT CLASS="cv">Q3Disk_GetOrigin</TT> function to get the origin of a disk.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48613"> </A>TQ3Status Q3Disk_GetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject disk, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48615"> </A><TT CLASS="cv">disk</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22181"> </A>A disk.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48624"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22182"> </A>On exit, the origin of the specified disk.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22183"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22184"> </A>The <TT CLASS="cv">Q3Disk_GetOrigin</TT> function returns, in the <TT CLASS="cv">origin</TT> parameter, the origin of the disk specified by the <TT CLASS="cv">disk</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22185"> </A>Q3Disk_SetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=22187"> </A><A NAME="marker=22186"> </A>You can use the <TT CLASS="cv">Q3Disk_SetOrigin</TT> function to set the origin of a disk.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48635"> </A>TQ3Status Q3Disk_SetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject disk, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48637"> </A><TT CLASS="cv">disk</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22189"> </A>A disk.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48646"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22190"> </A>The desired origin of the specified disk.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22191"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22192"> </A>The <TT CLASS="cv">Q3Disk_SetOrigin</TT> function sets the origin of the disk specified by the <TT CLASS="cv">disk</TT> parameter to that specified in the <TT CLASS="cv">origin</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22193"> </A>Q3Disk_GetMajorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22195"> </A><A NAME="marker=22194"> </A>You can use the <TT CLASS="cv">Q3Disk_GetMajorRadius</TT> function to get the major radius of a disk.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48657"> </A>TQ3Status Q3Disk_GetMajorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject disk, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *majorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48659"> </A><TT CLASS="cv">disk</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22197"> </A>A disk.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48668"> </A><TT CLASS="cv">majorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22198"> </A>On exit, the major radius of the specified disk.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22199"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22200"> </A>The <TT CLASS="cv">Q3Disk_GetMajorRadius</TT> function returns, in the <TT CLASS="cv">majorRadius</TT> parameter, the major radius of the disk specified by the <TT CLASS="cv">disk</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22201"> </A>Q3Disk_SetMajorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22203"> </A><A NAME="marker=22202"> </A>You can use the <TT CLASS="cv">Q3Disk_SetMajorRadius</TT> function to set the major radius of a disk.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48679"> </A>TQ3Status Q3Disk_SetMajorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject disk, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *majorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48681"> </A><TT CLASS="cv">disk</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22205"> </A>A disk.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48690"> </A><TT CLASS="cv">majorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22206"> </A>The desired major radius of the specified disk.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22207"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22208"> </A>The <TT CLASS="cv">Q3Disk_SetMajorRadius</TT> function sets the major radius of the disk specified by the <TT CLASS="cv">disk</TT> parameter to that specified in the <TT CLASS="cv">majorRadius</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22209"> </A>Q3Disk_GetMinorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22211"> </A><A NAME="marker=22210"> </A>You can use the <TT CLASS="cv">Q3Disk_GetMinorRadius</TT> function to get the minor radius of a disk.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48701"> </A>TQ3Status Q3Disk_GetMinorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject disk, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *minorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48703"> </A><TT CLASS="cv">disk</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22213"> </A>A disk.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48712"> </A><TT CLASS="cv">minorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22214"> </A>On exit, the minor radius of the specified disk.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22215"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22216"> </A>The <TT CLASS="cv">Q3Disk_GetMinorRadius</TT> function returns, in the <TT CLASS="cv">minorRadius</TT> parameter, the minor radius of the disk specified by the <TT CLASS="cv">disk</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22217"> </A>Q3Disk_SetMinorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22219"> </A><A NAME="marker=22218"> </A>You can use the <TT CLASS="cv">Q3Disk_SetMinorRadius</TT> function to set the minor radius of a disk.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48723"> </A>TQ3Status Q3Disk_SetMinorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject disk, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *minorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48725"> </A><TT CLASS="cv">disk</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22221"> </A>A disk.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48734"> </A><TT CLASS="cv">minorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22222"> </A>The desired minor radius of the specified disk.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22223"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22224"> </A>The <TT CLASS="cv">Q3Disk_SetMinorRadius</TT> function sets the minor radius of the disk specified by the <TT CLASS="cv">disk</TT> parameter to that specified in the <TT CLASS="cv">minorRadius</TT> parameter.<A NAME="marker=36568"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>