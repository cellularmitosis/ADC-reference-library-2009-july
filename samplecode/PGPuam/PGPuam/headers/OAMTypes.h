/* 	File:		OAMTypes.h  	Contains:	OAM Client data types Interfaces.   	Copyright:	© 1995-1996 by Apple Computer, Inc. 				All rights reserved. */#ifndef __OAMTYPES__#define __OAMTYPES__#ifndef __TYPES__#include <Types.h>#endif#if PRAGMA_ALIGN_SUPPORTED#pragma options align=mac68k#endifenum {	kAnyObjectType					= '****'};enum {	kMachineShortID = 0,	kOwnerShortID = 1};/* Object Types & Attribute Signatures*/enum {	kMachine						= 'mach',	kUser							= 'user',	kGroup							= 'grop',	kService						= 'serv'};/* Attribute Signatures */enum {	kBasic							= '----',	kGestalt						= 'gest',	kClassicFS						= 'clfs'};/* Attribute Types */enum {	/* All Objects */	kShortID						= 'shid',	/*	UInt32 */	kName							= 'name',	/*	Str31 */	kInternetName 					= 'inam',	/*	Str31 */	kType							= 'type',	/*	OSType */	/* User Object Attributes */	kPasswordAttribute				= 'pwd ',	/*  must be 8 bytes (zero padded) */	kPasswordLen					= 'pwdL',	/*	UInt8 */	kUserFlags						= 'flgs',	/*	UInt16 */	kUserFailedPasswordAttempts		= 'blog',	/*	UInt16 */	kUserPasswordCreationTime		= 'pwdD',	/*	UInt32 (set by OAM agent) */	kUserNumGroups					= 'nmem', 	/*	UInt16 (read only) */	kPrimaryGroup					= 'pgrp',	/*	UGRec (id and name) */	kDisableDate					= 'disD',	/*	long */	kLastLogin						= 'logD',	/*	long */	kUserComment					= 'cmnt',	/*	Str197 */	kUserPhoneRecord					= '976 ',	/* Service Object Attributes */	kShortStatus					= 'shst',	kDetailedStatus					= 'dtst',	kServiceFlags					= 'flag', 		kServicePSN						= 'psn ',	kServiceFSSpec					= 'fssp',		kServiceType 					= 'styp',	/* Machine Object Attributes */	kGuestProgramLinking			= 'gstl',	/* UInt8 */			kNoGuestAccess					= 'gsta',			kProgramLinking					= 'prgl',			kBoot							= 'boot',			kFileSharingEnabled				= 'fshr',			kApple2Mode						= 'apl2',			kNoSavePassword					= 'spwd',			kMultihoming					= 'mlth',			kOAMGuestInited					= 'gsti',			kOAMUGInited					= 'ugin',			kUGFileVersion					= 'vers',			kServerName						= 'name',			kDefaultShutdown				= 'smin',			kMinPasswordLen					= 'plen',			kMaxBadLogins					= 'bmax',			kMaxPwdChgTime					= 'pwdc',			kLoginDisabledTime				= 'disT',			kUniqueID						= 'uniq',			kMoreSFlags						= 'msfl',		/* long */	kOtherFlags						= 'oflg',		/* long */	kOTPort 						= 'port',	kUAM							= 'uam ',	/* Migration Records */	kFSSerialUGRec = 'fssu',	kUGSetUpRecord = 'ugsu',	kUGLoginMsg   = 'uglm'};/* userFlag bits */				#define kDefaultNewUserSettings	0enum {	bmIACEnabled	= 0x0001,	/* IAC is enabled for this user */	bmLoginEnabled 	= 0x0100,	/* Login is enabled for this user */	bmSuperUser	 	= 0x0200,	/* This user is a superuser */	bmDisableChangePwd	= 0x0400,	/* User CANNOT change password */	bmGetNewPwd		= 0x1000}; /* kShortStatus codes for registered services */enum {	kOAMServiceNotRunning 			= 1,	kOAMServiceRunning 				= 2,	kOAMServiceStartingUp			= 3,	kOAMServiceShutingDown			= 4};enum {	kServiceAutoLaunch 				= 0x00000001,		// Launch on startup	kServiceAutoShutdown 			= 0x00000002		// Shutdown on quit};typedef UInt32		OAMEventCode;typedef OSStatus	OAMStatus;typedef KernelID	OAMCallID;typedef KernelID	OAMSessionID;typedef OSType		OAMType;typedef OSType		OAMObjectType;typedef UInt32		OAMFlags;typedef UInt32		OAMShortObjectSpec, *OAMShortObjectSpecPtr;enum { kOAMOptionFlags = 'oflg', 	kOAMOptionThreadBlockCall = 'tpre', 	kOAMOptionThreadYieldCall = 'tpos', 	kOAMOptionThreadUnblockCall = 'twak'};enum { 	kOAMOptionThreadMgr = 1, kOAMOptionExternalThreadMgr = 2};typedef struct OAMOption OAMOption;struct OAMOption {	OSType option;	UInt32 value;};enum { kOAMLocatorAppletalk };typedef struct OAMServerLocator OAMServerLocator;struct OAMServerLocator{	UInt16 	specSize; // total size of this locator spec struct	UInt32 	protType; // 0 -> appletalk	UInt32	reserved1;	UInt32	reserved2; // probably script	Str63	name;	UInt8 	protSpecific[4]; // variable size protocol specific part};// protTypeenum {	kAppleTalk = 0 };typedef struct OAMServerSpec OAMServerSpec;struct OAMServerSpec{	UInt16 	specSize; // total size of this server spec struct	UInt32 	protType; // 0 -> appletalk	UInt32	reserved1;	UInt32	reserved2;	Str63 	name;	UInt8 	protSpecific[4]; // variable size protocol specific part};// OAM Agent Statusenum{	kOAMAgentNotInstalled = 0,	kOAMAgentNotRunning = 1,	kOAMAgentStartingUp = 2,	kOAMAgentRunning = 3,	kOAMAgentShuttingDown = 4,	kOAMAgentNotRunningATTClose = 5,	kOAMAgentGenesis = 6};// specTypeenum {	kOAMObjectSpecNull = 0,	kOAMObjectSpecByShortID,	kOAMObjectSpecByNameType};typedef struct OAMObjectSpec OAMObjectSpec;struct OAMObjectSpec {	OAMType	objectType;	OAMType specType; // 0->short id, 1->nametype and others...	union {		OAMShortObjectSpec shortID;		Str31 name;		UInt8 otherTypes[4];	} u;};// keyTypeenum { kOAMKeyClearText };typedef struct OAMKey OAMKey;struct OAMKey {	OAMType keyType; // 0->cleartext password	UInt32 keyBufferLen;	UInt8 keyBuffer[8];};typedef struct OAMBufferDescriptor OAMBufferDescriptor;struct OAMBufferDescriptor {	void *buffer;	UInt32 bufferLen;	UInt32 actCount;};typedef struct OAMAttributeDescriptor OAMAttributeDescriptor;struct OAMAttributeDescriptor {	OAMType attributeSignature; // aka creator	OAMType attributeType;	OAMBufferDescriptor bufferDescriptor; 	OSStatus status;	UInt32	offset;	UInt32 	actSize;};// iterationTypeenum { kOAMIterObjects = 1, kOAMIterMembers, kOAMIterMemberships }; // iterationFlagsenum { kOAMIterByIndex = 1, kOAMIterByObject };typedef struct OAMIterationSpec OAMIterationSpec;struct OAMIterationSpec {	OAMType iterationType;	OAMFlags iterationFlags;     OAMType* typeList;	OAMObjectSpec *iterArgument;	UInt32	maxToGet;	union {		OAMObjectSpec *startingObject;		UInt32 startingIndex;		} u;	// set by call	UInt32 totalSize;	UInt32 lastPosition;	Boolean more;};typedef struct OAMParseInfo OAMParseInfo;struct OAMParseInfo {	UInt32 reserved[32];};// optionTypeenum { 	kOAMNotifyStartOption = 'nstt',	kOAMNotifyStopOption = 'nstp', 	kOAMNotifySelfOption = 'nslf'};// notify OAMOptionsFlagsenum { kOAMOptionUserData = 2};// notifyIDenum { 	kOAMNotifyNewObject = 1,	kOAMNotifyDeleteObject, 	kOAMNotifyRenameObject,	kOAMNotifyAttributeSet, 	kOAMNotifyMemberAdd, 	kOAMNotifyMemberRemove,	kOAMNotifyLogin,	kOAMNotifyAll,	kOAMMaxNotify = kOAMNotifyAll//###	kOAMMaxNotify = kOAMNotifyMemberRemove};typedef struct OAMBooleanOption OAMBooleanOption;struct OAMBooleanOption {	UInt16 value;};enum { kOAMNotifyAllObjects = -1 };typedef struct OAMNotifyOption OAMNotifyOption;struct OAMNotifyOption {	UInt32 notifyID;	UInt32 objectID; // -1 -> all objects};typedef struct OAMNotificationSpec OAMNotificationSpec;struct OAMNotificationSpec {	OAMType type;	OAMBufferDescriptor bufferDescriptor; };typedef struct OAMNotification OAMNotification;struct OAMNotification {	UInt16				version; // 0	OAMSessionID		sess;	OAMShortObjectSpec	objectID;	UInt32				notifyID;	// notifyID = kOAMNotifyNewObject | kOAMNotifyAttributeSet | ....		UInt32				userData;	union {		OAMType type;		OAMShortObjectSpec member;		} u;};// OAM Notification Supporttypedef UniversalProcPtr OAMNotifyUPP;typedef void (*OAMNotifyProcPtr)(OAMNotification *notification);#if GENERATINGCFMtypedef UniversalProcPtr OAMNotificationUPP;#elsetypedef ProcPtr OAMNotificationUPP;#endifenum {	uppOAMNotifyProcInfo = kPascalStackBased		 | STACK_ROUTINE_PARAMETER(1, SIZE_CODE(sizeof(Ptr)))	// OAMNotification*};#if GENERATINGCFM#define NewOAMNotificationProc(userRoutine)		\		(OAMNotificationUPP) NewRoutineDescriptor((ProcPtr)(userRoutine), uppOAMNotifyProcInfo, GetCurrentArchitecture())#else#define NewOAMNotificationProc(userRoutine)		\		((OAMNotificationUPP) (userRoutine))#endif#if GENERATINGCFM#define CallOAMNotificationProc(userRoutine, notificationPtr)		\		CallUniversalProc((UniversalProcPtr)(userRoutine), uppOAMNotifyProcInfo, (notificationPtr))#else#define CallOAMNotificationProc(userRoutine, notificationPtr)		\		((OAMNotifyProcPtr)*(userRoutine))((notificationPtr))#endif#if 0// Custom Thread Packagesconst ProcInfoType gBlockProcInfo = kCStackBased | RESULT_SIZE(kFourByteCode);const ProcInfoType gYieldProcInfo = kCStackBased | RESULT_SIZE(kFourByteCode);const ProcInfoType gUnblockProcInfo = kCStackBased | STACK_ROUTINE_PARAMETER(1, kFourByteCode);typedef void (*UnblockProcPtr)(UInt32 info);#if GENERATINGCFM	#define CallBlockProc(userRoutine)		\			CallUniversalProc((UniversalProcPtr)(userRoutine), gBlockProcInfo)	#define CallYieldProc(userRoutine)		\			CallUniversalProc((UniversalProcPtr)(userRoutine), gYieldProcInfo)	#define CallUnblockProc(userRoutine, thread)		\			CallUniversalProc((UniversalProcPtr)(userRoutine), gUnblockProcInfo, (thread))#else	#define CallBlockProc(userRoutine)		\			((ProcPtr)*(userRoutine))()	#define CallYieldProc(userRoutine)		\			((ProcPtr)*(userRoutine))()	#define CallUnblockProc(userRoutine, thread)		\			((UnblockProcPtr)*(userRoutine))((thread))#endif#endif// Error Codesenum {/* General */	kOAMErrInitializationError		= -29300,	kOAMErrParameterError			= -29301,	kOAMErrGeneralError				= -29302,	/* Objects */		kOAMErrObjectNotFound			= -29310,	kOAMErrContainerObjectNotFound	= -29311,	kOAMErrMemberObjectNotFound		= -29312,		kOAMErrDuplicateObject			= -29320,		kOAMErrMaximumObjects			= -29330,	kOAMErrMaximumMemberObjects		= -29331,/* Attributes */	kOAMErrAttributeNotFound		= -29340,	kOAMErrAttributeReadOnly		= -29341,	kOAMErrAttributeReadWriteOnly	= -29342,	kOAMErrAttributeBufferTooSmall	= -29343,	kOAMErrAttributeBufferTooLarge	= -29344,	kOAMErrMaximumAttributes		= -29345,/* Buffers */	kOAMErrBufferTooSmall			= -29350,	kOAMErrBufferTooLarge			= -29351,/* Authentication */	kOAMErrAuthenticationError		= -29360,	kOAMErrAuthenticationInProgress	= -29361,	kOAMErrLoginDisabled			= -29362,	kOAMErrAuthenticationServerError = -29363,	kOAMErrUAMNotFound				= -29364,	kOAMErrAdminDisabled			= -29365,	/* Password */	kOAMErrPasswordNeedsChange		= -29370,	kOAMErrPasswordExpired			= -29371,	kOAMErrPasswordMinimumLen		= -29372,	kOAMErrSamePassword				= -29373,	kOAMErrPasswordChangeDisabled	= -29374,/* Session */				kOAMErrServerNotFound			= -29380,	kOAMErrServerNotInstalled		= -29381,	kOAMErrServerNotReady			= -29382,	kOAMErrNoMachineName			= -29383,	kOAMErrRequestTooLarge			= -29384,	kOAMErrNetworkError				= -29385,	kOAMErrSessionIDError			= -29386,	kOAMErrMaximumSessions			= -29387};enum{	kOAMParseDone = 99};#if PRAGMA_ALIGN_SUPPORTED#pragma options align=reset#endif#endif	/* __OAMTYPES__ */