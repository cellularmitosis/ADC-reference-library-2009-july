<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing Transforms</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3351"> </A>Managing Transforms</H1><P CLASS="T1.Text1"><A NAME="pgfId=3356"> </A><A NAME="marker=3352"> </A>QuickDraw&nbsp;3D provides routines that you can use to manage transforms.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3357"> </A>Q3Transform_GetType</H2><P CLASS="T1.Text1"><A NAME="pgfId=3359"> </A><A NAME="marker=3358"> </A><A NAME="marker=782"> </A>You can use the <TT CLASS="cv">Q3Transform_GetType</TT> function to get the type of a transform object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5819"> </A>TQ3ObjectType Q3Transform_GetType (TQ3TransformObject transform);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5821"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3361"> </A>A transform.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3362"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3363"> </A>The <TT CLASS="cv">Q3Transform_GetType</TT> function returns, as its function result, the type of the transform object specified by the <TT CLASS="cv">transform</TT> parameter. The types of transform objects currently supported by QuickDraw&nbsp;3D are defined by these constants:<A NAME="marker=3367"> </A></P><CODE CLASS="Cv.Code"><A NAME="pgfId=5832"> </A>kQ3TransformTypeMatrix<BR>kQ3TransformTypeQuaternion<BR>kQ3TransformTypeRotate<BR>kQ3TransformTypeRotateAboutAxis<BR>kQ3TransformTypeRotateAboutPoint<BR>kQ3TransformTypeScale<BR>kQ3TransformTypeTranslate<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3369"> </A>If the specified transform object is invalid or is not one of these types, <TT CLASS="cv">Q3Transform_GetType</TT> returns the value <TT CLASS="cv">kQ3ObjectTypeInvalid</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3370"> </A>Q3Transform_GetMatrix</H2><P CLASS="T1.Text1"><A NAME="pgfId=3371"> </A><A NAME="marker=796"> </A>You can use the <TT CLASS="cv">Q3Transform_GetMatrix</TT> function to get the matrix representation of a transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5838"> </A>TQ3Matrix4x4 *Q3Transform_GetMatrix (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5840"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3373"> </A>A transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5849"> </A><TT CLASS="cv">matrix</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3374"> </A>On exit, a pointer to the matrix that represents the transform specified in the <TT CLASS="cv">transform</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3375"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3376"> </A>The <TT CLASS="cv">Q3Transform_GetMatrix</TT> function returns, in the <TT CLASS="cv">matrix</TT> parameter and as its function result, the matrix that represents the transform specified by the <TT CLASS="cv">transform</TT> parameter. The caller is responsible for allocating the memory pointed to by <TT CLASS="cv">matrix</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3377"> </A>Q3Transform_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=3378"> </A><A NAME="marker=805"> </A>You can use the <TT CLASS="cv">Q3Transform_Submit</TT> function to submit a transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5860"> </A>TQ3Status Q3Transform_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5862"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3380"> </A>A transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5875"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3381"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3382"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3383"> </A>The <TT CLASS="cv">Q3Transform_Submit</TT> function pushes the transform specified by the <TT CLASS="cv">transform</TT> parameter onto the view transform stack of the specified view. <TT CLASS="cv">Q3Transform_Submit</TT> returns <TT CLASS="cv">kQ3Success</TT> if the operation succeeds and <TT CLASS="cv">kQ3Failure</TT> otherwise.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=1737"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=1738"> </A>You should call this function only in a submitting loop.<A NAME="marker=3384"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>