<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Manipulating Rotate Transforms</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3436"> </A>Creating and Manipulating Rotate Transforms</H1><P CLASS="T1.Text1"><A NAME="pgfId=3441"> </A><A NAME="marker=3437"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate rotate transforms. A rotate transform rotates an object about the <I CLASS="italics">x</I>, <I CLASS="italics">y</I>, or <I CLASS="italics">z</I> axis by a specified number of radians. You can use macros to convert radians to degrees if you prefer to work with degrees instead of radians. See the chapter <A HREF="qd3dmathfunc.htm#12941" CLASS="XRef">&quot;Mathematical Utilities&quot;</A> for more information.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3445"> </A>Q3RotateTransform_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=3446"> </A><A NAME="marker=885"> </A>You can use the <TT CLASS="cv">Q3RotateTransform_New</TT> function to create a new rotate transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5965"> </A>TQ3TransformObject Q3RotateTransform_New (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RotateTransformData *data);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5967"> </A><TT CLASS="cv">data</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3448"> </A>A pointer to a rotate transform data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3449"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3450"> </A>The <TT CLASS="cv">Q3RotateTransform_New</TT> function returns, as its function result, a reference to a new transform object of type <TT CLASS="cv">kQ3TransformTypeRotate</TT> using the data passed in the <TT CLASS="cv">data</TT> parameter. The data you pass is copied into internal QuickDraw&nbsp;3D data structures. If QuickDraw&nbsp;3D cannot allocate memory for those structures, <TT CLASS="cv">Q3RotateTransform_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3457"> </A>Q3RotateTransform_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=3458"> </A><A NAME="marker=899"> </A>You can use the <TT CLASS="cv">Q3RotateTransform_Submit</TT> function to submit a rotate transform without creating an object or allocating memory.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5978"> </A>TQ3Status Q3RotateTransform_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RotateTransformData *data, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5980"> </A><TT CLASS="cv">data</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3460"> </A>A pointer to a rotate transform data structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5989"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3461"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3462"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3463"> </A>The <TT CLASS="cv">Q3RotateTransform_Submit</TT> function pushes the rotate transform specified by the <TT CLASS="cv">data</TT> parameter onto the view transform stack of the view specified by the <TT CLASS="cv">view</TT> parameter. The function returns <TT CLASS="cv">kQ3Success</TT> if the operation succeeds and <TT CLASS="cv">kQ3Failure</TT> otherwise.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=1761"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=1762"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3464"> </A>Q3RotateTransform_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=3465"> </A><A NAME="marker=908"> </A>You can use the <TT CLASS="cv">Q3RotateTransform_GetData</TT> function to query the private data stored in a rotate transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6000"> </A>TQ3Status Q3RotateTransform_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3RotateTransformData *data);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6002"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3467"> </A>A rotate transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6011"> </A><TT CLASS="cv">data</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3468"> </A>A pointer to a rotate transform data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3469"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3470"> </A>The <TT CLASS="cv">Q3RotateTransform_GetData</TT> function returns, in the <TT CLASS="cv">data</TT> parameter, information about the rotate transform specified by the <TT CLASS="cv">transform</TT> parameter. You should use <TT CLASS="cv">Q3RotateTransform_GetData</TT> only with transforms of type <TT CLASS="cv">kQ3TransformTypeRotate</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3471"> </A>Q3RotateTransform_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=3472"> </A><A NAME="marker=917"> </A>You can use the <TT CLASS="cv">Q3RotateTransform_SetData</TT> function to set new private data for a rotate transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6022"> </A>TQ3Status Q3RotateTransform_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3RotateTransformData *data);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6024"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3474"> </A>A rotate transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6033"> </A><TT CLASS="cv">data</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3475"> </A>A pointer to a rotate transform data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3476"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3477"> </A>The <TT CLASS="cv">Q3RotateTransform_SetData</TT> function sets the rotate transform specified by the <TT CLASS="cv">transform</TT> parameter to the data passed in the <TT CLASS="cv">data</TT> parameter. You should use <TT CLASS="cv">Q3RotateTransform_SetData</TT> only with transforms of type <TT CLASS="cv">kQ3TransformTypeRotate</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3478"> </A>Q3RotateTransform_GetAxis</H2><P CLASS="T1.Text1"><A NAME="pgfId=3479"> </A><A NAME="marker=926"> </A>You can use the <TT CLASS="cv">Q3RotateTransform_GetAxis</TT> function to get the axis of a rotate transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6044"> </A>TQ3Status Q3RotateTransform_GetAxis (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Axis *axis);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6046"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3481"> </A>A rotate transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6055"> </A><TT CLASS="cv">axis</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3482"> </A>On exit, the axis of the specified rotate transform.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3483"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3484"> </A>The <TT CLASS="cv">Q3RotateTransform_GetAxis</TT> function returns, in the <TT CLASS="cv">axis</TT> parameter, the current axis of rotation of the rotate transform specified by the <TT CLASS="cv">transform</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3485"> </A>Q3RotateTransform_SetAxis</H2><P CLASS="T1.Text1"><A NAME="pgfId=3486"> </A><A NAME="marker=935"> </A>You can use the <TT CLASS="cv">Q3RotateTransform_SetAxis</TT> function to set the axis of a rotate transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6066"> </A>TQ3Status Q3RotateTransform_SetAxis (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Axis axis);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6068"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3488"> </A>A rotate transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6077"> </A><TT CLASS="cv">axis</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3489"> </A>The desired axis of the specified rotate transform.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3490"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3491"> </A>The <TT CLASS="cv">Q3RotateTransform_SetAxis</TT> function sets the axis of rotation for the rotate transform specified by the <TT CLASS="cv">transform</TT> parameter to the value passed in the <TT CLASS="cv">axis</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3492"> </A>Q3RotateTransform_GetAngle</H2><P CLASS="T1.Text1"><A NAME="pgfId=3493"> </A><A NAME="marker=944"> </A>You can use the <TT CLASS="cv">Q3RotateTransform_GetAngle</TT> function to get the angle of a rotate transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6088"> </A>TQ3Status Q3RotateTransform_GetAngle (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float *radians);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6090"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3495"> </A>A rotate transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6099"> </A><TT CLASS="cv">radians</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3496"> </A>On exit, the angle, in radians, of the specified rotate transform.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3497"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3498"> </A>The <TT CLASS="cv">Q3RotateTransform_GetAngle</TT> function returns, in the <TT CLASS="cv">radians</TT> parameter, the current angle of rotation (in radians) of the rotate transform specified by the <TT CLASS="cv">transform</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3499"> </A>Q3RotateTransform_SetAngle</H2><P CLASS="T1.Text1"><A NAME="pgfId=3500"> </A><A NAME="marker=953"> </A>You can use the <TT CLASS="cv">Q3RotateTransform_SetAngle</TT> function to set the angle of a rotate transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6110"> </A>TQ3Status Q3RotateTransform_SetAngle (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float radians);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6112"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3502"> </A>A rotate transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6121"> </A><TT CLASS="cv">radians</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3503"> </A>The desired angle, in radians, of the specified rotate transform.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3504"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3505"> </A>The <TT CLASS="cv">Q3RotateTransform_SetAngle</TT> function sets the angle of rotation for the rotate transform specified by the <TT CLASS="cv">transform</TT> parameter to the value passed in the <TT CLASS="cv">radians</TT> parameter.<A NAME="marker=1591"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>