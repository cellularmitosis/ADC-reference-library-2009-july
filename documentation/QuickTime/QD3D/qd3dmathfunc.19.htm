<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Setting Up Transformation Matrices</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3966"> </A>Setting Up Transformation Matrices</H1><P CLASS="T1.Text1"><A NAME="pgfId=3971"> </A><A NAME="marker=3967"> </A>QuickDraw&nbsp;3D provides routines that you can use to configure matrices to be used as geometric transformations. You must already have allocated the memory for a matrix before calling one of these routines.</P><P CLASS="T1.Text1"><A NAME="pgfId=3972"> </A>All functions operating on 3-by-3 matrices assume that the resulting transform matrices are to be used to transform only homogeneous two-dimensional data types (such as <TT CLASS="cv">TQ3RationalPoint3D</TT>). Similarly, all functions operating on 4-by-4 matrices assume that the resulting transform matrices are to be used to transform only homogeneous three-dimensional data types (such as <TT CLASS="cv">TQ3RationalPoint4D</TT>).</P><P CLASS="T1.Text1"><A NAME="pgfId=3973"> </A>You specify an angle (for example, for <TT CLASS="cv">Q3Matrix3x3_SetRotateAboutPoint</TT>) by passing a value that is interpreted in radians. If you prefer to use degrees, QuickDraw&nbsp;3D provides C language macros that convert radians into degrees.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3977"> </A>Q3Matrix3x3_SetTranslate</H2><P CLASS="T1.Text1"><A NAME="pgfId=3979"> </A><A NAME="marker=3978"> </A><A NAME="marker=1696"> </A>You can use the <TT CLASS="cv">Q3Matrix3x3_SetTranslate</TT> function to configure a 3-by-3 translation transformation matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9955"> </A>TQ3Matrix3x3 *Q3Matrix3x3_SetTranslate (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix3x3 *matrix3x3, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float xTrans, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float yTrans);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9957"> </A><TT CLASS="cv">matrix3x3</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3981"> </A>A 3-by-3 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9966"> </A><TT CLASS="cv">xTrans</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3982"> </A>The desired amount of translation along the <I CLASS="italics">x</I> coordinate axis.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9975"> </A><TT CLASS="cv">yTrans</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3983"> </A>The desired amount of translation along the <I CLASS="italics">y</I> coordinate axis.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3984"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3985"> </A>The <TT CLASS="cv">Q3Matrix3x3_SetTranslate</TT> function returns, as its function result and in the <TT CLASS="cv">matrix3x3</TT> parameter, a transformation matrix that translates an object by the amount <TT CLASS="cv">xTrans</TT> along the <I CLASS="italics">x</I> coordinate axis and by the amount <TT CLASS="cv">yTrans</TT> along the <I CLASS="italics">y</I> coordinate axis.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3986"> </A>Q3Matrix3x3_SetScale</H2><P CLASS="T1.Text1"><A NAME="pgfId=3988"> </A><A NAME="marker=3987"> </A><A NAME="marker=1707"> </A>You can use the <TT CLASS="cv">Q3Matrix3x3_SetScale</TT> function to configure a 3-by-3 scaling transformation matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=9990"> </A>TQ3Matrix3x3 *Q3Matrix3x3_SetScale (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix3x3 *matrix3x3, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float xScale, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float yScale);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=9992"> </A><TT CLASS="cv">matrix3x3</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3990"> </A>A 3-by-3 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10001"> </A><TT CLASS="cv">xScale</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3991"> </A>The desired amount of scaling along the <I CLASS="italics">x</I> coordinate axis.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10010"> </A><TT CLASS="cv">yScale</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3992"> </A>The desired amount of scaling along the <I CLASS="italics">y</I> coordinate axis.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3993"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3994"> </A>The <TT CLASS="cv">Q3Matrix3x3_SetScale</TT> function returns, as its function result and in the <TT CLASS="cv">matrix3x3</TT> parameter, a scaling matrix that scales an object by the amount <TT CLASS="cv">xScale</TT> along the <I CLASS="italics">x</I> coordinate axis and by the amount <TT CLASS="cv">yScale</TT> along the <I CLASS="italics">y</I> coordinate axis.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3995"> </A>Q3Matrix3x3_SetRotateAboutPoint</H2><P CLASS="T1.Text1"><A NAME="pgfId=3997"> </A><A NAME="marker=3996"> </A><A NAME="marker=1718"> </A>You can use the <TT CLASS="cv">Q3Matrix3x3_SetRotateAboutPoint</TT> function to configure a 3-by-3 rotation transformation matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10021"> </A>TQ3Matrix3x3 *Q3Matrix3x3_SetRotateAboutPoint (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix3x3 *matrix3x3, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point2D *origin, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float angle);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10023"> </A><TT CLASS="cv">matrix3x3</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3999"> </A>A 3-by-3 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10032"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4000"> </A>The desired origin of rotation.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10041"> </A><TT CLASS="cv">angle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4001"> </A>The desired angle of rotation, in radians.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4002"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4003"> </A>The <TT CLASS="cv">Q3Matrix3x3_SetRotateAboutPoint</TT> function returns, as its function result and in the <TT CLASS="cv">matrix3x3</TT> parameter, a rotation matrix that rotates an object by the angle <TT CLASS="cv">angle</TT> around the point <TT CLASS="cv">origin</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4004"> </A>Q3Matrix4x4_SetTranslate</H2><P CLASS="T1.Text1"><A NAME="pgfId=4006"> </A><A NAME="marker=4005"> </A><A NAME="marker=1729"> </A>You can use the <TT CLASS="cv">Q3Matrix4x4_SetTranslate</TT> function to configure a 4-by-4 translation transformation matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10052"> </A>TQ3Matrix4x4 *Q3Matrix4x4_SetTranslate (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix4x4, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float xTrans, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float yTrans, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float zTrans);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10054"> </A><TT CLASS="cv">matrix4x4</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4008"> </A>A 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10063"> </A><TT CLASS="cv">xTrans</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4009"> </A>The desired amount of translation along the <I CLASS="italics">x</I> coordinate axis.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10072"> </A><TT CLASS="cv">yTrans</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4010"> </A>The desired amount of translation along the <I CLASS="italics">y</I> coordinate axis.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10081"> </A><TT CLASS="cv">zTrans</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4011"> </A>The desired amount of translation along the <I CLASS="italics">z</I> coordinate axis.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4012"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4013"> </A>The <TT CLASS="cv">Q3Matrix4x4_SetTranslate</TT> function returns, as its function result and in the <TT CLASS="cv">matrix4x4</TT> parameter, a transformation matrix that translates an object by the amount <TT CLASS="cv">xTrans</TT> along the <I CLASS="italics">x</I> coordinate axis, by the amount <TT CLASS="cv">yTrans</TT> along the <I CLASS="italics">y</I> coordinate axis, and by the amount <TT CLASS="cv">zTrans</TT> along the <I CLASS="italics">z</I> coordinate axis.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4014"> </A>Q3Matrix4x4_SetScale</H2><P CLASS="T1.Text1"><A NAME="pgfId=4016"> </A><A NAME="marker=4015"> </A><A NAME="marker=1741"> </A>You can use the <TT CLASS="cv">Q3Matrix4x4_SetScale</TT> function to configure a 4-by-4 scaling transformation matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10092"> </A>TQ3Matrix4x4 *Q3Matrix4x4_SetScale (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix4x4, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float xScale, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float yScale, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float zScale);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10094"> </A><TT CLASS="cv">matrix4x4</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4018"> </A>A 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10103"> </A><TT CLASS="cv">xScale</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4019"> </A>The desired amount of scaling along the <I CLASS="italics">x</I> coordinate axis.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10112"> </A><TT CLASS="cv">yScale</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4020"> </A>The desired amount of scaling along the <I CLASS="italics">y</I> coordinate axis.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10121"> </A><TT CLASS="cv">zScale</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4021"> </A>The desired amount of scaling along the <I CLASS="italics">z</I> coordinate axis.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4022"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4023"> </A>The <TT CLASS="cv">Q3Matrix4x4_SetScale</TT> function returns, as its function result and in the <TT CLASS="cv">matrix4x4</TT> parameter, a scaling matrix that scales an object by the amount <TT CLASS="cv">xScale</TT> along the <I CLASS="italics">x</I> coordinate axis, by the amount <TT CLASS="cv">yScale</TT> along the <I CLASS="italics">y</I> coordinate axis, and by the amount <TT CLASS="cv">zScale</TT> along the <I CLASS="italics">z</I> coordinate axis.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4024"> </A>Q3Matrix4x4_SetRotateAboutPoint</H2><P CLASS="T1.Text1"><A NAME="pgfId=4026"> </A><A NAME="marker=4025"> </A><A NAME="marker=1753"> </A>You can use the <TT CLASS="cv">Q3Matrix4x4_SetRotateAboutPoint</TT> function to configure a 4-by-4 rotation transformation matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10132"> </A>TQ3Matrix4x4 *Q3Matrix4x4_SetRotateAboutPoint (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix4x4, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *origin, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float xAngle, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float yAngle, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float zAngle);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10134"> </A><TT CLASS="cv">matrix4x4</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4028"> </A>A 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10143"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4029"> </A>The desired origin of rotation.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10152"> </A><TT CLASS="cv">xAngle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4030"> </A>The desired angle of rotation around the <I CLASS="italics">x</I> component of <TT CLASS="cv">origin</TT>, in radians.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10161"> </A><TT CLASS="cv">yAngle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4031"> </A>The desired angle of rotation around the <I CLASS="italics">y</I> component of <TT CLASS="cv">origin</TT>, in radians.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10170"> </A><TT CLASS="cv">zAngle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4032"> </A>The desired angle of rotation around the <I CLASS="italics">z</I> component of <TT CLASS="cv">origin</TT>, in radians.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4033"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4034"> </A>The <TT CLASS="cv">Q3Matrix4x4_SetRotateAboutPoint</TT> function returns, as its function result and in the <TT CLASS="cv">matrix4x4</TT> parameter, a rotation matrix that rotates an object by the specified angle around the point <TT CLASS="cv">origin</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4035"> </A>Q3Matrix4x4_SetRotateAboutAxis</H2><P CLASS="T1.Text1"><A NAME="pgfId=4037"> </A><A NAME="marker=4036"> </A><A NAME="marker=1766"> </A>You can use the <TT CLASS="cv">Q3Matrix4x4_SetRotateAboutAxis</TT> function to configure a 4-by-4 rotate-about-axis transformation matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10181"> </A>TQ3Matrix4x4 *Q3Matrix4x4_SetRotateAboutAxis (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix4x4, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *origin, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *orientation, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float angle);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10183"> </A><TT CLASS="cv">matrix4x4</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4039"> </A>A 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10192"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4040"> </A>The desired origin of rotation.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10201"> </A><TT CLASS="cv">orientation</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4041"> </A>The desired orientation of the axis of rotation.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10210"> </A><TT CLASS="cv">angle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4042"> </A>The desired angle of rotation, in radians.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4043"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4044"> </A>The <TT CLASS="cv">Q3Matrix4x4_SetRotateAboutAxis</TT> function returns, as its function result and in the <TT CLASS="cv">matrix4x4</TT> parameter, an rotate-about-axis matrix that rotates an object by the angle <TT CLASS="cv">angle</TT> around the axis determined by the point <TT CLASS="cv">origin</TT> and the orientation <TT CLASS="cv">orientation</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4045"> </A>Q3Matrix4x4_SetRotate_X</H2><P CLASS="T1.Text1"><A NAME="pgfId=4046"> </A><A NAME="marker=1777"> </A>You can use the <TT CLASS="cv">Q3Matrix4x4_SetRotate_X</TT> function to configure a 4-by-4 transformation matrix that rotates objects around the <I CLASS="italics">x</I> axis.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10221"> </A>TQ3Matrix4x4 *Q3Matrix4x4_SetRotate_X (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix4x4, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float angle);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10223"> </A><TT CLASS="cv">matrix4x4</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4048"> </A>A 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10232"> </A><TT CLASS="cv">angle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4049"> </A>The desired angle of rotation around the <I CLASS="italics">x</I> coordinate axis, in radians.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4050"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4051"> </A>The <TT CLASS="cv">Q3Matrix4x4_SetRotate_X</TT> function returns, as its function result and in the <TT CLASS="cv">matrix4x4</TT> parameter, a rotational matrix that rotates an object by the angle <TT CLASS="cv">angle</TT> around the <I CLASS="italics">x</I> axis.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4052"> </A>Q3Matrix4x4_SetRotate_Y</H2><P CLASS="T1.Text1"><A NAME="pgfId=4053"> </A><A NAME="marker=1786"> </A>You can use the <TT CLASS="cv">Q3Matrix4x4_SetRotate_Y</TT> function to configure a 4-by-4 transformation matrix that rotates objects around the <I CLASS="italics">y</I> axis.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10243"> </A>TQ3Matrix4x4 *Q3Matrix4x4_SetRotate_Y (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix4x4, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float angle);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10245"> </A><TT CLASS="cv">matrix4x4</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4055"> </A>A 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10254"> </A><TT CLASS="cv">angle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4056"> </A>The desired angle of rotation around the <I CLASS="italics">y</I> coordinate axis, in radians.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4057"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4058"> </A>The <TT CLASS="cv">Q3Matrix4x4_SetRotate_Y</TT> function returns, as its function result and in the <TT CLASS="cv">matrix4x4</TT> parameter, a rotational matrix that rotates an object by the angle <TT CLASS="cv">angle</TT> around the <I CLASS="italics">y</I> axis.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4059"> </A>Q3Matrix4x4_SetRotate_Z</H2><P CLASS="T1.Text1"><A NAME="pgfId=4060"> </A><A NAME="marker=1795"> </A>You can use the <TT CLASS="cv">Q3Matrix4x4_SetRotate_Z</TT> function to configure a 4-by-4 transformation matrix that rotates objects around the <I CLASS="italics">z</I> axis.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10265"> </A>TQ3Matrix4x4 *Q3Matrix4x4_SetRotate_Z (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix4x4, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float angle);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10267"> </A><TT CLASS="cv">matrix4x4</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4062"> </A>A 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10276"> </A><TT CLASS="cv">angle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4063"> </A>The desired angle of rotation around the <I CLASS="italics">z</I> coordinate axis, in radians.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4064"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4065"> </A>The <TT CLASS="cv">Q3Matrix4x4_SetRotate_Z</TT> function returns, as its function result and in the <TT CLASS="cv">matrix4x4</TT> parameter, a rotational matrix that rotates an object by the angle <TT CLASS="cv">angle</TT> around the <I CLASS="italics">z</I> axis.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4066"> </A>Q3Matrix4x4_SetRotate_XYZ</H2><P CLASS="T1.Text1"><A NAME="pgfId=4067"> </A><A NAME="marker=1804"> </A>You can use the <TT CLASS="cv">Q3Matrix4x4_SetRotate_XYZ</TT> function to configure a 4-by-4 transformation matrix that rotates objects around all three coordinate axes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10291"> </A>TQ3Matrix4x4 *Q3Matrix4x4_SetRotate_XYZ (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix4x4, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float xAngle, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float yAngle, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float zAngle);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10293"> </A><TT CLASS="cv">matrix4x4</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4069"> </A>A 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10302"> </A><TT CLASS="cv">xAngle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4070"> </A>The desired angle of rotation around the <I CLASS="italics">x</I> axis, in radians.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10311"> </A><TT CLASS="cv">yAngle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4071"> </A>The desired angle of rotation around the <I CLASS="italics">y</I> axis, in radians.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10320"> </A><TT CLASS="cv">zAngle</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4072"> </A>The desired angle of rotation around the <I CLASS="italics">z</I> axis, in radians.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4073"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4074"> </A>The <TT CLASS="cv">Q3Matrix4x4_SetRotate_XYZ</TT> function returns, as its function result and in the <TT CLASS="cv">matrix4x4</TT> parameter, a rotational matrix that rotates an object by the specified angles around the <I CLASS="italics">x</I>, <I CLASS="italics">y</I>, and <I CLASS="italics">z</I> axes.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4075"> </A>Q3Matrix4x4_SetRotateVectorToVector</H2><P CLASS="T1.Text1"><A NAME="pgfId=4076"> </A><A NAME="marker=1815"> </A>You can use the <TT CLASS="cv">Q3Matrix4x4_SetRotateVectorToVector</TT> function to configure a 4-by-4 transformation matrix that rotates objects around the origin in such a way that a transformed vector matches a given vector.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10331"> </A>TQ3Matrix4x4 *Q3Matrix4x4_SetRotateVectorToVector (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix4x4, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *v1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *v2);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10333"> </A><TT CLASS="cv">matrix4x4</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4078"> </A>A 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10342"> </A><TT CLASS="cv">v1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4079"> </A>A three-dimensional vector.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10351"> </A><TT CLASS="cv">v2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4080"> </A>A three-dimensional vector.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4081"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4082"> </A>The <TT CLASS="cv">Q3Matrix4x4_SetRotateVectorToVector</TT> function returns, as its function result and in the <TT CLASS="cv">matrix4x4</TT> parameter, a rotational matrix that rotates objects around the origin in such a way that the transformed vector <TT CLASS="cv">v1</TT> matches the vector <TT CLASS="cv">v2</TT>. Both <TT CLASS="cv">v1</TT> and <TT CLASS="cv">v2</TT> should be normalized.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4083"> </A>Q3Matrix4x4_SetQuaternion</H2><P CLASS="T1.Text1"><A NAME="pgfId=4085"> </A><A NAME="marker=4084"> </A><A NAME="marker=1826"> </A>You can use the <TT CLASS="cv">Q3Matrix4x4_SetQuaternion</TT> function to configure a 4-by-4 quaternion transformation matrix.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=10362"> </A>TQ3Matrix4x4 *Q3Matrix4x4_SetQuaternion (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Quaternion *quaternion);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10364"> </A><TT CLASS="cv">matrix</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4087"> </A>A 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=10373"> </A><TT CLASS="cv">quaternion</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4088"> </A>A quaternion.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4089"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4090"> </A>The <TT CLASS="cv">Q3Matrix4x4_SetQuaternion</TT> function returns, as its function result and in the <TT CLASS="cv">matrix</TT> parameter, a 4-by-4 matrix that represents the quaternion specified by the <TT CLASS="cv">quaternion</TT> parameter.<A NAME="marker=4091"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>