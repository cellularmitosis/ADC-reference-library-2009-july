/*	File:		MoreDialogs.h	Contains:		Written by:	Pete Gontier	Copyright:	Copyright (c) 1998 Apple Computer, Inc., All Rights Reserved.				You may incorporate this Apple sample source code into your program(s) without				restriction. This Apple sample source code has been provided "AS IS" and the				responsibility for its operation is yours. You are not permitted to redistribute				this Apple sample source code as "Apple sample source code" after having made				changes. If you're going to re-distribute the source, we require that you make				it clear in the source that the code was descended from Apple sample source				code, but that you've made changes.	Change History (most recent first):         <8>    22/12/00    Quinn   Fixed bug I introduced in the prototype of                                    MoreAppendDialogItemList.         <7>    22/12/00    Quinn   Added many new APIs.         <6>     20/3/00    Quinn   Fix prototype for GetDialogItemString.         <5>     1/22/99    PCG     TARGET_CARBON         <4>      1/7/99    PCG     add ToggleDialogItemCheckBox         <3>      1/7/99    PCG     add MoreAppendDialogItemList         <2>    11/11/98    PCG     fix headers         <1>    11/10/98    PCG     first big re-org at behest of Quinn	Old Change History (most recent first):         <7>    10/11/98    Quinn   Convert "MorePrefix.h" to "MoreSetup.h".         <6>      9/9/98    PCG     re-work import and export pragmas         <5>      9/1/98    PCG     Universal Headers 3.2         <4>     7/24/98    PCG	    coddle linker (C++, CFM-68K)         <3>     7/24/98    PCG	    add MoveableModalDialog         <2>     7/24/98    PCG	    eliminate dependency on 'qd'         <1>     6/16/98    PCG     initial checkin*/#pragma once#include "MoreSetup.h"#include <Dialogs.h>enum { kDialogItemIndexNone = -1 };#ifdef __cplusplus	extern "C" {#endif#pragma import on // for clients#pragma export on // for building a library#if !ACCESSOR_CALLS_ARE_FUNCTIONS	#define GetDialogPort(dialog) ((CGrafPtr) (dialog))#endif#if UNIVERSAL_INTERFACES_VERSION < 0x0320	extern pascal OSErr AppendDialogItemList (DialogRef dialog, SInt16 ditlID, DITLMethod method)		THREEWORDINLINE (0x303C, 0x0412, 0xAA68);#endif // UNIVERSAL_INTERFACES_VERSION < 0x0320pascal DialogRef	MoreGetNewDialog			(SInt16 dlogResID);pascal OSErr		MoreAppendDialogItemList	(DialogRef, SInt16, DITLMethod);pascal void			SaferShortenDITL			(DialogRef, DialogItemIndex);pascal void			SelectAllDialogItemText		(DialogRef, DialogItemIndex);pascal void			MoveableModalDialog			(ModalFilterUPP, DialogItemIndex *itemHit);extern pascal ControlRef GetDialogControlRef(DialogRef dlg, DialogItemIndex item);	// Returns a control for the specified dialog item. 	// Uses GetDialogItemAsControl if appropriate, otherwise just 	// calls GetDialogItemHandle.	extern pascal Handle 	 GetDialogItemHandle   (DialogRef dlg, DialogItemIndex item);	// Returns the handle for the dialog item, as returned by 	// GetDialogItem.  Different from GetDialogControlRef in the 	// case of text based dialog items (static text and edit text) 	// when embedding is turned on.  In that case, GetDialogControlRef 	// will return a control handle for the text control, but this 	// routine will return a handle containing the itemÕs text.// Setters and getters for the various dialog item attributes.extern pascal void 		SetDialogItemHandle		  (DialogRef dlg, DialogItemIndex item, Handle itemH);extern pascal void 		SetDialogItemUserItemProc (DialogRef dlg, DialogItemIndex item, UserItemUPP userItemUPP);	// Wrapper for SetDialogItemHandle that does the user item cast for you.	// Long term this should also include smarter asserts.extern pascal void 		GetDialogItemKind		  (DialogRef dlg, DialogItemIndex item, DialogItemType *kind);extern pascal void 		SetDialogItemKind		  (DialogRef dlg, DialogItemIndex item, DialogItemType  kind);extern pascal void 		GetDialogItemRect		  (DialogRef dlg, DialogItemIndex item,       Rect *itemRect);extern pascal void 		SetDialogItemRect		  (DialogRef dlg, DialogItemIndex item, const Rect *itemRect);extern pascal void		GetDialogItemString		  (DialogRef dlg, DialogItemIndex item,         Str255 str);extern pascal void		SetDialogItemString		  (DialogRef dlg, DialogItemIndex item, ConstStringPtr str);	// nil is legal for str; equivalent to the empty string.// Setters and getters for control attributes where those controls are // contained in a dialog.extern pascal SInt16 	GetDialogControlValue     (DialogRef dlg, DialogItemIndex item);extern pascal void 		SetDialogControlValue     (DialogRef dlg, DialogItemIndex item, SInt16 value);extern pascal SInt16 	GetDialogControlMinimum   (DialogRef dlg, DialogItemIndex item);extern pascal void 		SetDialogControlMinimum   (DialogRef dlg, DialogItemIndex item, SInt16 min);extern pascal SInt16 	GetDialogControlMaximum   (DialogRef dlg, DialogItemIndex item);extern pascal void 		SetDialogControlMaximum   (DialogRef dlg, DialogItemIndex item, SInt16 max);extern pascal Boolean 	GetDialogControlBoolean	  (DialogRef dlg, DialogItemIndex item);extern pascal void 		SetDialogControlBoolean   (DialogRef dlg, DialogItemIndex item, Boolean value);extern pascal void 		ToggleDialogControlBoolean(DialogRef dlg, DialogItemIndex item);extern pascal Boolean 	GetDialogControlEnable    (DialogRef dlg, DialogItemIndex item);extern pascal void 		SetDialogControlEnable    (DialogRef dlg, DialogItemIndex item, Boolean enable);pascal Boolean		    ToggleDialogCheckBox	  (DialogRef, DialogItemIndex);	// Another implementation of ToggleDialogControlBoolean.  I havenÕt 	// replaced one with the other because a) the implementations are 	// subtley different, and b) I canÕt be bothered fixing the existing 	// clients of this routine.extern pascal void		InvalDialogItem			  (DialogRef dlg, DialogItemIndex item);extern pascal void		SetupStandardDialogItems  (DialogRef dlg, DialogItemIndex defaultItem, DialogItemIndex cancelItem);	// Pass 0 in the item parameters if your dialog doesnÕt have 	// that type of item.// The following filter routines are exported as both UPP and routines because// in some places (such as filter functions that are layered// on top of these default filter functions) you need to call them directly.// These are the filter routines themselves.  We have two subtley different // variants, one for modal dialogs and the other for alerts.  All filters // assume that the default button is item 1 (kStdOkItemIndex), the Cancel // button (if present) is item 2 (kStdCancelItemIndex), and the Discard button // (if present) is item 3 (kStdDiscardItemIndex).enum {	kStdDiscardItemIndex = 3};extern pascal Boolean	OKModalFilter(DialogRef dlg, EventRecord *event, DialogItemIndex *item);extern pascal Boolean	OKCancelModalFilter(DialogRef dlg, EventRecord *event, DialogItemIndex *item);extern pascal Boolean	OKCancelDiscardModalFilter(DialogRef dlg, EventRecord *event, DialogItemIndex *item);extern pascal Boolean	OKAlertFilter(DialogRef dlg, EventRecord *event, DialogItemIndex *item);extern pascal Boolean	OKCancelAlertFilter(DialogRef dlg, EventRecord *event, DialogItemIndex *item);extern pascal Boolean	OKCancelDiscardAlertFilter(DialogRef dlg, EventRecord *event, DialogItemIndex *item);// These are the UPP getters for the filter routines.  They are implemented // as getters rather than global variables because that way we can avoid have // an initialisation routine for this module.extern pascal ModalFilterUPP GetOKModalFilterUPP(void);extern pascal ModalFilterUPP GetOKCancelModalFilterUPP(void);extern pascal ModalFilterUPP GetOKCancelDiscardModalFilterUPP(void);extern pascal ModalFilterUPP GetOKAlertFilterUPP(void);extern pascal ModalFilterUPP GetOKCancelAlertFilterUPP(void);extern pascal ModalFilterUPP GetOKCancelDiscardAlertFilterUPP(void);// The following helper routines are required by the various filters, // and are exported for your convenience.extern pascal Boolean	DialogItemHidden(DialogRef dlg, DialogItemIndex item);	// Returns true if the item is hidden.extern pascal void 		FlashDialogControl(DialogRef dlg, DialogItemIndex item);	// Flashes the dialog item control (typically a button).extern pascal void		DialogShiftTab(DialogRef dlg);	// Performs shift-Tab functionality.#pragma import reset // for clients#pragma export reset // for building a library#if !TARGET_CARBON#	define SetPortDialogPort(x)		SetPort(x)#	define GetDialogFromWindow(x)	(x)#endif#ifdef __cplusplus	}#endif