{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fmodern\fcharset77 Courier;
\f3\froman\fcharset77 Times-Bold;\f4\fmodern\fcharset77 Courier-Bold;}
{\colortbl;\red255\green255\blue255;}
\vieww14240\viewh14600\viewkind0
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\ql\qnatural

\f0\fs24 \cf0 \

\f1\b\fs36 Monochrome Image\

\f0\b0\fs24 \
This example shows how to convert a color RGB image to monochrome, using the generally-accepted NTSC color formula.\
\
The meat of this example is in the file "
\f2 NSImage_Monochrome.m
\f0 ", where I've implemented a category of NSImage to create a monochrome version of any image.\
\
The method: 
\f3\b\fs28 -
\f4\fs24 monochromeImage
\f3\fs28 : 
\f0\b0\fs24 returns a  new image which is created by multiplying the RGB values for each pixel of the receiver by the appropriate weighting factor.  This is the most general way to do it, but certainly not the most efficient.  NSReadPixel() is a rather expensive operation.\
\
Other code of some interest is found in the Controller class.  The methods 
\f4\b -saveMonochromeImage:
\f0\b0  and
\f4\b  \
-savePanelDidEnd:returnCode:contextInfo: 
\f0\b0 show how a typical cocoa app shows the "save file" sheet and writes out the results.\
\
}