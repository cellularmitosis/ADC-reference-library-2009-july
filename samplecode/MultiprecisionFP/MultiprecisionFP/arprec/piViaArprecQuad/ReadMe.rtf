{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fmodern\fcharset77 Courier;
\f3\fmodern\fcharset77 Courier-Bold;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww14940\viewh14020\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs32 \cf0 piViaArprecQuad - Calculating 'pi' with the ARPREC Quadrature Package\

\f1\b0\fs24 \

\fs28 This program illustrates how to use the the ARPREC multi-precision floating point library, and its accompanying Quadrature package, to calculate 'pi', the ratio of a circle's circumference to its diameter, to an arbitrary precision. \
\

\f0\b \ul Obtaining and installing ARPREC\
\

\f1\b0 \ulnone To build and run this program, you must first install ARPREC on your machine. The source for ARPREC can be downloaded from here:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\fi560\ql\qnatural\pardirnatural

\f2 \cf0 http://crd.lbl.gov/~dhbailey/mpdist/index.html \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1 \cf0 \
Download the tarball referenced in the section entitled \'d3ARPREC\'d3. Unpack it by double-clicking on the downloaded package. Open a Terminal window, cd to the directory resulting from double-clicking the downloaded package and do the following. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\fi560\ql\qnatural\pardirnatural

\f2 \cf0 % setenv CXX "/usr/bin/g++"\
% ./configure \
% make \
% make check \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs28 \cf0 Of course if any errors are reported by any of the above steps, stop and diagnose the failure. \
Then to install the library and its header files:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs24 \cf0  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\fi560\ql\qnatural\pardirnatural

\f2\fs28 \cf0 % sudo make install \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f1 \cf0 The Quadrature package is not installed by the ARPREC installation scripts; therefore you must copy the following files from the cpp/ directory in the ARPREC distribution to the directory in which you place the source:\
\

\f2     arprec-integrate.cpp\
    arprec-integrate.h\
    quad-erf.cpp\
    quad-erf.h\
    quad-gs.cpp\
    quad-gs.h\
    quad-ts.cpp\
    quad-ts.h\
    integrate.h\
    util.cpp\
    util.h\

\f1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\fi560\ql\qnatural\pardirnatural

\f2 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b \cf0 \ul \ulc0 Building the piViaArprecQuad program\
\

\f1\b0 \ulnone To build piViaArprecQuad, open the piViaArprecQuad.xcodeproj project and click 'build'. This creates a command-line executable tool, piViaArprecQuad. \
\

\f0\b \ul Running piViaArprecQuad\
\

\f1\b0 \ulnone The piArprec program takes an optional argument to specify which quadrature algorithm is to be used:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li700\ql\qnatural\pardirnatural

\f2 \cf0 -g           -- Gaussian quadrature (default)\
-e           -- Error-function quadrature\
-t           -- tanh-sinh quadrature\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f1 \cf0 \
There is another optional argument to specify the number of digits of primary precision:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li700\ql\qnatural\pardirnatural

\f2 \cf0 -p prec      -- primary precision; default 400\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f1 \cf0 \
To calculate pi to 100 digits, using the Gaussian Quadrature algorithm:\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\fi700\ql\qnatural\pardirnatural

\f2 \cf0 % 
\f3\b piViaArprecQuad -g -p 100\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li700\ql\qnatural\pardirnatural

\f2\b0 \cf0 QuadGS::reSizeAbWt: Gaussian quadrature initialization\
                1       100     13000\
                2       106     13000\
                3       118     13000\
                4       142     13000\
                5       190     13000\
                6       286     13000\
                7       478     13000\
                8       862     13000\
                9       1630    13000\
reSizeAbWt: Tabale space used = 3167\
QuadGS::integrate: Iteration=1 of 9; est error = 10^0; approx value = 10 ^ -1 x 7.8227745056840615977475523306950747469493286984268635718\
QuadGS::integrate: Iteration=2 of 9; est error = 10^0; approx value = 10 ^ -1 x 7.8540807636945432691402114205760751159351197180255342064\
QuadGS::integrate: Iteration=3 of 9; est error = 10^-10; approx value = 10 ^ -1 x 7.853994400620171143216180183921703206588370363588889657\
QuadGS::integrate: Iteration=4 of 9; est error = 10^-7; approx value = 10 ^ -1 x 7.8539832543576270789197658776067080570770579027436151241\
QuadGS::integrate: Iteration=5 of 9; est error = 10^-8; approx value = 10 ^ -1 x 7.853981838092602891386133184775355861023293500548969594\
QuadGS::integrate: Iteration=6 of 9; est error = 10^-9; approx value = 10 ^ -1 x 7.8539816595885308809038953875296040375276911036948965817\
QuadGS::integrate: Iteration=7 of 9; est error = 10^-10; approx value = 10 ^ -1 x 7.853981637182480433429048563518703761192749031736075449\
QuadGS::integrate: Iteration=8 of 9; est error = 10^-11; approx value = 10 ^ -1 x 7.8539816343758739865960472779783922453486765584132453264\
QuadGS::integrate: Iteration=9 of 9; est error = 10^-12; approx value = 10 ^ -1 x 7.8539816340246814445918029156993117786624638820004057243\
QuadGS::integrate: Estimated error = 10^-12\
Increae QuadLevel for greater accuracy. Current value =9\
quadgs: Poor results may be due to singularities at endpoints.\
If so, try the erf or tanh-sinh quadrature routines (Quadtype = 2 or 3).\
\
pi = 10 ^ 0 x 3.141592653609872577836721166279724711464985552800162289708081782139844738304462256827341515841878967\
total elapsed time : 162.728 seconds\
}