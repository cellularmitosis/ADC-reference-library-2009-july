<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing Cameras</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3419"> </A>Managing Cameras</H1><P CLASS="T1.Text1"><A NAME="pgfId=3424"> </A><A NAME="marker=3420"> </A>QuickDraw&nbsp;3D provides a number of general routines for managing cameras of any kind.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3425"> </A><A NAME="19589"> </A>Q3Camera_GetType</H2><P CLASS="T1.Text1"><A NAME="pgfId=3427"> </A><A NAME="marker=833"> </A>You can use the <TT CLASS="cv">Q3Camera_GetType</TT> function to get type of a camera.<A NAME="marker=3426"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5076"> </A>TQ3ObjectType Q3Camera_GetType (TQ3CameraObject camera);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5078"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3429"> </A>A camera object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3430"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3431"> </A>The <TT CLASS="cv">Q3Camera_GetType</TT> function returns, as its function result, the type of the camera specified by the <TT CLASS="cv">camera</TT> parameter. The types of camera currently supported by QuickDraw&nbsp;3D are defined by these constants:<A NAME="marker=3435"> </A></P><CODE CLASS="Cv.Code"><A NAME="pgfId=5089"> </A>kQ3CameraTypeOrthographic<BR>kQ3CameraTypeViewAngleAspect<BR>kQ3CameraTypeViewPlane<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3437"> </A>If <TT CLASS="cv">Q3Camera_GetType</TT> cannot determine the type of the specified camera, it returns <TT CLASS="cv">kQ3ObjectTypeInvalid</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3438"> </A>Q3Camera_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=3439"> </A><A NAME="marker=848"> </A>You can use the <TT CLASS="cv">Q3Camera_GetData</TT> function to get the basic data associated with a camera.<A NAME="marker=3440"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5095"> </A>TQ3Status Q3Camera_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraData *cameraData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5097"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3442"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5106"> </A><TT CLASS="cv">cameraData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3443"> </A>On exit, a pointer to a camera data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3444"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3445"> </A>The <TT CLASS="cv">Q3Camera_GetData</TT> function returns, through the <TT CLASS="cv">cameraData</TT> parameter, basic information about the camera specified by the <TT CLASS="cv">camera</TT> parameter. See <A HREF="qd3dcameras.f.htm#23570" CLASS="XRef">&quot;Camera Data Structure&quot;</A> for a description of a camera data structure.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3449"> </A>Q3Camera_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=3450"> </A><A NAME="marker=861"> </A>You can use the <TT CLASS="cv">Q3Camera_SetData</TT> function to set the basic data associated with a camera.<A NAME="marker=3451"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5117"> </A>TQ3Status Q3Camera_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3CameraData *cameraData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5119"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3453"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5128"> </A><TT CLASS="cv">cameraData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3454"> </A>A pointer to a camera data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3455"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3456"> </A>The <TT CLASS="cv">Q3Camera_SetData</TT> function sets the data associated with the camera specified by the <TT CLASS="cv">camera</TT> parameter to the data specified by the <TT CLASS="cv">cameraData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3457"> </A>Q3Camera_GetPlacement</H2><P CLASS="T1.Text1"><A NAME="pgfId=3458"> </A><A NAME="marker=871"> </A>You can use the <TT CLASS="cv">Q3Camera_GetPlacement</TT> function to get the current placement of a camera.<A NAME="marker=3459"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5139"> </A>TQ3Status Q3Camera_GetPlacement (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraPlacement *placement);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5141"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3461"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5150"> </A><TT CLASS="cv">placement</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3462"> </A>On exit, a pointer to a camera placement structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3463"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3464"> </A>The <TT CLASS="cv">Q3Camera_GetPlacement</TT> function returns, in the <TT CLASS="cv">placement</TT> parameter, a pointer to a camera placement structure that describes the current placement of the camera specified by the <TT CLASS="cv">camera</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3465"> </A>Q3Camera_SetPlacement</H2><P CLASS="T1.Text1"><A NAME="pgfId=3467"> </A><A NAME="marker=881"> </A>You can use the <TT CLASS="cv">Q3Camera_SetPlacement</TT> function to set the placement of a camera.<A NAME="marker=3466"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5161"> </A>TQ3Status Q3Camera_SetPlacement (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3CameraPlacement *placement);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5163"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3469"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5172"> </A><TT CLASS="cv">placement</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3470"> </A>A pointer to a camera placement structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3471"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3472"> </A>The <TT CLASS="cv">Q3Camera_SetPlacement</TT> function sets the placement of the camera specified by the <TT CLASS="cv">camera</TT> parameter to the position specified by the <TT CLASS="cv">placement</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3473"> </A>Q3Camera_GetRange</H2><P CLASS="T1.Text1"><A NAME="pgfId=3475"> </A><A NAME="marker=891"> </A>You can use the <TT CLASS="cv">Q3Camera_GetRange</TT> function to get the current range of a camera.<A NAME="marker=3474"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5183"> </A>TQ3Status Q3Camera_GetRange (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraRange *range);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5185"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3477"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5194"> </A><TT CLASS="cv">range</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3478"> </A>On exit, a pointer to a camera range structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3479"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3480"> </A>The <TT CLASS="cv">Q3Camera_GetRange</TT> function returns, in the <TT CLASS="cv">range</TT> parameter, a pointer to a camera range structure that describes the current range of the camera specified by the <TT CLASS="cv">camera</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3481"> </A>Q3Camera_SetRange</H2><P CLASS="T1.Text1"><A NAME="pgfId=3483"> </A><A NAME="marker=901"> </A>You can use the <TT CLASS="cv">Q3Camera_SetRange</TT> function to set the range of a camera.<A NAME="marker=3482"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5205"> </A>TQ3Status Q3Camera_SetRange (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3CameraRange *range);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5207"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3485"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5216"> </A><TT CLASS="cv">range</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3486"> </A>A pointer to a camera range structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3487"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3488"> </A>The <TT CLASS="cv">Q3Camera_SetRange</TT> function sets the range of the camera specified by the <TT CLASS="cv">camera</TT> parameter to the range specified by the <TT CLASS="cv">range</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3489"> </A>Q3Camera_GetViewPort</H2><P CLASS="T1.Text1"><A NAME="pgfId=3490"> </A><A NAME="marker=911"> </A>You can use the <TT CLASS="cv">Q3Camera_GetViewPort</TT> function to get the current view port of a camera.<A NAME="marker=3491"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5227"> </A>TQ3Status Q3Camera_GetViewPort (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraViewPort *viewPort);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5229"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3493"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5242"> </A><TT CLASS="cv">viewPort</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3494"> </A>On exit, a pointer to a camera view port structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3495"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3496"> </A>The <TT CLASS="cv">Q3Camera_GetViewPort</TT> function returns, in the <TT CLASS="cv">viewPort</TT> parameter, a pointer to a camera view port structure that describes the current view port of the camera specified by the <TT CLASS="cv">camera</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3497"> </A>Q3Camera_SetViewPort</H2><P CLASS="T1.Text1"><A NAME="pgfId=3499"> </A><A NAME="marker=921"> </A>You can use the <TT CLASS="cv">Q3Camera_SetViewPort</TT> function to set the view port of a camera.<A NAME="marker=3498"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5253"> </A>TQ3Status Q3Camera_SetViewPort (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3CameraViewPort *viewPort);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5255"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3501"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5264"> </A><TT CLASS="cv">viewPort</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3502"> </A>A pointer to a camera view port structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3503"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3504"> </A>The <TT CLASS="cv">Q3Camera_SetViewPort</TT> function sets the view port of the camera specified by the <TT CLASS="cv">camera</TT> parameter to the view port specified by the <TT CLASS="cv">viewPort</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3505"> </A>Q3Camera_GetWorldToView</H2><P CLASS="T1.Text1"><A NAME="pgfId=3506"> </A><A NAME="marker=931"> </A>You can use the <TT CLASS="cv">Q3Camera_GetWorldToView</TT> function to get the current world-to-view space transform.<A NAME="marker=3507"> </A><A NAME="marker=3508"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5275"> </A>TQ3Status Q3Camera_GetWorldToView (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *worldToView);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5277"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3510"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5286"> </A><TT CLASS="cv">worldToView</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3511"> </A>On output, a pointer to a 4-by-4 matrix.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3512"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3513"> </A>The <TT CLASS="cv">Q3Camera_GetWorldToView</TT> function returns, in the <TT CLASS="cv">worldToView</TT> parameter, a pointer to a 4-by-4 matrix that describes the current world-to-view space transform defined by the camera specified by the <TT CLASS="cv">camera</TT> parameter. The world-to-view space transform is defined only by the placement of the camera; it establishes the camera location as the origin of the view space, with the view vector (that is, the vector from the camera's eye toward the point of interest) placed along the <I CLASS="italics">-z</I> axis and the up vector placed along the <I CLASS="italics">y</I> axis.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3514"> </A>Q3Camera_GetViewToFrustum</H2><P CLASS="T1.Text1"><A NAME="pgfId=3515"> </A><A NAME="marker=942"> </A>You can use the <TT CLASS="cv">Q3Camera_GetViewToFrustum</TT> function to get the current view-to-frustum transform.<A NAME="marker=3516"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5297"> </A>TQ3Status Q3Camera_GetViewToFrustum (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *viewToFrustum);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5299"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3518"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5308"> </A><TT CLASS="cv">viewToFrustum</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3519"> </A> On output, a pointer to a 4-by-4 matrix.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3520"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3521"> </A>The <TT CLASS="cv">Q3Camera_GetViewToFrustum</TT> function returns, in the <TT CLASS="cv">viewToFrustum</TT> parameter, a pointer to a 4-by-4 matrix that describes the current view-to-frustum transform defined by the camera specified by the <TT CLASS="cv">camera</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3522"> </A>Q3Camera_GetWorldToFrustum</H2><P CLASS="T1.Text1"><A NAME="pgfId=3523"> </A><A NAME="marker=952"> </A>You can use the <TT CLASS="cv">Q3Camera_GetWorldToFrustum</TT> function to get the current world-to-frustum transform.<A NAME="marker=3524"> </A></P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5320"> </A>TQ3Status Q3Camera_GetWorldToFrustum (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *worldToFrustum);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5322"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3526"> </A>A camera object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5331"> </A><TT CLASS="cv">worldToFrustum</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3527"> </A> On output, a pointer to a 4-by-4 matrix.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3528"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3529"> </A>The <TT CLASS="cv">Q3Camera_GetWorldToFrustum</TT> function returns, in the <TT CLASS="cv">worldToFrustum</TT> parameter, a pointer to a 4-by-4 matrix that describes the current world-to-frustum transform defined by the camera specified by the <TT CLASS="cv">camera</TT> parameter.<A NAME="marker=3530"> </A><A NAME="marker=3531"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>