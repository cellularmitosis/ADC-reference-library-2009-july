/*------------------------------------------------------------------------------ * *  Apple Developer Technical Support * *  Edition publishing routines * *  Program:    AEObject-Edition Sample *  File:       Prototypes.h - C Source * *  by:         C.K. Haun <TR> * *  Copyright ©  1990-1992 Apple Computer, Inc. *  All rights reserved. * *------------------------------------------------------------------------------ * This file contains all the prototypes for this application. *----------------------------------------------------------------------------*/#ifndef __GLOBALS__extern Boolean gHasColor;extern short gCurrentColor;extern RGBColor gColorArray[];extern AEInteractAllowed gInteractLevel;extern Handle gScrapData;                                          /* picture data currently on clipboard *//* individual menu handles */extern MenuHandle gAppleMenuHandle, gFileMenuHandle, gEditMenuHandle, gToolMenuHandle,gAppleEventMenuHandle,gEditionMenuHandle,gWindowMenuHandle,gColorMenuHandle;extern short gHelpItem; 		/* our added help menu item */extern Boolean gStop;                                              /* Stop flag for this app */extern unsigned long gMasterWindowID;                      /* for section tracking */extern Rect gShowPubRect;                                          /* rectangle of the currently selected publisher */extern Rect gShowSubRect;                                          /* rectangle of the currently selected subscriber */extern SectionHandle gShowingSecHandle;                      /* currently selected section */extern SectionHandle gClipSection;                           /* if the clipboard contains a section */extern PicHandle gClipPict;                                        /* for the section picture */extern Boolean gShowPub;                                   /* telling if a publisher or subscriber */extern Boolean gShowSub;                                   /* border should be displayed */extern Boolean gShowingAll;                                /* show all borders toggle */extern Boolean gInBackground;                              /* Where Are We? */extern Boolean gExpanded;                                  /* flag for expanded dialogs, for this sample */extern Boolean gResizeSub;                                 /* resize flag for this sample */extern short gClipHasContents;                        /* indicates the contents of the clipboard (PICT, TEXT, section ) */extern EventRecord gERecord;                                       /* guess */extern ProcessSerialNumber gOurSN;                                 /* serial number of this process (us, our application) */extern Boolean gHasAppleEvents;                                    /* not really necessary, since we fail if these */extern Boolean gHasEditionManager;                                 /* aren't available, but it's only two bytes.... */extern short actsToIDs[] ;extern SectionHandle gLastSection;                                  /* for double click testing */extern unsigned long gLastSecClickTick;extern RgnHandle mousergn;                                     /* for WaitNextEvent */extern long gMySleep;/* globals */extern SectionHandle gSecHandle;extern EditionRefNum gEdRefNum;extern EditionContainerSpec gEdSpec;extern unsigned long gSectionID;extern prefStruct gPreferences;extern short gLocalInteraction;extern short gAESendInteraction;extern AEDesc gTargetAddress;extern AEDesc gNullDesc;	/* seed nul deeescriptor */extern Str63 targetName;extern Boolean gAESwitchLayer;extern short gAddressMode;extern short gReplyMode;extern short gSendInteractArray[];extern AEDesc * gCurrentReply;extern short gReplyLevels[];extern WindowObjectDefHandle gWindObjSpecHandle;extern TextObjectDefHandle gTextObjSpecHandle;extern ShapeObjectDefHandle gShapeObjSpecHandle;extern AEIdleUPP gCommonIdleFunctionUPP;#endif/* prototypes from main */#ifdef __SAMPMAIN__#define sayExtern                #else#define sayExtern extern#endifsayExtern void DrawIt(WindowPtr theWindow);sayExtern void DeBorderSelection(void);sayExtern void NilProc(void);#undef sayExtern#ifdef __AEM__#define sayExtern                #else#define sayExtern extern#endifsayExtern void DoHighLevel(EventRecord AERecord);sayExtern pascal OSErr AEOpenHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern pascal OSErr AEOpenDocHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern pascal OSErr AEPrintHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern pascal OSErr AEQuitHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern pascal OSErr AEAnswerHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern Boolean MissedAnyParameters(AppleEvent *message);sayExtern OSErr processOpenPrint(AppleEvent *messagein, Boolean printIt);sayExtern OSErr GetSectionHandleFromEvent(AppleEvent *AEin, SectionHandle *theSection);sayExtern pascal Boolean CommonIdleFunction(EventRecord *whatEvent,long *sleeping,RgnHandle *mouseRgn);sayExtern pascal OSErr CoerceBooleanToChar(DescType origData, Ptr inPtr, Size theSize, DescType toType, long refCon, AEDesc *result);sayExtern pascal OSErr CoerceQDRectToChar(DescType origData, Ptr inPtr, Size theSize, DescType toType, long refCon, AEDesc *result);sayExtern pascal OSErr CoerceCharToPString(DescType origData, Ptr inPtr, Size theSize, DescType toType, long refCon, AEDesc *result);sayExtern pascal OSErr CoercePStringToChar(DescType origData, Ptr inPtr, Size theSize, DescType toType, long refCon, AEDesc *result);sayExtern pascal OSErr CoerceAliasToTargetID(DescType origData,Ptr outPut,Size theSize,DescType toType,long refCon,AEDesc *returnID);sayExtern void SetInteractionLevels(void);sayExtern void SetTargetAddress(void);sayExtern void SetReplyMode(void);sayExtern void SendGetData(short which);sayExtern void SendSetData(short which);#undef sayExtern#ifdef __FILES__#define sayExtern                #else#define sayExtern extern#endifsayExtern void ReadDocData(windowCHandle newWinControl, short readRefNum);sayExtern WindowPtr OpenFile(FSSpec *inSpec);sayExtern void SaveMe(windowCHandle theWind, WindowPtr theWindPtr);sayExtern Boolean AddToPrefsFile(Handle dataToAdd,OSType thisRes,short resID);sayExtern short OpenPrefsFile(void);sayExtern void LoadPrefs(void);sayExtern void SavePrefs(void);sayExtern void ClosePrefsFile(void);sayExtern void SaveAES(windowCHandle theWind, WindowPtr theWindPtr);#undef sayExtern#ifdef __SAMPMENU__#define sayExtern                #else#define sayExtern extern#endifsayExtern void SetUndo(short undoNow, Boolean fromRecord);sayExtern Boolean DoSelected(long val);sayExtern void SetCurAction(short actionIn);sayExtern void DoDaCall(MenuHandle themenu, long theit);sayExtern void SwitchChecks(short itemNow);sayExtern void SetMyCursor(short myCurs);sayExtern void SetWMenus(Boolean how);sayExtern OSErr PrepQuit(void);sayExtern void AdjustMenus(windowCHandle tempCH,WindowPtr currentWindow);sayExtern pascal void BorderDefault(WindowPtr dwind, short dinum);sayExtern pascal void ArrowArea(WindowPtr dwind, short dinum);sayExtern pascal Boolean aboutFilter(DialogPtr theDialog, EventRecord *theEvent, short *itemHit);sayExtern void DoPreferences(void);sayExtern void DoEditionAdditional(short which);#undef sayExtern#ifdef __PRINTSTUFF__#define sayExtern                #else#define sayExtern extern#endifsayExtern void PrintIt(WindowPtr theWind,Boolean bye);#undef sayExtern#ifdef __PUBLISH__#define sayExtern                #else#define sayExtern extern#endifsayExtern OSErr CreatePublisher(OSType typeToMake,Boolean fromEvent,FSSpecPtr theSpec);sayExtern PicHandle MyMakePicture(Rect *thisRect);sayExtern OSErr MyWriteSection(SectionHandle secHandle, Handle theData, OSType theType,FSSpecPtr inSpec);sayExtern OSErr MyUpdateEdition(SectionHandle theSection);sayExtern void StorePublisher(windowCHandle shortName, SectionHandle storeSection, Rect *inRect, mySectionDataHandle textIn, OSType typeIn);sayExtern WindowPtr FindSection(SectionHandle inSection);sayExtern pascal OSErr AEWriteSectionHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern pascal OSErr AECreatePubHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern pascal short ExpOptHook(short itemOffset, short itemHit, DialogPtr theDialog, Ptr yourDataPtr);sayExtern pascal Boolean ExpOptFilter(DialogPtr theDialog, EventRecord *theEvent, short itemOffset, short *itemHit, Ptr yourDataPtr);sayExtern mySectionDataHandle GetTextSection(windowCHandle shortName, SectionType what);sayExtern mySectionDataHandle TextSectionFromSecHandle(SectionHandle theSection);sayExtern pascal OSErr AECancelSectionHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern pascal OSErr AEScrollSectionHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern Boolean SearchPubs(Point thePoint);#undef sayExtern#ifdef __SUBSCRIBE__#define sayExtern                #else#define sayExtern extern#endifsayExtern OSErr MyReadSection(SectionHandle theSection);sayExtern void MyCancelSection(SectionHandle inSection, WindowPtr theWindow);sayExtern OSErr MyReadEditionData(Ptr readinPtr, DescType typeToGet, EditionRefNum readRef, Size *howMuch);sayExtern void HandleSectionSave(windowCHandle theWind, Boolean writeEm, Boolean dereg, FSSpec *theSpec);sayExtern void StoreSubscriber(windowCHandle shortName, SectionHandle secHandle, Handle inRect, Handle pictIn);sayExtern pascal short SubExpOptHook(short itemOffset, short itemHit, DialogPtr theDialog, Ptr yourDataPtr);sayExtern pascal Boolean SubExpOptFilter(DialogPtr theDialog, EventRecord *theEvent, short itemOffset, short *itemHit, Ptr yourDataPtr);sayExtern void PasteSubscription(void);sayExtern void CutSubscription(void);sayExtern void CopySubscription(void);sayExtern void KillClipSub(void);sayExtern pascal OSErr AEReadSectionHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern OSErr ReadClipSection(Size readIn, EditionRefNum sRefNum);sayExtern void DoOptions(SectionHandle inSection);sayExtern void DoSubscribe(void);sayExtern void DeleteSubscriber(void);sayExtern OSErr MyGoToPublisher(SectionHandle theSection);sayExtern Boolean SearchSubs(Point thePoint);#undef sayExtern#ifdef __TEXTSECTIONS__#define sayExtern                #else#define sayExtern extern#endifsayExtern Boolean HasTESelection(windowCHandle inWind);sayExtern Boolean PasteText(void);sayExtern Boolean CutText(void);sayExtern Boolean CopyText(void);sayExtern Boolean ClearText(void);sayExtern void BorderTextSection(mySectionDataHandle theText);sayExtern void KillTextBorders(void);sayExtern void ShowAllTextBorders(void);sayExtern Boolean InTextBox(windowCHandle inName, Rect *where);sayExtern void CheckTextSections(windowCHandle inWindow, short Action);sayExtern Boolean SkipOverSubscriber(windowCHandle inWindow, unsigned short theKey);sayExtern void RePackText(mySectionDataHandle currentSection, TEHandle theTEHandle);sayExtern void CheckSectionHit();sayExtern void ExcludeSubscriber(windowCHandle tempCH);#undef sayExtern#ifdef __MYWINDOWS__#define sayExtern                #else#define sayExtern extern#endifsayExtern void DrawFull(windowCHandle theWind, WindowPtr theWindPtr);sayExtern void DoDocumentClick(WindowPtr twindow);sayExtern void UndoLast(void);sayExtern void ChangePlane(WindowPtr twindow);sayExtern WindowPtr AddNewWindow(Boolean showIt);sayExtern void CloseMyWindow(WindowPtr theClose);sayExtern void AddLine(windowCHandle nowHandle, myLine *inline);sayExtern void AddRect(windowCHandle nowHandle, Rect *inrect);sayExtern void AddTextBox(windowCHandle nowHandle, Rect *inrect);sayExtern void AddOval(windowCHandle nowHandle, Rect *inoval);sayExtern void AddSelection(windowCHandle nowHandle, Rect *inrect);sayExtern ShapesHandle NewShape(windowCHandle theWindow);sayExtern OSErr SetShapeProperty(PropertyTHdl propertyBack, AEDesc *theData);sayExtern void CutGraphic(windowCHandle tempWC);sayExtern void CopyGraphic(windowCHandle tempWC);sayExtern void ClearGraphic(windowCHandle tempWC);sayExtern Boolean IsAppWindow(WindowPtr window);sayExtern Boolean IsDAWindow(WindowPtr window);sayExtern WindowPtr AddNewWindow(Boolean showIt);sayExtern void CloseMyWindow(WindowPtr theClose);sayExtern void WindowToFront(short which,Str63 name);sayExtern OSErr SetWindowProperty(PropertyTHdl propertyBack,AEDesc *theData);sayExtern void AddToWindowMenu(WindowPtr theWindow,const Str255 oldName);sayExtern void DeleteFromWindowMenu(WindowPtr theWindow);sayExtern Boolean CheckExisting(FSSpecPtr newSpec);sayExtern void KillSelection(windowCHandle tempWC);sayExtern void SizeControls(WindowPtr inWind);sayExtern WindowPtr FindClipWindow(void);sayExtern void DrawClip(windowCHandle theWind,WindowPtr windowIn);sayExtern void ClipClick(WindowPtr twindow);sayExtern void CloseClip(WindowPtr inWind);sayExtern void UpdateScrap(Boolean refreshIt);sayExtern void SpitClip(void);sayExtern void SizeClip(WindowPtr windowIn);sayExtern void ToggleAEWindow(void);sayExtern WindowPtr FindAEWindow(void);sayExtern void DrawAES(windowCHandle theWind,WindowPtr windowIn);sayExtern void ClickAES(WindowPtr twindow);sayExtern void CloseAES(WindowPtr inWind);sayExtern void SizeAES(WindowPtr windowIn);sayExtern void AESKey(char theKey,windowCHandle tempWC);sayExtern void AddToAEWindow(Ptr text,long count);sayExtern void AddAENum(long theNum);sayExtern void AddAEText(ConstStr255Param theText);#undef sayExtern#ifdef __AEOBJ__#define sayExtern                #else#define sayExtern extern#endifsayExtern OSErr InstallObjectHandlers(void);sayExtern pascal OSErr AEGetDataHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern pascal OSErr AESetDataHandler(AppleEvent *messagein, AppleEvent *reply, long refIn);sayExtern pascal OSErr WindFromNull( DescType desiredClass,		const AEDesc *container, DescType containerClass, DescType form,		const AEDesc *selectionData, AEDesc *value, long LongInt );sayExtern pascal OSErr PropertyFromWindow( DescType desiredClass,		const AEDesc *container, DescType containerClass, DescType form,		const AEDesc *selectionData, AEDesc *value, long LongInt );sayExtern pascal OSErr PropertyFromText(DescType desiredClass, const AEDesc *container, DescType containerClass, DescType form,                                const AEDesc *selectionData, AEDesc *value, long LongInt);pascal OSErr PropertyFromShape(DescType desiredClass, const AEDesc *container, DescType containerClass, DescType form,                                const AEDesc *selectionData, AEDesc *value, long LongInt);sayExtern pascal OSErr DrawFromWindow(DescType desiredClass, const AEDesc *container, DescType containerClass, DescType form,                             const AEDesc *selectionData, AEDesc *value, long LongInt);sayExtern pascal OSErr MyCompareProc( DescType oper, const AEDesc *obj1,			const AEDesc *obj2, Boolean *result );sayExtern pascal OSErr MyCountProc( DescType desiredType, DescType containerClass,			const AEDesc *container, long *result );sayExtern pascal OSErr MyDisposeTokenProc( AEDesc *unneededToken );sayExtern pascal OSErr MyGetMarkTokenProc( const AEDesc *dContainerToken, DescType containerClass,			AEDesc *result );sayExtern pascal OSErr MyMarkProc( const AEDesc *dToken, const AEDesc *markToken, long index );sayExtern pascal OSErr MyAdjustMarksProc( long newStart, long newStop, const AEDesc *markToken );sayExtern pascal OSErr MyGetErrDescProc( DescPtr *appDescPtr );sayExtern OSErr BuildGetDataEvent(AppleEvent *thisEvent,short which);		sayExtern OSErr BuildSetDataEvent(AppleEvent *thisEvent,short which);sayExtern pascal OSErr TextFromWindow( DescType desiredClass,		const AEDesc *container, DescType containerClass, DescType form,		const AEDesc *selectionData, AEDesc *value, long LongInt );sayExtern pascal OSErr WordFromText( DescType desiredClass,		const AEDesc *container, DescType containerClass, DescType form,		const AEDesc *selectionData, AEDesc *value, long LongInt );sayExtern pascal OSErr ShapeFromDraw( DescType desiredClass,		const AEDesc *container, DescType containerClass, DescType form,		const AEDesc *selectionData, AEDesc *value, long LongInt );sayExtern OSErr BuildFullObject(AEDesc *object,short which);sayExtern OSErr BuildWindowObject(AEDesc *returnedObject);sayExtern void CountWords(const AEDesc *container,long * theCount,long stopAt,long * position);sayExtern OSErr CreateShapeObject(AEDesc *theContainer);sayExtern void CountShapes(const AEDesc *container,long * theCount,long stopAt,long * position,DescType *whichType);sayExtern OSErr AddShapeProperty(AEDesc *theObject,Boolean which);#undef sayExtern#ifdef __AEMU__#define sayExtern                #else#define sayExtern extern#endifsayExtern OSErr ShortFromDesc(short *theData,const AppleEvent *theDesc);		sayExtern void PStringFromTextDesc(Str255 theString,const AEDesc *theDesc);sayExtern OSErr BrowseForTarget(AEDesc * theAddress);sayExtern OSErr MakeAddress(AEDesc *theAddress);sayExtern OSErr DoSend(AppleEvent * theEvent,AEDesc *repy);sayExtern void AEErrorText(OSErr theError);sayExtern void DoObjectDefinition(short which);sayExtern DialogPtr SetUpObjectDialog(short which);		sayExtern void DisplayReturnedData(AEDesc *reply);sayExtern void AddToReply(ConstStr255Param theWords,long theError);sayExtern OSErr MakeTypeRect(CShapeObjHandle theShape,AEDesc *theValue);sayExtern OSErr	MakeGraphicLine(CShapeObjHandle theShape,AEDesc *theValue);sayExtern OSErr MakeSinglePixelMap(AEDesc *thePlace,RGBColor * theColor);#undef sayExtern#ifdef __GUTIL__#define sayExtern                #else#define sayExtern extern#endifsayExtern pascal Boolean standardDialogFilter(DialogPtr theDialog, EventRecord *theEvent, short *itemHit);sayExtern pascal Boolean standardAlertFilter(DialogPtr theDialog, EventRecord *theEvent, short *itemHit);sayExtern ControlHandle SnatchHandle(DialogPtr thebox, short theGetItem);sayExtern void MakeRect(Point *aPoint, Point *bPoint, Rect *putRect);sayExtern void AppendString(Str255 target, Str255 appendIt);sayExtern Boolean PureCursor(char theKey);sayExtern OSErr MySetHandleSize(Handle theHandle, Size theSize);sayExtern void ShowMe(Str255 in, OSErr aevtErr,short lineNo);sayExtern void DoDiskEvents(long dinfo);sayExtern DialogPtr CommonDStart(short DNumber, short set1, short set2);sayExtern void PullRect(windowCHandle theWind, Rect *startRect, Boolean isOval, Boolean useRect,Boolean onlyCorner);sayExtern void DoAnts(Rect *theRect);sayExtern void AdjustCursor(Point mouse, RgnHandle region);sayExtern Boolean CompareFSSpecs(FSSpecPtr spec1,FSSpecPtr spec2);sayExtern void SpinCursor(void);sayExtern Boolean IsMyWindow(WindowPtr theWind);sayExtern Boolean IsModalFront(void);#undef sayExtern#ifdef __INIT__#define sayExtern                #else#define sayExtern extern#endifsayExtern void StartStuff(void);sayExtern void CreateClipBoard(void);sayExtern void CreateAEStatus(void);sayExtern void StartMenus();sayExtern void InitAEStuff(void);