<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Meshes</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3957"> </A><A NAME="26273"> </A>Meshes</H1><P CLASS="T1.Text1"><A NAME="pgfId=3959"> </A><A NAME="marker=3958"> </A>A mesh is a collection of vertices and faces that represent a topological polyhedron. The polyhedron does not need to be closed (that is, a mesh may have a boundary). The structure of a mesh is maintained privately by QuickDraw&nbsp;3D, using the following structure types:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=41100"> </A>typedef struct TQ3MeshComponentPrivate *TQ3MeshComponent;<BR>typedef struct TQ3MeshContourPrivate *TQ3MeshContour;<BR>typedef struct TQ3MeshEdgeRepPrivate *TQ3MeshEdge;<BR>typedef struct TQ3MeshVertexPrivate *TQ3MeshFace;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=34466"> </A>You create a new mesh by calling <TT CLASS="cv">Q3Mesh_New</TT>. When first created, a mesh is empty--it contains no vertices, faces, or edges. These must be added by calling <TT CLASS="cv">Q3Mesh_VertexNew</TT> and <TT CLASS="cv">Q3Mesh_FaceNew</TT>.</P><P CLASS="T1.Text1"><A NAME="pgfId=34796"> </A>Once a mesh has been created and populated with vertices and faces, you can access the data associated with it by using the following routines:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=41106"> </A>TQ3Status Q3Mesh_GetNumVertices<BR>TQ3Status Q3Mesh_GetNumFaces<BR>TQ3Status Q3Mesh_GetNumEdges<BR>TQ3Status Q3Mesh_GetNumComponents<BR>TQ3Status Q3Mesh_GetNumCorners<BR>TQ3Status Q3Mesh_GetOrientable<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=34499"> </A>Q3Mesh_GetOrientable returns the Boolean variable <TT CLASS="cv">orientable</TT>, which is true only if the faces of a mesh can be consistently oriented. A tessellated M&ouml;bius strip and the surface of a Klein bottle are two classic examples of nonorientable meshes. </P><P CLASS="T1.Text1"><A NAME="pgfId=34500"> </A>A mesh's attribute set can be accessed and set by the routines</P><CODE CLASS="Cv.Code"><A NAME="pgfId=41110"> </A>TQ3Status Q3Geometry_GetAttributeSet<BR>TQ3Status Q3Geometry_SetAttributeSet<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=34857"> </A>In addition, each mesh vertex, face, edge, and corner of a mesh can have a set of attributes attached to it.</P><P CLASS="T1.Text1"><A NAME="pgfId=34850"> </A>The routines you can use to create and alter meshes are described in <A HREF="qd3dgeometry.40.htm#15686" CLASS="XRef">&quot;Creating and Editing Meshes&quot;</A>.</P><P CLASS="I.Important"><A NAME="pgfId=3969"> </A>QuickDraw&nbsp;3D supports meshes primarily for interactive rendering of polygonal models, not for representing large polygonal databases. A mesh is always a retained object, never an immediate object. As a result, QuickDraw&nbsp;3D does not supply routines to draw or write meshes. </P><P CLASS="T1.Text1"><A NAME="pgfId=34855"> </A>There is only one public data structure defined for meshes, the mesh iterator structure. You use the <B CLASS="bold">mesh iterator structure</B> when you call any one of a large number of mesh iterators. The mesh iterator structure is defined by the <TT CLASS="cv">TQ3MeshIterator</TT> data type.<A NAME="marker=3982"> </A></P><CODE CLASS="Cv.Code"><A NAME="pgfId=41114"> </A>typedef struct TQ3MeshIterator {<BR>&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*var1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*var2;<BR>&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*var3;<BR>&nbsp;&nbsp;&nbsp;&nbsp;struct {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*field1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;field2[4];<BR>&nbsp;&nbsp;&nbsp;&nbsp;} var4;<BR>} TQ3MeshIterator;<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=41118"> </A><TT CLASS="cv">var1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3985"> </A>Reserved for use by Apple Computer, Inc.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=41128"> </A><TT CLASS="cv">var2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3986"> </A>Reserved for use by Apple Computer, Inc.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=41137"> </A><TT CLASS="cv">var3</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3987"> </A>Reserved for use by Apple Computer, Inc.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=41146"> </A><TT CLASS="cv">var4</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3988"> </A>Reserved for use by Apple Computer, Inc.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=41155"> </A><TT CLASS="cv">field1</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3989"> </A>Reserved for use by Apple Computer, Inc.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=41164"> </A><TT CLASS="cv">field2</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3991"> </A>Reserved for use by Apple Computer, Inc.<A NAME="marker=3990"> </A></DD></DL COMPACT><hr>&#169; e by Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>