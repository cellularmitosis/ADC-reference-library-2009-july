<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Lines</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=4392"> </A><A NAME="35464"> </A>Creating and Editing Lines</H1><P CLASS="T1.Text1"><A NAME="pgfId=4397"> </A><A NAME="marker=4393"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate lines. See <A HREF="qd3dgeometry.23.htm#30513" CLASS="XRef">&quot;Lines&quot;</A> for the definition of a line.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4401"> </A>Q3Line_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=4402"> </A><A NAME="marker=2484"> </A>You can use the <TT CLASS="cv">Q3Line_New</TT> function to create a new line.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42757"> </A>TQ3GeometryObject Q3Line_New (const TQ3LineData *lineData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42759"> </A><TT CLASS="cv">lineData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4404"> </A>A pointer to a <TT CLASS="cv">TQ3LineData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4405"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4406"> </A>The <TT CLASS="cv">Q3Line_New</TT> function returns, as its function result, a new line having the endpoints and attributes specified by the <TT CLASS="cv">lineData</TT> parameter. If a new line could not be created, <TT CLASS="cv">Q3Line_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4407"> </A>Q3Line_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=4408"> </A><A NAME="marker=2492"> </A>You can use the <TT CLASS="cv">Q3Line_Submit</TT> function to submit an immediate line for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42770"> </A>TQ3Status Q3Line_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3LineData *lineData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42772"> </A><TT CLASS="cv">lineData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4410"> </A>A pointer to a <TT CLASS="cv">TQ3LineData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42781"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4411"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4412"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4413"> </A>The <TT CLASS="cv">Q3Line_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate line whose location and attribute set are specified by the <TT CLASS="cv">lineData</TT> parameter. The line is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4414"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=4415"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4423"> </A>Q3Line_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=4424"> </A><A NAME="marker=2512"> </A>You can use the <TT CLASS="cv">Q3Line_GetData</TT> function to get the data that defines a line and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42792"> </A>TQ3Status Q3Line_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject line, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LineData *lineData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42794"> </A><TT CLASS="cv">line</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4426"> </A>A line.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42803"> </A><TT CLASS="cv">lineData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4427"> </A>On exit, a pointer to a <TT CLASS="cv">TQ3LineData</TT> structure that contains information about the line specified by the <TT CLASS="cv">line</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4428"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4429"> </A>The <TT CLASS="cv">Q3Line_GetData</TT> function returns, through the <TT CLASS="cv">lineData</TT> parameter, information about the line specified by the <TT CLASS="cv">line</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3LineData</TT> structure internally; you must call <TT CLASS="cv">Q3Line_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4433"> </A>Q3Line_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=4434"> </A><A NAME="marker=2524"> </A>You can use the <TT CLASS="cv">Q3Line_SetData</TT> function to set the data that defines a line and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42814"> </A>TQ3Status Q3Line_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject line, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3LineData *lineData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42816"> </A><TT CLASS="cv">line</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4436"> </A>A line.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42825"> </A><TT CLASS="cv">lineData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4437"> </A>A pointer to a <TT CLASS="cv">TQ3LineData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4438"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4439"> </A>The <TT CLASS="cv">Q3Line_SetData</TT> function sets the data associated with the line specified by the <TT CLASS="cv">line</TT> parameter to the data specified by the <TT CLASS="cv">lineData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4440"> </A>Q3Line_GetVertexPosition</H2><P CLASS="T1.Text1"><A NAME="pgfId=4441"> </A><A NAME="marker=2533"> </A>You can use the <TT CLASS="cv">Q3Line_GetVertexPosition</TT> function to get the position of a vertex of a line.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42836"> </A>TQ3Status Q3Line_GetVertexPosition (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject line, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long index, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D *position);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42838"> </A><TT CLASS="cv">line</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4443"> </A>A line.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42847"> </A><TT CLASS="cv">index</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4444"> </A>An index into the <TT CLASS="cv">vertices</TT> array of the specified line. This parameter should have the value 0 or 1.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42856"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4445"> </A>On exit, the position of the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4446"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4447"> </A>The <TT CLASS="cv">Q3Line_GetVertexPosition</TT> function returns, in the <TT CLASS="cv">position</TT> parameter, the position of the vertex having the index specified by the <TT CLASS="cv">index</TT> parameter in the <TT CLASS="cv">vertices</TT> array of the line specified by the <TT CLASS="cv">line</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4448"> </A>Q3Line_SetVertexPosition</H2><P CLASS="T1.Text1"><A NAME="pgfId=4449"> </A><A NAME="marker=2543"> </A>You can use the <TT CLASS="cv">Q3Line_SetVertexPosition</TT> function to set the position of a vertex of a line.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42867"> </A>TQ3Status Q3Line_SetVertexPosition (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject line, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long index, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *position);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42869"> </A><TT CLASS="cv">line</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4451"> </A>A line.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42878"> </A><TT CLASS="cv">index</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4452"> </A>An index into the <TT CLASS="cv">vertices</TT> array of the specified line. This parameter should have the value 0 or 1.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42887"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4453"> </A>The desired position of the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4454"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4455"> </A>The <TT CLASS="cv">Q3Line_SetVertexPosition</TT> function sets the position of the vertex having the index specified by the <TT CLASS="cv">index</TT> parameter in the <TT CLASS="cv">vertices</TT> array of the line specified by the <TT CLASS="cv">line</TT> parameter to that specified in the <TT CLASS="cv">position</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4456"> </A>Q3Line_GetVertexAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=4457"> </A><A NAME="marker=2553"> </A>You can use the <TT CLASS="cv">Q3Line_GetVertexAttributeSet</TT> function to get the attribute set of a vertex of a line.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42898"> </A>TQ3Status Q3Line_GetVertexAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject line, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long index, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet *attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42900"> </A><TT CLASS="cv">line</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4459"> </A>A line.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42909"> </A><TT CLASS="cv">index</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4460"> </A>An index into the <TT CLASS="cv">vertices</TT> array of the specified line. This parameter should have the value 0 or 1.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42918"> </A><TT CLASS="cv">attributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4461"> </A> On exit, a pointer to a vertex attribute set for the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4462"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4463"> </A>The <TT CLASS="cv">Q3Line_GetVertexAttributeSet</TT> function returns, in the <TT CLASS="cv">attributeSet</TT> parameter, the set of attributes for the vertex having the index specified by the <TT CLASS="cv">index</TT> parameter in the <TT CLASS="cv">vertices</TT> array of the line specified by the <TT CLASS="cv">line</TT> parameter. The reference count of the set is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4464"> </A>Q3Line_SetVertexAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=4465"> </A><A NAME="marker=2563"> </A>You can use the <TT CLASS="cv">Q3Line_SetVertexAttributeSet</TT> function to set the attribute set of a vertex of a line.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42930"> </A>TQ3Status Q3Line_SetVertexAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject line, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long index, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42932"> </A><TT CLASS="cv">line</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4467"> </A>A line.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42941"> </A><TT CLASS="cv">index</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4468"> </A>An index into the <TT CLASS="cv">vertices</TT> array of the specified line. This parameter should have the value 0 or 1.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42950"> </A><TT CLASS="cv">attributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4469"> </A> The desired set of attributes for the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4470"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4471"> </A>The <TT CLASS="cv">Q3Line_SetVertexAttributeSet</TT> function sets the attribute set of a vertex to the set specified in the <TT CLASS="cv">attributeSet</TT> parameter. The vertex is identified by the specified index into the <TT CLASS="cv">vertices</TT> array of the line specified by the <TT CLASS="cv">line</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4472"> </A>Q3Line_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=4473"> </A><A NAME="marker=2573"> </A>You can use the <TT CLASS="cv">Q3Line_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3Line_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42962"> </A>TQ3Status Q3Line_EmptyData (TQ3LineData *lineData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42964"> </A><TT CLASS="cv">lineData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4475"> </A>A pointer to a <TT CLASS="cv">TQ3LineData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4476"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4477"> </A>The <TT CLASS="cv">Q3Line_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3LineData</TT> structure pointed to by the <TT CLASS="cv">lineData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3Line_GetData</TT>.<A NAME="marker=4478"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>