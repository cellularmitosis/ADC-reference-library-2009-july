<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Missing Functionality and Limitations</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>Inside Macintosh: QuickTime Reference</I><P>| <A HREF="refSlopeInt.4.htm">Previous</A> | <A HREF="refSlopeInt.1.htm">Chapter Contents</A> | <A HREF="refSlopeInt.htm">Chapter Top</A> | <A HREF="refSlopeInt.6.htm">Next</A> | <!-- QTnavbar end --><H1 CLASS="H2.Heading2"><A NAME="pgfId=1276"> </A>Missing Functionality and Limitations</H1><P CLASS="T1.Text1"><A NAME="pgfId=1277"> </A>In the two previous examples, you need to map between numerical audio sample values in a computer and some real-world parameter (volts and Y-coordinates). The audio samples in those examples were represented with integers, and so the numerical slope and intercept values to use were fairly obvious.</P><P CLASS="T1.Text1"><A NAME="pgfId=1278"> </A>With floating point data, there is no such obvious assignment. For example, a piece of code may expect or generate -1.0 to 1.0 data, 0.0 to 1.0 data, or -32678.0 to 32767.0 data. This ambiguity actually offers a performance advantage: rather than constantly rescaling output audio data to some standard range after each processing operation, you can often defer the rescale operation until the last minute, when data needs to be played or displayed.</P><P CLASS="T1.Text1"><A NAME="pgfId=1279"> </A>In order for this to work, the slope and intercept parameters described in the previous section must accompany the audio data as it is processed. Each stage of processing &quot;knows&quot; what its algorithm does to the slope and intercept values, and modifies them appropriately.</P><P CLASS="T1.Text1"><A NAME="pgfId=1280"> </A>The issue comes when you store the floating-point audio data into a file. Most current floating point audio file formats do not allow you to store slope and intercept values along with the data. A program that loads such a file and wants to play, display, or further process it must first scan through the entire data set to guess at full amplitude and zero amplitude levels, and even this is not guaranteed to recover the correct values.</P><P CLASS="T1.Text1"><A NAME="pgfId=1281"> </A>This latter scenario is what occurs with floating-point support in NeXT/Sun files. Any attempt to interpret the values in such a soundfile has to be preceded by a long and painful scan step, which renders the file format nearly useless.</P><P CLASS="T1.Text1"><A NAME="pgfId=1282"> </A>The Berkeley/IRCAM/CARL (BICSF) soundfile includes a &quot;maximum amplitude&quot; tag, which must always contain the highest sample absolute value present in the file. The writer of a BICSF file is responsible for computing and storing this maximum amplitude, which in some cases means scanning all of the file's samples, before closing the file.</P><P CLASS="T1.Text1"><A NAME="pgfId=1283"> </A>This scheme is useful in cases where you always want to &quot;normalize&quot; audio samples for playback and display, meaning that you always want the &quot;loudest&quot; part of the audio data to play at the maximum level of which the D/A is capable, and display at the maximum amplitude on a waveform display.</P><P CLASS="T1.Text1"><A NAME="pgfId=1284"> </A>But this is not always what you want. Sometimes, you want the &quot;loudest&quot; part of your audio file to represent some fraction of the maximum level of your D/A device or waveform display. For example, this is often the case in mixdowns.  The slope parameter defined here does not have to be the same as (or even greater than) the maximum sample absolute value in the file.</P><H2 CLASS="H3.Heading3TOC"><A HREF="refSlopeInt.6.htm#pgfId=1285" CLASS="Hypertext">Defining a Superset of the BICSF Functionality</A></H2><H2 CLASS="H3.Heading3TOC"><A HREF="refSlopeInt.7.htm#pgfId=1290" CLASS="Hypertext">Enhancing Functionality with Slope and Intercept Parameters</A></H2><H2 CLASS="H3.Heading3TOC"><A HREF="refSlopeInt.8.htm#pgfId=1292" CLASS="Hypertext">Enhancing Performance</A></H2><H2 CLASS="H3.Heading3TOC"><A HREF="refSlopeInt.9.htm#pgfId=1294" CLASS="Hypertext">Further Performance Improvement for Clipping By Using minclip and maxclip Parameters </A></H2><H2 CLASS="H3.Heading3TOC"><A HREF="refSlopeInt.a.htm#pgfId=1303" CLASS="Hypertext">Using Slope and Intercept</A></H2><H2 CLASS="H3.Heading3TOC"><A HREF="refSlopeInt.b.htm#pgfId=1309" CLASS="Hypertext">Using minclip and maxclip</A></H2><hr>&#169; 1998 Apple Computer, Inc.<!-- QTnavbar start --><P><I>Inside Macintosh: QuickTime Reference</I><P>| <A HREF="refSlopeInt.4.htm">Previous</A> | <A HREF="refSlopeInt.1.htm">Chapter Contents</A> | <A HREF="refSlopeInt.htm">Chapter Top</A> | <A HREF="refSlopeInt.6.htm">Next</A> | <!-- QTnavbar end --></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>