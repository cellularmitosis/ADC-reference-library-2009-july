<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing Shape Parts and Mesh Parts</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3809"> </A>Managing Shape Parts and Mesh Parts</H1><P CLASS="T1.Text1"><A NAME="pgfId=3814"> </A><A NAME="marker=3810"> </A>QuickDraw&nbsp;3D provides routines that you can use to get shape parts and mesh parts and to determine the shape objects that correspond to those parts. They use these types:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=17039"> </A>typedef TQ3ShapePartObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshPartObject;<BR>typedef TQ3MeshPartObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshFacePartObject;<BR>typedef TQ3MeshPartObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshEdgePartObject;<BR>typedef TQ3MeshPartObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshVertexPartObject;<BR></CODE><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3815"> </A>Q3ShapePart_GetShape</H2><P CLASS="T1.Text1"><A NAME="pgfId=3816"> </A><A NAME="marker=1391"> </A>You can use the <TT CLASS="cv">Q3ShapePart_GetShape</TT> function to get the shape object that contains a shape part object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=17045"> </A>TQ3Status Q3ShapePart_GetShape (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShapePartObject shapePartObject, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShapeObject *shapeObject);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17047"> </A><TT CLASS="cv">shapePartObject</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3818"> </A> A shape part object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17057"> </A><TT CLASS="cv">shapeObject</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3819"> </A>On exit, the shape object that contains the specified shape part object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3820"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3821"> </A>The <TT CLASS="cv">Q3ShapePart_GetShape</TT> function returns, in the <TT CLASS="cv">shapeObject</TT> parameter, the shape object that contains the shape part object specified by the <TT CLASS="cv">shapePartObject</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3826"> </A>Q3ShapePart_GetType</H2><P CLASS="T1.Text1"><A NAME="pgfId=3827"> </A><A NAME="marker=1404"> </A>You can use the <TT CLASS="cv">Q3ShapePart_GetType</TT> function to get the type of a shape part object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=17068"> </A>TQ3ObjectType Q3ShapePart_GetType (TQ3ShapePartObject shapePartObject);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17070"> </A><TT CLASS="cv">shapePartObject</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3829"> </A> A shape part object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3830"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3831"> </A>The <TT CLASS="cv">Q3ShapePart_GetType</TT> function returns, as its function result, the type identifier of the shape part object specified by the <TT CLASS="cv">shapePartObject</TT> parameter. If successful, <TT CLASS="cv">Q3ShapePart_GetType</TT> returns this constant:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=17082"> </A>kQ3ShapePartTypeMeshPart<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3833"> </A>If the type cannot be determined or is invalid, <TT CLASS="cv">Q3ShapePart_GetType</TT> returns the value <TT CLASS="cv">kQ3ObjectTypeInvalid</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3834"> </A>Q3MeshPart_GetType</H2><P CLASS="T1.Text1"><A NAME="pgfId=3836"> </A><A NAME="marker=3835"> </A><A NAME="marker=1415"> </A>You can use the <TT CLASS="cv">Q3MeshPart_GetType</TT> function to get the type of a mesh part object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=17086"> </A>TQ3ObjectType Q3MeshPart_GetType (TQ3MeshPartObject meshPartObject);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17088"> </A><TT CLASS="cv">meshPartObject</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3838"> </A> A mesh part object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3839"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3840"> </A>The <TT CLASS="cv">Q3MeshPart_GetType</TT> function returns, as its function result, the type identifier of the mesh part object specified by the <TT CLASS="cv">meshPartObject</TT> parameter. If successful, <TT CLASS="cv">Q3MeshPart_GetType</TT> returns one of these constants:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=17104"> </A>kQ3MeshPartTypeMeshFacePart<BR>kQ3MeshPartTypeMeshEdgePart<BR>kQ3MeshPartTypeMeshVertexPart<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3842"> </A>If the type cannot be determined or is invalid, <TT CLASS="cv">Q3MeshPart_GetType</TT> returns the value <TT CLASS="cv">kQ3ObjectTypeInvalid</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3843"> </A>Q3MeshPart_GetComponent</H2><P CLASS="T1.Text1"><A NAME="pgfId=3844"> </A><A NAME="marker=1425"> </A>You can use the <TT CLASS="cv">Q3MeshPart_GetComponent</TT> function to get the mesh component that contains a mesh part.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=17108"> </A>TQ3Status Q3MeshPart_GetComponent (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshPartObject meshPartObject, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshComponent *component);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17110"> </A><TT CLASS="cv">meshPartObject</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3846"> </A> A mesh part object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17120"> </A><TT CLASS="cv">component</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3847"> </A>On exit, the mesh component that contains the specified mesh part object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3848"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3849"> </A>The <TT CLASS="cv">Q3MeshPart_GetComponent</TT> function returns, in the <TT CLASS="cv">component</TT> parameter, the mesh component that contains the mesh part object specified by the <TT CLASS="cv">meshPartObject</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3850"> </A>Q3MeshFacePart_GetFace</H2><P CLASS="T1.Text1"><A NAME="pgfId=3851"> </A><A NAME="marker=1434"> </A>You can use the <TT CLASS="cv">Q3MeshFacePart_GetFace</TT> function to get the mesh face that corresponds to a mesh face part.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=17131"> </A>TQ3Status Q3MeshFacePart_GetFace (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshFacePartObject meshFacePartObject, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshFace *face);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17133"> </A><TT CLASS="cv">meshFacePartObject</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3853"> </A> A mesh face part object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17143"> </A><TT CLASS="cv">face</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3854"> </A>On exit, the mesh face that corresponds to the specified mesh face part object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3855"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3856"> </A>The <TT CLASS="cv">Q3MeshFacePart_GetFace</TT> function returns, in the <TT CLASS="cv">face</TT> parameter, the mesh face that corresponds to the mesh face part object specified by the <TT CLASS="cv">meshFacePartObject</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3857"> </A>Q3MeshEdgePart_GetEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=3858"> </A><A NAME="marker=1443"> </A>You can use the <TT CLASS="cv">Q3MeshEdgePart_GetEdge</TT> function to get the mesh edge that corresponds to a mesh edge part.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=17154"> </A>TQ3Status Q3MeshEdgePart_GetEdge (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshEdgePartObject meshEdgePartObject, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshEdge *edge);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17156"> </A><TT CLASS="cv">meshEdgePartObject</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3860"> </A> A mesh edge part object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17166"> </A><TT CLASS="cv">edge</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3861"> </A>On exit, the mesh edge that corresponds to the specified mesh face part object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3862"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3863"> </A>The <TT CLASS="cv">Q3MeshEdgePart_GetEdge</TT> function returns, in the <TT CLASS="cv">edge</TT> parameter, the mesh edge that corresponds to the mesh edge part object specified by the <TT CLASS="cv">meshEdgePartObject</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3864"> </A>Q3MeshVertexPart_GetVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=3865"> </A><A NAME="marker=1452"> </A>You can use the <TT CLASS="cv">Q3MeshVertexPart_GetVertex</TT> function to get the mesh vertex that corresponds to a mesh vertex part.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=17177"> </A>TQ3Status Q3MeshVertexPart_GetVertex (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshVertexPartObject meshVertexPartObject, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshVertex *vertex);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17179"> </A><TT CLASS="cv">meshVertexPartObject</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3867"> </A> A mesh vertex part object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=17189"> </A><TT CLASS="cv">vertex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3868"> </A>On exit, the mesh vertex that corresponds to the specified mesh vertex part object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3869"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3870"> </A>The <TT CLASS="cv">Q3MeshVertexPart_GetVertex</TT> function returns, in the <TT CLASS="cv">vertex</TT> parameter, the mesh vertex that corresponds to the mesh vertex part object specified by the <TT CLASS="cv">meshVertexPartObject</TT> parameter.<A NAME="marker=3871"> </A><A NAME="marker=3872"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>