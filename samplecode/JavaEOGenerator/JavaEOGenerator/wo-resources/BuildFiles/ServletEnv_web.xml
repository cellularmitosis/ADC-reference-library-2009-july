<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<!-- This web.xml file by itself will allow you to run the corresponding
     WebObjects application in a Servlet container. If you would like to
     merge the WebObjects application with your existing JSP/Servlet
     application, you have to merge this web.xml with your existing web.xml.

     NOTE: This file is normally included as the template file 'web.xml.template'.
     During the build process, the placeholders for WOROOT, LOCALROOT, WOAINSTALLROOT,
     WOAppMode, WOClassPath, WOApplicationClass and WOtaglib will be replaced
     with the appropriate values. Other parts of the template file may be
     customized as required.
     
     NOTE: WEBINFROOT is added to the WOClassPath at build time, but the replacement
     value is replaced at runtime to be the path to the WEB-INF directory. 

-->

<web-app>
  <context-param>
    <param-name>WOJarBundle</param-name>
    <param-value>%WOJarBundle%</param-value>
    <description>Whether this app is a "true" WAR, rather than a "stub" WAR or SSDD
       Note that WOROOT, LOCALROOT, WOAINSTALLROOT, WOClassPath are ignored if this is true 
       However, if this is true, WOMainBundle must be set to the main bundle name</description>
  </context-param>

  <context-param>
    <param-name>WOMainBundle</param-name>
    <param-value>%WOMainBundle%</param-value>
    <description>Sets the name of the main bundle. Only used if WOJarBundle is true</description>
  </context-param>

  <context-param>
    <param-name>WOROOT</param-name>
    <param-value>%WOROOT%</param-value>
    <description>Indicates the root where WebObjects frameworks are installed. In Mac OS X,
       for example, WO frameworks are located in the "/System/Library/Frameworks"
       directory; keeping in tradition, WOROOT is set to "/System". On Windows,
       it could be "c:\Apple", on Solaris, it could be "/opt/Apple".
       If "-DWOROOT=/path/to/somewhere" is defined (in the container startup script,
       for example), the value indicated here is ignored.</description>
  </context-param>

  <context-param>
    <param-name>LOCALROOT</param-name>
    <param-value>%LOCALROOT%</param-value>
    <description>Indicates the root where local frameworks are installed. In Mac OS X,
       for example, these frameworks are located in the "/Library/Frameworks"
       directory; keeping in tradition, LOCALROOT is set to "/". On Windows,
       it could be "c:\Apple\Local", on Solaris, it could be "/opt/Apple/Local".
       If "-DLOCALROOT=/path/to/somewhere" is defined (in the container startup script,
       for example), the value indicated here is ignored.</description>
  </context-param>

  <context-param>
    <param-name>WOAINSTALLROOT</param-name>
    <param-value>%WOAINSTALLROOT%</param-value>
    <description>Indicates the root where WebObjects applications are installed. In Mac OS X
       deployment, for example, WO applications are usually deployed in the
       "/Library/WebObjects/Applications" directory and WOAINSTALLROOT is set to
       "/Library/WebObjects/Applications". If "-DWOAINSTALLROOT=/path/to/somewhere"
       is defined (in the container startup script, for example), the value
       indicated here is ignored.</description>
  </context-param>

  <context-param>
    <param-name>WOAppMode</param-name>
    <param-value>%WOAppMode%</param-value>
    <description>Indicates if application is development or deployment mode. In development
       mode, images are vended by the application directly from frameworks. In
       deployment mode, images are vended by the webserver.</description>
  </context-param>
  
  <context-param>
    <param-name>WOClasspath</param-name>
    <param-value>%WOClasspath%</param-value>
    <description>This parameter points to the WebObjects directories required for
       this application. If a directory contains resources, they will be
       picked up; as well, if a directory contains JARs, they will be
       picked up. WOROOT, LOCALROOT or WOAINSTALLROOT placeholders here
       will be replaced at runtime with the appropriate values (Java System
       Properties if defined, the context-param values located above 
       otherwise). WEBINFROOT placeholders will be replaced at runtime 
       with the full path to the WEB-INF directory.</description>
  </context-param>

  <context-param>
    <param-name>WOApplicationClass</param-name>
    <param-value>%WOApplicationClass%</param-value>
    <description>Class name of the WOApplication subclass that defines the
       WebObjects application.</description>
  </context-param>

  <!-- The WebObjects Servlet that interfaces between the Servlet container
       world and the WebObjects world. -->
  <servlet>
    <servlet-name>WOServletAdaptor</servlet-name>
    <servlet-class>com.webobjects.jspservlet.WOServletAdaptor</servlet-class>
    <load-on-startup>5</load-on-startup>
  </servlet>



  <!-- URLs starting with 'WebObjects' use the WebObjects Servlet adaptor. --> 
  <servlet-mapping>
    <servlet-name>WOServletAdaptor</servlet-name>
    <url-pattern>/WebObjects/*</url-pattern>
  </servlet-mapping>
  
  <!-- Session timeout in minutes. This is for both JSP/Servlet and 
       WOSessions. Note this overrides the WebObjects session timeout.
       Uncomment the session-config block to use.
  -->  
  <!--   
  <session-config>
    <session-timeout>30</session-timeout>
  </session-config>
  -->
 

  <!-- This tag library allows the use of WOComponents within JSPs. -->
  <taglib>
    <taglib-uri>/WOtaglib</taglib-uri>
    <taglib-location>/WEB-INF/tlds/%WOTagLib%</taglib-location>
  </taglib>

  <resource-ref>
    <description>The data source to be used by EOF. If there are multiple data sources,
                 then the definition below must be used to configure which JDBC URL (Model) should
                 use which data source. If EOF should use a JDBC driver directly, this section must be commented out</description>
    <res-ref-name>jdbc/DefaultDataSource</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

<!-- **** ***** ***** 
     Debug logging and events Environment Entries
     **** ***** *****
-->
  <env-entry>
    <description>Enable certain debug groups. See the NSLog javadoc for details.</description>
    <env-entry-name>wo/NSDebugGroups</env-entry-name>
    <env-entry-value>NSLog.DebugGroupWebObjects</env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Set the detail logging level: DebugLevelOff, DebugLevelCritical, DebugLevelInformational, DebugLevelDetailed</description>
    <env-entry-name>wo/NSDebugLevel</env-entry-name>
    <env-entry-value>NSLog.DebugLevelInformational</env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Enables logging of rule firing</description>
    <env-entry-name>wo/D2WTraceRuleFiringEnabled </env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Enables logging of rule modifications</description>
    <env-entry-name>wo/D2WTraceRuleModificationsEnabled</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Enables logging of SQL sent by an application's EOAdapter to a data source</description>
    <env-entry-name>wo/EOAdaptorDebugEnabled</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
<!--
  <env-entry>
    <description>String defining the password that allows access to event logging data</description>
    <env-entry-name>wo/EOEventLoggingPassword</env-entry-name>
    <env-entry-value></env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
-->
  <env-entry>
    <description>Sets the limit of the event logging stack</description>
    <env-entry-name>wo/EOEventLoggingLimit</env-entry-name>
    <env-entry-value>200000</env-entry-value>
    <env-entry-type>java.lang.Long</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Enables logging if the event log limit is exceeded</description>
    <env-entry-name>wo/EOEventLoggingOverflowDisplay</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
<!--
  <env-entry>
    <description>String defining the password that allows access to the application's statistics</description>
    <env-entry-name>wo/WOStatisticsPassword</env-entry-name>
    <env-entry-value></env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
-->
  <env-entry>
    <description>true or false to enable or disable event logging in the application server</description>
    <env-entry-name>wo/WOEventLoggingEnabled</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Use Log4J logging</description>
    <env-entry-name>wo/NSUseLog4jLogging</env-entry-name>
    <env-entry-value>true</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Log4J logging string. Customize this in order to distinguish log messages coming from multiple applications, or to set up specific log4j appending configurations</description>
    <env-entry-name>wo/NSLog4jLoggerName</env-entry-name>
    <env-entry-value>%WOMainBundle%</env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>

<!-- **** ***** ***** 
     Development vs. Deployment Environment Entries
     **** ***** *****
-->
  <env-entry>
    <description>Enables component caching (not page caching). Should be true in deployment, false for development</description>
    <env-entry-name>wo/WOCachingEnabled</env-entry-name>
    <env-entry-value>true</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Enables rapid turnaround mode. Should be false in deployment, true in development</description>
    <env-entry-name>wo/WOAllowRapidTurnaround</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Enables refreshing of an application's resource list every time a resource cannot be found. This flag applies only to applications in rapid turnaround mode. When this flag is true, you can make changes to an application's resources (such as images) and immediately see the results of those changes in a running application. Doing so incurs overhead, so you may want to set this flag to false to improve page-loading speed during development. Should be false in deployment, true in development</description>
    <env-entry-name>wo/WOMissingResourceSearchEnabled</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Enables the generation of WOExceptionPages for direct action requests. Should be false in deployment, true in development</description>
    <env-entry-name>wo/WODisplayExceptionPages</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>true or false to determine whether or not HTML comments are included in the application's responses. Should be false in deployment, true in development</description>
    <env-entry-name>wo/WOIncludeCommentsInResponse</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Enables the Direct to Java Client Assistant in Direct to Java Client applications</description>
    <env-entry-name>wo/EOAssistantEnabled</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Enables the Web Services Assistant in a Direct to Web Services application</description>
    <env-entry-name>wo/WSAssistantEnabled</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>


<!-- **** ***** ***** 
     General Environment Entries
     **** ***** *****
-->
  <env-entry>
    <description>Enables concurrent processing of requests</description>
    <env-entry-name>wo/WOAllowsConcurrentRequestHandling</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>true or false to control what happens when a malformed cookie is received in a request</description>
    <env-entry-name>wo/WOAcceptMalformedCookies</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>Integer representing the default undo stack limit for the application's sessions</description>
    <env-entry-name>wo/WODefaultUndoStackLimit</env-entry-name>
    <env-entry-value>10</env-entry-value>
    <env-entry-type>java.lang.Integer</env-entry-type>
  </env-entry>
  <env-entry>
    <description>true or false to require or not require bind variables</description>
    <env-entry-name>wo/EOAdaptorUseBindVariables</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
<!--
  <env-entry>
    <description>String representing the currency symbol to use in the application</description>
    <env-entry-name>wo/NSCurrencySymbol</env-entry-name>
    <env-entry-value>$</env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
-->
  <env-entry>
    <description>true or false to control whether the XML parser performs validation while deserializing an XML document</description>
    <env-entry-name>wo/NSXMLValidation</env-entry-name>
    <env-entry-value>false</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>String representing the path to where the application may be found under the document root, not including the application name</description>
    <env-entry-name>wo/WOApplicationBaseURL</env-entry-name>
    <env-entry-value>/WebObjects</env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
<!--
  <env-entry>
    <description>String representing the name of the application executable</description>
    <env-entry-name>wo/WOApplicationName</env-entry-name>
    <env-entry-value>aName</env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
 -->
<!--
  <env-entry>
    <description>String representing the URL for the Web server including the path to the WebObjects CGI adaptor. This is controlled by the WebServerConfig .plist in the JavaWebObjects framework</description>
    <env-entry-name>wo/WOCGIAdaptorURL</env-entry-name>
    <env-entry-value>http://localhost/cgi-bin/WebObjects</env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
 -->      
  <env-entry>
    <description>Enables client-side page caching</description>
    <env-entry-name>wo/WOAllowsCacheControlHeader</env-entry-name>
    <env-entry-value>true</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>String representing the URLs of the frameworks to use when generating URLs for Web Server resources</description>
    <env-entry-name>wo/WOFrameworksBaseURL</env-entry-name>
    <env-entry-value>/WebObjects/Frameworks</env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
  <env-entry>
    <description>true or false to allow the retrieval of WSDL files in a Web services application</description>
    <env-entry-name>wo/WOGenerateWSDL</env-entry-name>
    <env-entry-value>true</env-entry-value>
    <env-entry-type>java.lang.Boolean</env-entry-type>
  </env-entry>
  <env-entry>
    <description>String representing the name of the mail server used to send messages created by WOMailDelivery</description>
    <env-entry-name>wo/WOSMTPHost</env-entry-name>
    <env-entry-value>smtp</env-entry-value>
    <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>
  
</web-app>
