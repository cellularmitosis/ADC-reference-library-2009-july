{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
\readonlydoc1{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fswiss\fcharset77 Haettenschweiler;\f2\fswiss\fcharset77 ArialMT;
\f3\fswiss\fcharset77 Arial-BoldMT;\f4\fnil\fcharset77 LucidaGrande;\f5\fswiss\fcharset77 Optima-Regular;
\f6\fnil\fcharset77 ProFont;\f7\fnil\fcharset77 LucidaGrande-Bold;\f8\fswiss\fcharset77 Helvetica-Oblique;
\f9\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red35\green110\blue37;\red0\green16\blue254;\red35\green25\blue245;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listlevel\levelnfc0\levelnfcn0\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\vieww9120\viewh8640\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf0 {{\NeXTGraphic Pasted Graphic.tiff \width700 \height700
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f1\fs72 \cf0 QTExtractAndConvertToAIFF
\f2\fs20 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf0 {{\NeXTGraphic Pasted Graphic 3.tiff \width700 \height700
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f2\fs20 \cf0 09/12/2006 initial release
\f3\b\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural
\cf0 \
Description
\f2\b0\fs20 :\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f4 \cf0 QTExtractAndConvertToAIFF
\f5\fs24 \CocoaLigature0  contains two Objective-C objects that are used together to implement audio extraction and audio conversion from a QuickTime Movie sound track to an AIFF file.\
\
The first is a simple class called AIFFWriter (a modified version of the AIFFWriter class that was included with the ExtractMovieAudioToAIFF sample) that encapsulates the functionality of two sets of APIs; QuickTime's Audio Extraction API's and Core Audio's Audio File APIs. The second is another simple class called AudioConverter which encapsulates Core Audio's Audio Converter API.\
\pard\tx480\tx960\tx1440\tx1920\tx2400\tx2880\tx3360\tx3840\tx4320\tx4800\tx5280\tx5760\tx6240\tx6720\tx7200\tx7680\tx8160\tx8640\tx9120\tx9600\tx10080\tx10560\tx11040\tx11520\tx12000\tx12480\tx12960\tx13440\tx13920\tx14400\tx14880\tx15360\tx15840\tx16320\tx16800\tx17280\tx17760\tx18240\tx18720\tx19200\tx19680\tx20160\tx20640\tx21120\tx21600\tx22080\tx22560\tx23040\tx23520\tx24000\tx24480\tx24960\tx25440\tx25920\tx26400\tx26880\tx27360\tx27840\tx28320\tx28800\tx29280\tx29760\tx30240\tx30720\tx31200\tx31680\tx32160\tx32640\tx33120\tx33600\tx34080\tx34560\tx35040\tx35520\tx36000\tx36480\tx36960\tx37440\tx37920\tx38400\tx38880\tx39360\tx39840\tx40320\tx40800\tx41280\tx41760\tx42240\tx42720\tx43200\tx43680\tx44160\tx44640\tx45120\tx45600\tx46080\tx46560\tx47040\tx47520\tx48000\ql\qnatural\pardirnatural
\cf0 \
The sample uses an instance of the AIFFWriter class to easily set up audio extraction from a QTKit QTMovie to an AIFF file. AIFFWriter uses an instance of the AudioConverter class to perform the conversion to a user selected destination format which is configured by the Standard Audio Dialog Component. The Audio Converter uses a Movie Audio Extraction Session in it's Read Input Procedure to pull audio out of the Movie.\
\
This sample uses the default extraction channel layout which is the aggregate channel layout of the movie (for example, all Rights mixed together, all Left Surrounds mixed together, etc).
\f6\fs18 \cf2 \
\

\f7\b\fs36 \cf0 \CocoaLigature1 Audio Conversion, Export, and Extraction
\fs38 \
\
\pard\pardeftab720\sa200\ql\qnatural

\f4\b0\fs24 \cf0 The new audio extraction API lets you retrieve mixed, uncompressed audio from a movie.\
Note that the audio extraction API currently (QuicKTime 7 - 7.1.2) 
\f8\i only
\f4\i0  mixes audio from sound tracks. Other media types, such as muxed MPEG-1 audio inside a program stream, are not currently supported.\
To use the audio extraction API, follow these steps:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls1\ilvl0\cf0 {\listtext	1.	}Begin by calling {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/QuickTime/Conceptual/QT7UpdateGuide/Chapter03/chapter_3_section_1.html#//apple_ref/c/func/MovieAudioExtractionBegin"}}{\fldrslt 
\f9\fs22 \cf3 MovieAudioExtractionBegin}}. This returns an opaque session object that you pass to subsequent extraction routines.\
{\listtext	2.	}You can then get the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/MusicAudio/Reference/CoreAudio/core_audio_types/chapter_6_section_4.html#//apple_ref/doc/c_ref/AudioStreamBasicDescription"}}{\fldrslt 
\f9\fs22 \cf3 AudioStreamBasicDescription}} for the audio or layout. Note that some properties are of variable size, such as the channel layout, depending on the audio format, so getting the information involves a two-step process.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\ql\qnatural
\ls1\ilvl1\cf0 {\listtext	1.	}First, you call {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/QuickTime/Conceptual/QT7UpdateGuide/Chapter03/chapter_3_section_1.html#//apple_ref/c/func/MovieAudioExtractionGetPropertyInfo"}}{\fldrslt 
\f9\fs22 \cf3 MovieAudioExtractionGetPropertyInfo}} to find out how much space to allocate.\
{\listtext	2.	}Next, call {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/QuickTime/Conceptual/QT7UpdateGuide/Chapter03/chapter_3_section_1.html#//apple_ref/c/func/MovieAudioExtractionGetProperty"}}{\fldrslt 
\f9\fs22 \cf3 MovieAudioExtractionGetProperty}} to obtain the actual value of the property.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls1\ilvl0\cf0 {\listtext	3.	}You can use the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/MusicAudio/Reference/CoreAudio/core_audio_types/chapter_6_section_4.html#//apple_ref/doc/c_ref/AudioStreamBasicDescription"}}{\fldrslt 
\f9\fs22 \cf3 AudioStreamBasicDescription}} to specify a different uncompressed format than Float 32. This causes the extraction API to automatically convert from the stored audio format into your specified format.\
{\listtext	4.	}Use the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/QuickTime/Conceptual/QT7UpdateGuide/Chapter03/chapter_3_section_1.html#//apple_ref/c/func/MovieAudioExtractionSetProperty"}}{\fldrslt 
\f9\fs22 \cf3 MovieAudioExtractionSetProperty}} function to specify channel remapping\'d0\'d0that is, a different layout\'d0\'d0sample rate conversion, and preferred sample size. You can also use this function to specify interleaved samples (default is non-interleaved) or to set the movie time to an arbitrary point.\
\pard\pardeftab720\sa200\ql\qnatural
\cf0 Note that there are basically two things you set here: an audio stream basic description (ASBD) and a channel layout. (ASBD sets the format, sample, number of channels, interleavings, and so on.)\
Setup is now complete. You can now make a series of calls to {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/QuickTime/Conceptual/QT7UpdateGuide/Chapter03/chapter_3_section_1.html#//apple_ref/doc/c_ref/MovieAudioExtractionFillBuffer"}}{\fldrslt 
\f9\fs22 \cf3 MovieAudioExtractionFillBuffer}} to receive uncompressed PCM audio in your chosen format.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls2\ilvl0\cf0 {\listtext	1.	}The default is for the first call to begin extracting audio at the start of the movie, and for subsequent calls to begin where the last call left off, but you can set the extraction point anywhere in the movie timeline by calling {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/QuickTime/Conceptual/QT7UpdateGuide/Chapter03/chapter_3_section_1.html#//apple_ref/doc/c_ref/MovieAudioExtractionSetProperty"}}{\fldrslt 
\f9\fs22 \cf3 MovieAudioExtractionSetProperty}} and setting the movie time.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls2\ilvl0{\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/QuickTime/Conceptual/QT7UpdateGuide/Chapter03/chapter_3_section_1.html#//apple_ref/doc/c_ref/MovieAudioExtractionFillBuffer"}}{\fldrslt 
\f9\fs22 \cf3 {\listtext	2.	}MovieAudioExtractionFillBuffer}} will set {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/QuickTime/APIREF/movieaudioextractionfillbuffer.htm#//apple_ref/doc/c_ref/kMovieAudioExtractionComplete"}}{\fldrslt 
\f9\fs22 \cf3 kMovieAudioExtractionComplete}} in 
\f8\i outFlags
\f4\i0  when you reach the end of the movie audio.\
{\listtext	3.	}You must call {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/QuickTime/Conceptual/QT7UpdateGuide/Chapter03/chapter_3_section_1.html#//apple_ref/doc/c_ref/MovieAudioExtractionEnd"}}{\fldrslt 
\f9\fs22 \cf3 MovieAudioExtractionEnd}} when you are done. This deallocates internal buffers and data structures that would otherwise continue to use memory and resources.\
\pard\pardeftab720\sa200\ql\qnatural

\f8\i \cf0 A caveat: 
\f4\i0 Ideally, the uncompressed samples would be bitwise identical whether you obtained the samples by starting at the beginning of the movie and iterating through it, or by randomly setting the movie time and extracting audio samples. This is typically the case, but for some compression schemes the output of the decompressor depends not only on the compressed sample, but the seed value in the decompressor that remains after previous operations.\
NOTE: The current release of QuickTime (QuickTime 7 - 7.1.2) does not perform the necessary work to determine what the seed value would be when the movie time is changed prior to extracting audio; while the extracted audio is generally indistinguishable by ear, it may not always be bitwise identical.\
\pard\pardeftab720\sa180\ql\qnatural

\f7\b\fs38 \cf0 Audio Converters and Codecs\
\pard\pardeftab720\sa200\ql\qnatural

\f4\b0\fs24 \cf0 An audio converter lets you convert audio data from one format to another. For example, you can make simple conversions such as changing the sample rate and interleaving or deinterleaving audio data streams, to more complex operations such as compressing or decompressing audio. Three types of conversions are possible:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls3\ilvl0\cf0 {\listtext	\'a5	}Decoding an audio format (such as AAC (Advanced Audio Coding)) to linear PCM format.\
{\listtext	\'a5	}Encoding linear PCM data into a different audio format.\
{\listtext	\'a5	}Translating between different variants of linear PCM (for example, converting 16-bit signed integer linear PCM to 32-bit floating point linear PCM).\
\pard\pardeftab720\sa200\ql\qnatural
\cf0 The Audio Converter API lets you create and manipulate audio converters. You can use the API with many built-in converters to handle most common audio formats. You can instantiate more than one converter at a time, and specify the converter to use when calling a conversion function. Each audio converter has properties that describe characteristics of the converter. For example, a channel mapping property also allows you to specify how the input channels should map to the output channels.\
You convert data by calling a conversion function with a particular converter instance, specifying where to find the input data and where to write the output. Most conversions require a callback function to periodically supply input data to the converter.\
An audio codec is a Component Manager component loaded by an audio converter to encode or decode a specific audio format. Typically a codec would decode to or encode from linear PCM. The Audio Codec API provides the Component Manager interface necessary for implementing an audio codec. After you create a custom codec, then you can use an audio converter to access it. {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/documentation/MusicAudio/Conceptual/CoreAudioOverview/SupportedAudioConverterFormats/chapter_952_section_1.html#//apple_ref/doc/uid/TP40003577-CH7-SW1"}}{\fldrslt \cf4 \'d2Supported Audio File and Data Formats\'d3}} lists standard Core Audio codecs for translating between compressed formats and Linear PCM.\
For examples of how to use audio converters, see 
\f9\fs22 SimpleSDK/ConvertFile
\f4\fs24  and the 
\f9\fs22 AFConvert
\f4\fs24  command-line tool in 
\f9\fs22 Services/AudioFileTools
\f4\fs24  in the Core Audio SDK.\
\pard\pardeftab720\sa200\ql\qnatural

\f7\b\fs36 \cf0 References
\f4\b0 :
\f2\fs20 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural
\cf0 http://developer.apple.com/documentation/QuickTime/Conceptual/QT7UpdateGuide/Chapter02/chapter_2_section_6.html\
http://developer.apple.com/documentation/MusicAudio/Conceptual/CoreAudioOverview/WhatsinCoreAudio/chapter_3_section_4.html}