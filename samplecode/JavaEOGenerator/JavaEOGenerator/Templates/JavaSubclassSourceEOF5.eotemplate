//
// <wo:WOString value="[entity.classNameWithoutPackage]"/>.java
//
// copyright <wo:WOString value="[copyrightYear]"/> <wo:WOString value="[copyrightBy]"/>

package <wo:WOString value="[entity.classPackageName]"/>;

import com.webobjects.foundation.*;
import com.webobjects.eocontrol.*;
import com.webobjects.eoaccess.*;
import java.math.BigDecimal;
import java.util.*;

public class <wo:WOString value="[entity.classNameWithoutPackage]"/> extends <wo:WOString value="[entity.classPackageName]"/>.base.<wo:WOString value="[superClassPrefix]"/><wo:WOString value="[entity.classNameWithoutPackage]"/> {
    private static org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(<wo:WOString value="[entity.classNameWithoutPackage]"/>.class);

    public <wo:WOString value="[entity.classNameWithoutPackage]"/>() {
        super();
    }

    private static NSArray&lt;<wo:WOString value="[entity.classNameWithoutPackage]"/>&gt; _allObjects() {
        return (NSArray)EOSharedEditingContext.defaultSharedEditingContext().objectsByEntityName().objectForKey("<wo:WOString value="[entity.name]"/>");
    }
    public static NSArray&lt;<wo:WOString value="[entity.classNameWithoutPackage]"/>&gt; allObjects() {
    	if (_allObjects() != null) {
    		return _allObjects();
    	} else {
    		return NSArray.emptyArray();
    	}
    }

    public static NSArray&lt;<wo:WOString value="[entity.classNameWithoutPackage]"/>&gt; allObjects(EOEditingContext aContext) {
        return <wo:WOString value="[superClassPrefix]"/><wo:WOString value="[entity.classNameWithoutPackage]"/>.objectsForFetchAll(aContext);
    }

    public void awakeFromInsertion(com.webobjects.eocontrol.EOEditingContext anEditingContext) {
        super.awakeFromInsertion(anEditingContext);
        // Set default value for the object after its creation
    }

    public void awakeFromFetch(com.webobjects.eocontrol.EOEditingContext anEditingContext) {
        super.awakeFromFetch(anEditingContext);
        // Set default value for the object after its fetch
    }

}
