<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Registering a Shared Library</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=14465"> </A><A NAME="14852"> </A>Registering a Shared Library</H1><P CLASS="T1.Text1"><A NAME="pgfId=14471"> </A>QuickDraw&nbsp;3D provides routines to register and unregister a shared library.</P><P CLASS="T1.Text1"><A NAME="pgfId=16246"> </A>These routines let you provide an entry point for Windows dynamic link libraries or an initialization function for Mac&nbsp;OS shared libraries. Some libraries need to be loaded in a specific order; the registration mechanism lets QuickDraw&nbsp;3D load libraries in the order that it needs to, and not be bound by the order of shared libraries on disk (for example, in the Mac&nbsp;OS Extensions folder). </P><P CLASS="T1.Text1"><A NAME="pgfId=16277"> </A>The <TT CLASS="cv">Q3XSharedLibrary_Register</TT> routine notifies QuickDraw&nbsp;3D that there is a library to be loaded and provides the entry point to the registration function.  To use this function you need to fill out a <TT CLASS="cv">TQ3XSharedLibraryInfo</TT> block, which provides information that the system will need to load the library. </P><P CLASS="T1.Text1"><A NAME="pgfId=16317"> </A>Usually the <TT CLASS="cv">Q3XSharedLibrary_Register</TT> function will be called from the shared library entry point. See the documentation for your development system, or the examples on the QuickDraw&nbsp;3D SDK, for information about how to set this up. The <TT CLASS="cv">Q3XSharedLibrary_Unregister</TT> function is used to unregister the library.  It is usually called from the shared library termination routine. Windows programming is slightly different because a single <TT CLASS="cv">DLLMain</TT> function is called with a selector for registration and unregistration.</P><P CLASS="T1.Text1"><A NAME="pgfId=16307"> </A>The code in <A HREF="qd3dobjects.16.htm#36668" CLASS="XRef">Listing&nbsp;6</A> illustrates register and unregister functions for both Windows and Mac&nbsp;OS. It is taken from the sample renderer example on the QuickDraw&nbsp;3D SDK. In the windows version there is a switch statement for registration and unloading, whereas in the Mac&nbsp;OS version these processes are handled by two distinct functions.</P><P CLASS="L.Listing"><A NAME="pgfId=16297"> </A>Listing&nbsp;6<A NAME="36668"> </A>Library registering and unregistering</P><CODE CLASS="Cv.Code"><A NAME="pgfId=21703"> </A>/* Mac OS registration &amp; termination */<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21707"> </A>OSErr SR_Initialize(<BR>&nbsp;&nbsp;&nbsp;&nbsp;const CFragInitBlock&nbsp;&nbsp;&nbsp;&nbsp;*initBlock)<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3XSharedLibraryInfo&nbsp;&nbsp;&nbsp;sharedLibraryInfo;<BR>&nbsp;&nbsp;&nbsp;&nbsp;OSErr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;err = noErr;<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21711"> </A>&nbsp;&nbsp;&nbsp;&nbsp;sharedLibraryInfo.registerFunction &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= SR_Register;<BR>&nbsp;&nbsp;&nbsp;&nbsp;sharedLibraryInfo.sharedLibrary&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= (unsigned long)initBlock-&gt;connectionID;<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21715"> </A>&nbsp;&nbsp;&nbsp;&nbsp;Q3XSharedLibrary_Register(&amp;sharedLibraryInfo);<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21719"> </A>&nbsp;&nbsp;&nbsp;&nbsp;SRgSharedLibrary = (unsigned long)initBlock-&gt;connectionID;<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21723"> </A>&nbsp;&nbsp;&nbsp;&nbsp;err = SR_CreateAliasHandle(initBlock);<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21727"> </A>&nbsp;&nbsp;&nbsp;&nbsp;return (err);<BR>}<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21731"> </A>TQ3Status SR_Exit(<BR>&nbsp;&nbsp;&nbsp;&nbsp;void)<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;if (SRgSharedLibrary != NULL) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3XSharedLibrary_Unregister(SRgSharedLibrary);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SRgSharedLibrary = NULL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;}<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21735"> </A>&nbsp;&nbsp;&nbsp;&nbsp;SR_FreeAliasHandle();<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21739"> </A>&nbsp;&nbsp;&nbsp;&nbsp;return (kQ3Success);<BR>}<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21743"> </A>/* Win32 extension entry point*/<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21747"> </A>HINSTANCE&nbsp;&nbsp;&nbsp;hinstMyDLL = NULL;<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21751"> </A>BOOL WINAPI DllMain(<BR>&nbsp;&nbsp;&nbsp;&nbsp;HINSTANCE&nbsp;&nbsp;&nbsp;hinstDLL,<BR>&nbsp;&nbsp;&nbsp;&nbsp;DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fdwReason,<BR>&nbsp;&nbsp;&nbsp;&nbsp;LPVOID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lpvReserved)<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3XSharedLibraryInfo&nbsp;&nbsp;&nbsp;sharedLibraryInfo;<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21755"> </A>&nbsp;&nbsp;&nbsp;&nbsp;if (fdwReason == DLL_PROCESS_ATTACH) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hinstMyDLL = hinstDLL;<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21759"> </A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sharedLibraryInfo.registerFunction = SR_Register;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sharedLibraryInfo.sharedLibrary = (unsigned long)hinstDLL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Q3XSharedLibrary_Register(&amp;sharedLibraryInfo) == kQ3Success) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return TRUE;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return FALSE;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>&nbsp;&nbsp;&nbsp;&nbsp;}<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21763"> </A>&nbsp;&nbsp;&nbsp;&nbsp;if (fdwReason == DLL_PROCESS_DETACH) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3XSharedLibrary_Unregister((unsigned long)hinstDLL);<BR>&nbsp;&nbsp;&nbsp;&nbsp;}<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=21767"> </A>&nbsp;&nbsp;&nbsp;&nbsp;return (TRUE);<BR>}<BR></CODE><DIV><H3 CLASS="RoH.RoutineHeading"><A NAME="pgfId=14475"> </A>Q3XSharedLibrary_Register</H3><P CLASS="T1.Text1"><A NAME="pgfId=14476"> </A>You can use the Q3XSharedLibrary_Register function to notify QuickDraw&nbsp;3D that there is a library to be loaded and provide the entry point to the library's registration function.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=21771"> </A>typedef struct TQ3XSharedLibraryInfo {<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3XSharedLibraryRegister&nbsp;&nbsp;&nbsp;registerFunction;<BR>&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sharedLibrary;<BR>} TQ3XSharedLibraryInfo;<BR></CODE><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21777"> </A>TQ3Status Q3XSharedLibrary_Register(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XSharedLibraryInfo&nbsp;&nbsp;&nbsp;&nbsp;*sharedLibraryInfo);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21781"> </A>sharedLibraryInfo</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=14478"> </A> 	Pointer to a struct of type TQ3XSharedLibraryInfo.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21792"> </A>sharedLibrary</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=17389"> </A> 	Entry point to the shared library.</DD></DL COMPACT><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=14481"> </A>DESCRIPTION</H4><P CLASS="T1.Text1"><A NAME="pgfId=14482"> </A>The Q3XSharedLibrary_Register function registers a shared library with QuickDraw&nbsp;3D. </P></DIV></DIV><DIV><H3 CLASS="RoH.RoutineHeading"><A NAME="pgfId=14484"> </A>Q3XSharedLibrary_Unregister</H3><P CLASS="T1.Text1"><A NAME="pgfId=14485"> </A>You can use the Q3XSharedLibrary_Unregister function to unregister a QuickDraw&nbsp;3D shared library.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21804"> </A>TQ3Status Q3XSharedLibrary_Unregister(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;sharedLibrary);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21806"> </A>sharedLibrary</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=17397"> </A> 	Entry point to the shared library.</DD></DL COMPACT><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=14490"> </A>DESCRIPTION</H4><P CLASS="T1.Text1"><A NAME="pgfId=14491"> </A>The Q3XSharedLibrary_Unregister function unregisters a QuickDraw&nbsp;3D shared library whose entry point is designated by sharedLibrary.</P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>