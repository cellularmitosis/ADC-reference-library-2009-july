{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset77 Haettenschweiler;\f1\fswiss\fcharset77 Arial-BoldMT;\f2\fswiss\fcharset77 ArialMT;
}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs48 \cf0 QTCoreVideo101
\fs72 \

\f1\b\fs18 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\fs24 \cf0 Description:\

\f2\b0\fs18 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural
\cf0 QTCoreVideo101 is a cocoa application demonstrating (in the least amount of code possible) how to render a QuickTime Movie using OpenGL and the new video pipeline. It is a good place to start for developers looking at OpenGL, Core Video and Visual Contexts for the very first time.\
In this sample we're using the following framework APIs:\
QTKit is used to play back a QuickTime Movie.\
QuickTime Visual Context is used as the drawing destination for the QuickTime Movie.\
NSOpenGLView is used as our view, this is where we draw a video frame on a teapot or quad.\
Core Video pipeline:\
	Movie -> Visual context -> OpenGL transforms -> OpenGL rendering ----> Hardware\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f1\b \cf0 What is Core Video:
\f2\b0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sa240\ql\qnatural
\cf0 Core Video delivers a modern foundation for video services providing a bridge between QuickTime and the GPU for hardware-accelerated video processing. This highly optimized pipeline for video presentation increases performance and reduces CPU load, freeing up resources for other operations.}