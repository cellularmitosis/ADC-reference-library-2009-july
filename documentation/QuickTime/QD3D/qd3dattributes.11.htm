<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Copy Methods</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3181"> </A>Copy Methods</H1><P CLASS="T1.Text1"><A NAME="pgfId=3183"> </A>An application-defined attribute or element type may support any of four copying methods. The reason for defining four different methods is to let you customize the semantics of your <TT CLASS="cv">Q3AttributeSet_Add</TT> and <TT CLASS="cv">Q3AttributeSet_Get</TT> calls to allow for various meanings of the <TT CLASS="cv">data</TT> parameter.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=2916"> </A>TQ3XElementCopyAddMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=2917"> </A>The TQ3XElementCopyAddMethod functionality is optional. If included, it supports adding a new attribute or element type to an attribute set. If it is not included, the default action is a memory copy of <TT CLASS="cv">sizeOfElement</TT> bytes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6631"> </A>#define kQ3XMethodTypeElementCopyAdd Q3_METHOD_TYPE('e','c','p','a')<BR></CODE><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6637"> </A>typedef TQ3Status (*TQ3XElementCopyAddMethod)(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const void&nbsp;&nbsp;&nbsp;&nbsp;*fromAPIElement,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*toInternalElement);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6641"> </A>fromAPIElement</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=2920"> </A> 	API element to copy from.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6652"> </A>toInternalElement</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=2921"> </A> 	Internal element to copy to.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2923"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=2924"> </A>The TQ3XElementCopyAddMethod method is called when adding a new attribute type to an attribute set, using <TT CLASS="cv">Q3AttributeSet_Add</TT>. The application-defined object is passed whatever pointer was passed in the <TT CLASS="cv">Q3AttributeSet_Add</TT> call as the fromAPIElement parameter, and in toInternalElement a pointer to an empty, uninitialized block of size <TT CLASS="cv">sizeOfElement</TT> (obtained from the registration call).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=2926"> </A>TQ3XElementCopyReplaceMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=2927"> </A>The TQ3XElementCopyReplaceMethod functionality is optional. If included, it supports replacing an existing attribute or element type. If it is not included, the default action is a memory copy of <TT CLASS="cv">sizeOfElement</TT> bytes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6664"> </A>#define kQ3XMethodTypeElementCopyReplace Q3_METHOD_TYPE('e','c','p','r')<BR></CODE><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6670"> </A>typedef TQ3Status (*TQ3XElementCopyReplaceMethod)(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const void&nbsp;&nbsp;&nbsp;&nbsp;*fromAPIElement,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ontoInternalElement);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6674"> </A>fromAPIElement</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3014"> </A> 	API element to copy from.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6685"> </A>ontoInternalElement</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3015"> </A> 	Internal element to replace with copy.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2933"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=2934"> </A>The TQ3XElementCopyReplaceMethod method is called when replacing an existing attribute type in an attribute set, using <TT CLASS="cv">Q3AttributeSet_Add</TT>.The application-defined object is passed whatever pointer was passed in the <TT CLASS="cv">Q3AttributeSet_Add</TT> call as the fromAPIElement parameter, and in ontoInternalElement a pointer to an existing block of size <TT CLASS="cv">sizeOfElement</TT> (obtained from the registration call) that has previously been initialized with a <TT CLASS="cv">CopyAdd</TT> call.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=2936"> </A>TQ3XElementCopyGetMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=2937"> </A>The TQ3XElementCopyGetMethod functionality is optional. If included, it supports fetching an attribute or element from an attribute set. If it is not included, the default action is a memory copy of <TT CLASS="cv">sizeOfElement</TT> bytes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6697"> </A>#define kQ3XMethodTypeElementCopyGet Q3_METHOD_TYPE('e','c','p','g')<BR></CODE><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6703"> </A>typedef TQ3Status (*TQ3XElementCopyGetMethod)(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const void&nbsp;&nbsp;&nbsp;&nbsp;*fromInternalElement,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*toAPIElement);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6707"> </A>fromInternalElement</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=2940"> </A> 	Internal element to copy from.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6718"> </A>toAPIElement</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=2941"> </A> 	API element to copy to.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2943"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=2944"> </A>The TQ3XElementCopyGetMethod method is called when obtaining an attribute from an attribute set by means of <TT CLASS="cv">Q3AttributeSet_Get</TT>. The application-defined object is passed in fromInternalElement a pointer to an existing block of size <TT CLASS="cv">sizeOfElement</TT> (determined by the registration call) that has been initialized with a <TT CLASS="cv">CopyAdd</TT> call. It is passed in toAPIElement whatever pointer was passed in the <TT CLASS="cv">Q3AttributeSet_Get</TT> call.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=2946"> </A>TQ3XElementCopyDuplicateMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=2947"> </A>The TQ3XElementCopyDuplicateMethod functionality is optional. If included, it supports internal duplication of attributes or elements. If it is not included, the default action is a memory copy of <TT CLASS="cv">sizeOfElement</TT> bytes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6730"> </A>#define kQ3XMethodTypeElementCopyDuplicate Q3_METHOD_TYPE('e','c','p','d')<BR></CODE><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6736"> </A>typedef TQ3Status (*TQ3XElementCopyDuplicateMethod)(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const void&nbsp;&nbsp;&nbsp;&nbsp;*fromInternalElement,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*toInternalElement);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6740"> </A>fromInternalElement</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3029"> </A> 	Internal element to copy from.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6751"> </A>toInternalElement</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=2952"> </A> 	Internal element to copy to.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2953"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=2954"> </A>The TQ3XElementCopyDuplicateMethod method is called when <TT CLASS="cv">Q3Object_Duplicate</TT> is called for an attribute set or element set. It copies data from a valid block of size <TT CLASS="cv">sizeOfElement</TT> (determined by the registration call) to another block of size <TT CLASS="cv">sizeOfElement</TT>. The block copied into must be invalid.</P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>