<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Adding Gradients</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>Inside Macintosh: QuickTime Reference</I><P>| <A HREF="refVectors.38.htm">Previous</A> | <A HREF="refVectors.1.htm">Chapter Contents</A> | <A HREF="refVectors.htm">Chapter Top</A> | <A HREF="refVectors.3a.htm">Next</A> | <!-- QTnavbar end --><H1 CLASS="H2.Heading2"><A NAME="pgfId=34866"> </A>Adding Gradients</H1><P CLASS="T1.Text1"><A NAME="pgfId=36549"> </A>You specify gradient fills and their attributes by including these atoms in a vector data stream:</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=36574"> </A>You specify the type of gradient (either linear or circular) with a <TT CLASS="cv">kCurveGradientTypeAtom</TT> atom.</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=36596"> </A>For linear gradients, you can specify the direction in which the gradient is drawn with a <TT CLASS="cv">kCurveGradientAngleAtom</TT> atom. You specify this direction with an angle: for example, 0.0 specifies a top-to-bottom gradient, 90.0 specifies a right-to-left gradient, 180.0 specifies a bottom-to-top gradient, and 270.0 specifies a left-to-right gradient.</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=36575"> </A>For circular gradients, you can specify the radius of the gradient with a <TT CLASS="cv">kCurveGradientRadiusAtom</TT> atom.</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=36576"> </A>You specify the colors for gradients with a <TT CLASS="cv">kCurveGradientRecordAtom</TT> atom. A gradient must have at least two colors, for the beginning and end, but it can also any number of intermediate colors. Each color is specified by a <TT CLASS="cv">GradientColorRecord</TT> structure. You can also add a <TT CLASS="cv">kCurveGradientRecordAtom</TT> atom without data to disable gradient fills.</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=36577"> </A>You can specify an offset for gradients with a <TT CLASS="cv">kCurveGradientOffsetAtom</TT> atom. For circular gradients, this specifies the top left offset from the path being drawn. For linear gradients, it is the offset from the center of the rotated gradient line.</LI></UL><P CLASS="T1.Text1"><A NAME="pgfId=36559"> </A>For more information about gradients, see <A HREF="refVectors.31.htm#27338" CLASS="XRef">&quot;Gradients for Path Fills&quot;</A>.</P><P CLASS="T1.Text1"><A NAME="pgfId=36619"> </A><A HREF="refVectors.39.htm#14516" CLASS="XRef">Listing&nbsp;6</A> shows how to create a rectangle with a left-to-right linear gradient fill.</P><P CLASS="L.Listing"><A NAME="pgfId=36620"> </A>Listing&nbsp;6	<A NAME="14516"> </A>Adding a left-to-right linear gradient fill to a rectangle</P><CODE CLASS="Cv.Code"><A NAME="pgfId=43594"> </A>ComponentInstance vectorCodec;<BR>Handle streamH;<BR>Handle pathH;<BR>gxPoint points[4];<BR>Boolean isOnCurve[4];<BR>GradientColorRecord gradientColors[2];<BR>ARGBColor white, black;<BR>int i;<BR>long value;<BR><BR>/* specify the gradient colors and where they start and end */<BR>white.alpha = 255;<BR>white.red = 255;<BR>white.green = 255;<BR>white.blue = 255;<BR>black.alpha = 255;<BR>black.red = 0;<BR>black.green = 0;<BR>black.blue = 0;<BR>gradientColors[1].thisColor = white;<BR>gradientColors[1].endingPercentage = ff(0);<BR>gradientColors[2].thisColor = black;<BR>gradientColors[2].endingPercentage = ff(1);<BR><BR>/* open the vector codec component */<BR>OpenADefaultComponent (decompressorComponentType,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kVectorCodecType, &amp;vectorCodec);<BR><BR>/* create a new vector data stream */<BR>CurveCreateVectorStream (vectorCodec, streamH);<BR>value=kLinearGradient;<BR><BR>/* add an atom to the vector data stream that specifies to <BR>&nbsp;&nbsp;&nbsp;use linear gradient fills for subsequent paths */<BR>CurveAddAtomToVectorStream (ci, kCurveGradientTypeAtom, sizeof(long),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;value, streamH);<BR><BR>/* add an atom to the vector data stream that specifies to <BR>&nbsp;&nbsp;&nbsp;draw linear gradient fills from left to right for subsequent paths */<BR>CurveAddAtomToVectorStream (ci, kCurveGradientAngleAtom, sizeof(Fixed),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ff(270), streamH);<BR><BR>/* add an atom to the vector data stream that specifies<BR>&nbsp;&nbsp;&nbsp;gradient colors */<BR>CurveAddAtomToVectorStream (ci, kCurveGradientRecordAtom,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sizeof(GradientColorRecord)*2,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gradientColors, streamH);<BR><BR>/* specify the points for the path and whether each one is <BR>&nbsp;&nbsp;&nbsp;on the path */<BR>points[0].x = ff(150);<BR>points[0].y = ff(150);<BR>isOnCurve[0] = TRUE;<BR>points[1].x = ff(300);<BR>points[1].y = ff(150);<BR>isOnCurve[1] = TRUE;<BR>points[2].x = ff(300);<BR>points[2].y = ff(100);<BR>isOnCurve[2] = TRUE;<BR>points[3].x = ff(100);<BR>points[3].y = ff(100);<BR>isOnCurve[3] = TRUE;<BR><BR>/* create the path and add the points to it */<BR>CurveNewPath (vectorCodec, &amp;pathH);<BR>for (i = 0; i &lt;= 3; i++)<BR>&nbsp;&nbsp;&nbsp;&nbsp;CurveInsertPointIntoPath (vectorCodec, &amp;points[i], pathH,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1, i, isOnCurve[i]);<BR><BR>/* add the path to the vector data stream */<BR>CurveAddPathAtomToVectorStream (vectorCodec, pathH, streamH);<BR><BR>/* mark the end of the vector data stream by adding a <BR>&nbsp;&nbsp;&nbsp;kCurveEndAtom atom to the stream */<BR>CurveAddZeroAtomToVectorStream (vectorCodec, streamH);<BR><BR>/* use the vector codec here to decompress and display the vector data */<BR><BR>/* dispose of stream and path handles when done */<BR>DisposeHandle (streamH);<BR>DisposeHandle (pathH);<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=36644"> </A><A HREF="refVectors.39.htm#26920" CLASS="XRef">Figure&nbsp;67</A> shows what is drawn for this vector data stream.</P><P CLASS="Fg.Figure"><A NAME="pgfId=36655"> </A>Figure&nbsp;67 <A NAME="26920"> </A>A rectangle with a linear left-to-right gradient fill</P><DIV><IMG SRC="GR1-L-12.c.gif"><hr>&#169; 1999 Apple Computer, Inc.<!-- QTnavbar start --><P><I>Inside Macintosh: QuickTime Reference</I><P>| <A HREF="refVectors.38.htm">Previous</A> | <A HREF="refVectors.1.htm">Chapter Contents</A> | <A HREF="refVectors.htm">Chapter Top</A> | <A HREF="refVectors.3a.htm">Next</A> | <!-- QTnavbar end --></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>