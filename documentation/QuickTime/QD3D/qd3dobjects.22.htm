<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Object Creation and Deletion</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=11208"> </A>Object Creation and Deletion</H1><P CLASS="T1.Text1"><A NAME="pgfId=11209"> </A>Object creation and deletion is similar to object registration, except that the data being operated on is the instance data. The <TT CLASS="cv">TQ3XObjectNewMethod</TT> method should initialize all data in the private data structure and allocate any memory needed to copy the data in. The <TT CLASS="cv">TQ3XObjectDeleteMethod</TT> method should deallocate any data in the private data structure of the object.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=13057"> </A>TQ3XObjectNewMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=13058"> </A>The TQ3XObjectNewMethod function, returned by the kQ3XMethodTypeObjectNew method, initializes data in the object's private data structure and allocates the required memory.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=22369"> </A>#define kQ3XMethodTypeObjectNew Q3_METHOD_TYPE('n','e','w','o')<BR></CODE><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=22375"> </A>typedef TQ3Status (*TQ3XObjectNewMethod)(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;object,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*privateData,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*parameters);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22379"> </A>object</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13061"> </A>An object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22389"> </A>privateData</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13062"> </A>Pointer to the object's private data.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22398"> </A>parameters</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13063"> </A>Pointer to parameters to be passed.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=13064"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=13192"> </A>The <TT CLASS="cv">TQ3XObjectNewMethod</TT> method should initialize all data in the private data structure (possibly with parameters) and allocate any memory needed to copy the data in. If <TT CLASS="cv">instanceSize</TT> in the previous <TT CLASS="cv">Q3ObjectHierarchy_RegisterClass</TT> call was nonzero, a <TT CLASS="cv">TQ3ObjectNewMethod</TT> is required. If <TT CLASS="cv">instanceSize</TT> was 0, the TQ3XObjectNewMethod method is never called.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=13067"> </A>TQ3XObjectDeleteMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=13068"> </A>The <TT CLASS="cv">TQ3XObjectDeleteMethod</TT> function, which is returned by the <TT CLASS="cv">kQ3XMethodTypeObjectDelete</TT> method, deallocates data in the object's private data structure.</P><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22407"> </A><TT CLASS="cv">#define kQ3XMethodTypeObjectDelete Q3_METHOD_TYPE('d','l','t','e')</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13123"> </A><TT CLASS="cv"></TT>&nbsp;</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22415"> </A><TT CLASS="cv">typedef void (*TQ3XObjectDeleteMethod)(</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13124"> </A> TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;object, void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*privateData<TT CLASS="cv">);</TT></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22428"> </A>object</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13139"> </A>An object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22437"> </A>privateData</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13140"> </A>Pointer to the object's private data.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=13074"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=13075"> </A>The <TT CLASS="cv">TQ3XObjectDeleteMethod</TT> method deallocates any data in the private data structure of the object. If <TT CLASS="cv">instanceSize</TT> in the <TT CLASS="cv">Q3ObjectHierarchy_RegisterClass</TT> call was nonzero, a <TT CLASS="cv">TQ3XObjectDeleteMethod</TT> is required. If <TT CLASS="cv">instanceSize</TT> was 0, the <TT CLASS="cv">TQ3XObjectDeleteMethod</TT> method is never called.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=13081"> </A>TQ3XObjectDuplicateMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=13082"> </A>The TQ3XObjectDuplicateMethod function, which is returned by the kQ3XMethodTypeObjectDuplicate method, duplicates an object and copies its private instance data.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=22448"> </A>#define kQ3XMethodTypeObjectDuplicate Q3_METHOD_TYPE('d','u','p','l')<BR></CODE><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=22454"> </A>typedef TQ3Status (*TQ3XObjectDuplicateMethod)(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fromObject,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const void&nbsp;&nbsp;&nbsp;&nbsp;*fromPrivateData,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toObject,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const void&nbsp;&nbsp;&nbsp;&nbsp;*toPrivateData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22458"> </A>fromObject</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13085"> </A>Object to be copied.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22468"> </A>fromPrivateData</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13314"> </A> 	Pointer to private data of object to be copied.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22478"> </A>toObject</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13315"> </A>Object to be copied into.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22487"> </A>toPrivateData</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=13316"> </A> 	Pointer to private data of object to be copied into.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=13088"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=13256"> </A>The <TT CLASS="cv">TQ3XObjectDuplicateMethod</TT> method should copy the private instance data from <TT CLASS="cv">fromPrivateData</TT> to <TT CLASS="cv">toPrivateData</TT> and return <TT CLASS="cv">kQ3Success</TT> if sucessful. Otherwise, it should deallocate anything it has allocated, clean up its parent classes, and return <TT CLASS="cv">kQ3Failure</TT>. <TT CLASS="cv">TQ3XObjectDuplicateMethod</TT> is called in the same way as TQ3XObjectNewMethod and <TT CLASS="cv">TQ3XObjectDeleteMethod</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=13268"> </A>EXAMPLE</H3><CODE CLASS="Cv.Code"><A NAME="pgfId=22499"> </A>TQ3Status Q3FooGroup_Duplicate(<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src,<BR>&nbsp;&nbsp;&nbsp;&nbsp;TFooGroupPrivate &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*srcPriv,<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dst,<BR>&nbsp;&nbsp;&nbsp;&nbsp;TFooGroupPrivate &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dstPriv)<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=22503"> </A>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;*dstPriv = *srcPriv;<BR>&nbsp;&nbsp;&nbsp;&nbsp;return kQ3Success;<BR>}<BR></CODE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=14448"> </A>TQ3XObjectUnregisterMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=14449"> </A>The TQ3XObjectUnregisterMethod function, which is returned by the kQ3MethodTypeObjectUnregister method, removes a custom object class.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=22507"> </A>#define kQ3MethodTypeObjectUnregister Q3_METHOD_TYPE('u','n','r','g')<BR></CODE><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=22511"> </A>typedef TQ3Status (*TQ3XObjectUnregisterMethod)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(TQ3XObjectClass&nbsp;&nbsp;&nbsp;&nbsp;objectClass);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=22513"> </A><TT CLASS="cv">objectClass</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=14451"> </A>An object class.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=14452"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=14453"> </A>The TQ3XObjectUnregisterMethod function unregisters the custom object class specified by the <TT CLASS="cv">objectClass</TT> parameter.</P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>