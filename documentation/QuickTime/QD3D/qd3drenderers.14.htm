<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing Renderer Features</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=5212"> </A>Managing Renderer Features</H1><P CLASS="T1.Text1"><A NAME="pgfId=5217"> </A>QuickDraw&nbsp;3D provides routines that you can use to manage a renderer's features.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5768"> </A>Q3Renderer_HasModalConfigure</H2><P CLASS="T1.Text1"><A NAME="pgfId=5773"> </A>You can use the <TT CLASS="cv">Q3Renderer_HasModalConfigure</TT> function to determine whether a renderer can display a modal settings dialog box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=19738"> </A>TQ3Boolean Q3Renderer_HasModalConfigure (TQ3RendererObject renderer);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19740"> </A><TT CLASS="cv">renderer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5851"> </A>A renderer.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5795"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5798"> </A>The <TT CLASS="cv">Q3Renderer_HasModalConfigure</TT> function returns, as its function result, a Boolean value that indicates whether the renderer specified by the <TT CLASS="cv">renderer</TT> parameter can display a modal settings dialog box (<TT CLASS="cv">kQ3True</TT>) or not (<TT CLASS="cv">kQ3False</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5807"> </A><A NAME="38680"> </A>Q3Renderer_ModalConfigure</H2><P CLASS="T1.Text1"><A NAME="pgfId=6084"> </A>You can use the Q3Renderer_ModalConfigure function to pop up a modal dialog box used to configure the renderer's settings.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=19751"> </A>TQ3Status Q3Renderer_ModalConfigure (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3RendererObject renderer, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DialogAnchor dialogAnchor, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean *canceled);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19753"> </A><TT CLASS="cv">renderer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5853"> </A>A renderer.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19762"> </A><TT CLASS="cv">dialogAnchor</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5824"> </A>A dialog anchor data structure (see <A HREF="qd3drenderers.f.htm#15808" CLASS="XRef">[link]</A>).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19771"> </A><TT CLASS="cv">canceled</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5829"> </A>Returned value indicating whether the request has been canceled (<TT CLASS="cv">kQ3True</TT>) or not (<TT CLASS="cv">kQ3False</TT>).</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5840"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5843"> </A>The Q3Renderer_ModalConfigure function displays a modal settings dialog box to configure the settings for the renderer specified by the <TT CLASS="cv">renderer</TT> parameter. The <TT CLASS="cv">canceled</TT> parameter is a Boolean that returns <TT CLASS="cv">kQ3True</TT> if the request has been canceled, <TT CLASS="cv">kQ3False</TT> otherwise.</P><P CLASS="T1.Text1"><A NAME="pgfId=6140"> </A>The Q3Renderer_ModalConfigure function returns <TT CLASS="cv">kQ3Failure</TT> if an error occurred.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=6333"> </A>Q3Renderer_GetConfigurationData</H2><P CLASS="T1.Text1"><A NAME="pgfId=6334"> </A>An application can use the Q3Renderer_GetConfigurationData function to access private renderer configuration data, which it can then save in a preference file or style template. The application should tag this data with the renderer's object name.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=19782"> </A>TQ3Status Q3Renderer_GetConfigurationData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3RendererObject&nbsp;&nbsp;&nbsp;&nbsp;renderer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dataBuffer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bufferSize,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*actualDataSize);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19784"> </A>renderer</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6336"> </A>A renderer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19793"> </A>dataBuffer</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6337"> </A>A pointer to a data buffer.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19802"> </A>bufferSize</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6400"> </A>The actual size in bytes of the memory block pointed to by <TT CLASS="cv">dataBuffer</TT>. </DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19811"> </A>actualDataSize</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6402"> </A> On return, the actual number of bytes written to the buffer. If you set dataBuffer to <TT CLASS="cv">null</TT>, actualDataSize returns the number of bytes that will be required to store the configuration data .</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6339"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=6340"> </A>The Q3Renderer_GetConfigurationData function stores private configuration data for the renderer object designated by renderer in a buffer pointed to by the dataBuffer parameter, and returns in actualDataSize the number of bytes written. If you set dataBuffer to <TT CLASS="cv">null</TT>, Q3Renderer_GetConfigurationData will return in actualDataSize the buffer size required, without writing data out. </P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=6346"> </A>Q3Renderer_SetConfigurationData</H2><P CLASS="T1.Text1"><A NAME="pgfId=6347"> </A>You can use the Q3Renderer_SetConfigurationData function to set a renderer to a configuration state previously accessed by Q3Renderer_GetConfigurationData.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=19823"> </A>TQ3Status Q3Renderer_SetConfigurationData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3RendererObject&nbsp;&nbsp;&nbsp;&nbsp;renderer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*dataBuffer,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bufferSize);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19825"> </A>renderer</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6501"> </A>A renderer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19834"> </A>dataBuffer</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6502"> </A>A pointer to a data buffer.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19843"> </A>bufferSize</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6503"> </A>The actual size in bytes of the memory block pointed to by <TT CLASS="cv">dataBuffer</TT>. </DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=6352"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=6353"> </A>The Q3Renderer_SetConfigurationData function sets the renderer designated by renderer to the configuration state determined by the private data structure pointed to by dataBuffer. The bufferSize parameter indicates the size of the buffer.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=12285"> </A>Q3RendererClass_GetNickNameString</H2><P CLASS="T1.Text1"><A NAME="pgfId=12318"> </A>You can use the Q3RendererClass_GetNickNameString function to to get a renderer's name string. The name string can then be used to provide user selections, for example in a menu.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=19854"> </A>TQ3Status Q3RendererClass_GetNickNameString(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ObjectType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rendererClassType,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ObjectClassNameString&nbsp;&nbsp;&nbsp;&nbsp;rendererClassString);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19856"> </A>rendererClassType</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=12288"> </A> 	A renderer object type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=19866"> </A>rendererClassString</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=12289"> </A> 	A string containing the renderer's name.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=12291"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=12292"> </A>The Q3RendererClass_GetNickNameString function returns, in the rendererClassString parameter, the user-identifiable name of a renderer.</P><P CLASS="T1.Text1"><A NAME="pgfId=12343"> </A>The renderer is responsible for storing the name in a localizable format--for example as a resource. If Q3RendererClass_GetNickNameString returns <TT CLASS="cv">NULL</TT> in rendererClassString, then the caller may choose to use the renderer's class name instead.  Applications should always try to get the name string before using the class name, because the class name is not localizable.</P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>