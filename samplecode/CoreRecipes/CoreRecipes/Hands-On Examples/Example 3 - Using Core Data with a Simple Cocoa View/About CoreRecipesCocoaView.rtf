{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset77 LucidaGrande;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 LucidaGrande-Bold;
\f3\froman\fcharset77 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10400\viewh12060\viewkind0
\pard\tx0\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li1120\fi-1120\ql\qnatural

\f0\fs24 \cf0 Copyright \'a9 2005 by Apple Computer, Inc. All Rights Reserved.\
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li1120\fi-400\ri860\ql\qnatural

\f1\fs30 \cf0 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li1120\fi-420\ri-720\ql\qnatural

\f2\b\fs48 \cf0 Core Recipes Example 3:\
A Simple Cocoa View\

\f3\b0\fs28 \
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li960\ri-460\ql\qnatural

\f0\fs24 \cf0 Building upon the concepts from Example 2, this project demonstrates the creation of a simple table view to display information from a Core Data store using the standard data source callbacks. It also touches upon how to create managed object subclasses for implementing custom logic. \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li960\fi-20\ri-460\ql\qnatural
\cf0 \
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 Step 1:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 Open MainMenu.nib and add an NSTableView to the window. Give it three columns. Set the header title of the first column to "Recipe", the second column to "Chef First Name", and the third column to "Chef Last Name". Using the attributes inspector, set the identifier of the first column to "name", the second column to "chef.firstName", and the third column to "chef.lastName". Control-drag from the NSTableView to the CoreRecipesController instance in the nib and set the NSTableView's dataSource outlet. Control-drag from the CoreRecipesController instance to the NSTableView and set the controller's recipeTable outlet. Add an NSButton to the window and title it "Delete". Control-drag from the button to the CoreRecipesController instance and set it's target/action to deleteRecipe:.\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
Step 2:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 Uncomment the C-style comment blocks in the populateRecipes, numberOfRowsInTableView:, and tableView:objectValueForTableColumn:row: methods in CoreRecipesController.m. Build and run the application. Observe that the table is populated with recipe data from the persistent store. Terminate the application.\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
Step 3:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 Uncomment the C-style comment block in the deleteRecipe: method in CoreRecipesController.m. Build and run the application. Delete some recipes. Terminate the application.\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
Step 4:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 Open CoreRecipes.xcdatamodel, select the "chef" relationship on the "Recipe" entity, and set the delete rule to "Cascade". Build and run the application. Delete the recipe "Clam Chowder". Observe that the chef "Lily Benthin" is removed from the recipe "Pan-seared Swordfish" when you do this. Terminate the application.\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
Step 5:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 Open MainMenu.nib and delete the third column from the NSTableView. Rename the second column to "Chef" and change it's identifier (using the attributes inspector) to "chef.fullName".\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
Step 6:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 Open CoreRecipes.xcdatamodel, select the "chef" relationship on the "Recipe" entity, and set the delete rule back to "Nullify". Select the "Chef" entity, change it's class to "Chef", go to the File menu, and choose "New File...". Choose the "Managed Object Class" file type in the "Design" category and press "Next" twice. Ensure that "Chef" is the only checked entity, and that "Generate accessors" and "Generate validation methods" are unchecked. Press "Finish".\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
Step 7:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 Open Chef.h and add the method declaration "- (NSString *)fullName;". Open Chef.m and add a method implementation as follows:\
- (NSString *)fullName\
\{\
    // Calculate the fullName from the firstName and lastName\
    return [NSString stringWithFormat:@"%@ %@", [self valueForKey:@"firstName"], [self valueForKey:@"lastName"]];\
\}\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
Step 8:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 Build and run the completed application.\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li960\fi-20\ri-460\ql\qnatural

\f0\b0 \cf0 \
You may incorporate sample code from these examples into your applications without restriction, although the sample code has been provided "as is" and the responsibility for its operation is completely yours. However, you should not redistribute the source as "Apple Sample Code" if you make changes to it. If you're going to re-distribute the source, we require that you make it clear in the source that, although the code derived from Apple Sample Code,  you've since made changes to it.\
}