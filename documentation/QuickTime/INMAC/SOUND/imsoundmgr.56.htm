<!-- legacy work start --><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"        "http://www.w3.org/TR/html4/loose.dtd"><!-- legacy work end --><HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><TITLE>Obtaining Information (deprecated)</title><!-- legacy work start -->        <META NAME="Generator" CONTENT="manual">        <META http-equiv="content-type" CONTENT="text/html;charset=utf-8">        <META NAME = "Copyright" CONTENT="Copyright 2007 Apple Inc. All Rights Reserved.">        <META NAME="IndexTitle" CONTENT="Sound Input Manager (Not Recommended)">        <meta name="xcode-display" content="render">        <LINK REL="stylesheet" TYPE="text/css" HREF="../../../Resources/CSS/frameset_styles.css"> <!-- before submitting, globally replace ".." with "developer.apple.com" -->        <script type="text/javascript" language="JavaScript" src="../../../Resources/JavaScript/page.js"></script><!-- legacy work end --></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>Inside Macintosh: Sound</I><P>| <A target="doc" HREF="imsoundmgr.55.htm">Previous</A> | <A target="doc" HREF="imsoundmgr.1.htm">Chapter contents</A> | <A target="doc" HREF="imsoundmgr.htm">Chapter top</A> | <A target="doc" HREF="imsoundmgr.51.htm">Section top</A> | <A target="doc" HREF="imsoundmgr.57.htm">Next</a> | <!-- QTnavbar end --><!-- legacy work start --><script type="text/javascript"> placeWatermark()</script><div style="width:100%; position:fixed;"><div align="center" id="watermark" style="position: relative; margin-left:auto; margin-right:auto; z-index:20; width:500px;"><div class="legacybox" style="position: relative;"><h1>Legacy Document<span class=closebutton><a href="javascript:closeWatermark()"><img src="../../../Resources/Images/closebutton.png" width="14" height="14" border="0" align="top" alt="close button"></a></span></h1><p><b>Important:</b><i>Sound Input Manager</i> is deprecated as of Mac OS X v10.5. For new audio development in Mac OS X, use Core Audio. See the <a href="http://developer.apple.com/referencelibrary/MusicAudio/" target="_top">Audio</a> page in the ADC Reference Library.</p></div></div></div><!-- legacy work end --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3833"> </A>Obtaining Information</H1><P CLASS="T0.Text0"><A NAME="pgfId=2105"> </A>To obtain information about whether a computer supports certain sound features, you should use the <TT CLASS="cv">Gestalt</TT> function, documented in <I CLASS="italics">Inside Macintosh: Operating System Utilities</I>. Sometimes, however, you might need information the <TT CLASS="cv">Gestalt</TT> function is not able to provide. The Sound Manager provides a number of routines that you can use to obtain additional sound-related information.</P><P CLASS="T1.Text1"><A NAME="pgfId=3545"> </A>You can obtain the version numbers of the Sound Manager and the MACE tools by calling the <TT CLASS="cv">SndSoundManagerVersion</TT> and <TT CLASS="cv">MACEVersion</TT> functions, respectively. You can obtain information about a sound channel and about all sound channels by calling the <TT CLASS="cv">SndControl</TT>, <TT CLASS="cv">SndChannelStatus</TT>, and <TT CLASS="cv">SndManagerStatus</TT> functions, respectively.</P><P CLASS="T1.Text1"><A NAME="pgfId=3644"> </A>The Sound Manager includes two routines--<TT CLASS="cv">SndGetSysBeepState</TT> and <TT CLASS="cv">SndSetSysBeepState</TT>--that allow you to determine and alter the status of the system&nbsp;alert sound.</P><P CLASS="T1.Text1"><A NAME="pgfId=2180"> </A>To play a sound resource using low-level Sound Manager routines, you need the address of the sound header stored in the sound resource. Sound Manager versions 3.0 and later&nbsp;provide the GetSoundHeaderOffset function that you can use to obtain that&nbsp;information.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=2225"> </A>SndSoundManagerVersion<A NAME="marker=839"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=2226"> </A><A NAME="marker=1282"> </A>You can use <TT CLASS="cv">SndSoundManagerVersion</TT> to determine the version of the Sound Manager tools available on a computer.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12575"> </A>FUNCTION SndSoundManagerVersion: NumVersion;<BR></CODE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2387"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3380"> </A>The <TT CLASS="cv">SndSoundManagerVersion</TT> function returns a version number that contains the same information as in the first 4 bytes of a <TT CLASS="cv">'vers'</TT> resource. You might use the <TT CLASS="cv">SndSoundManagerVersion</TT> function to determine if a computer has the enhanced Sound Manager, which is necessary for multichannel sound and for continuous plays from disk.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3397"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3398"> </A>You can call the <TT CLASS="cv">SndSoundManagerVersion</TT> function at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3399"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3400"> </A>The trap macro and routine selector for the <TT CLASS="cv">SndSoundManagerVersion</TT> function are</P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=3402"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4197"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=3596"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=3797"> </A>$000C0008</P></TD></TR></TABLE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3401"> </A>SEE ALSO</H3><P CLASS="T0.Text0"><A NAME="pgfId=3599"> </A>For information on how to use the <TT CLASS="cv">SndSoundManagerVersion</TT> function to determine whether the enhanced Sound Manager is available, see <A target="doc" HREF="imsoundmgr.16.htm#10893" CLASS="XRef">&quot;Obtaining Version Information&quot;</A>.<A NAME="marker=168"> </A><A NAME="marker=1308"> </A></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3381"> </A>MACEVersion<A NAME="marker=842"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=3382"> </A><A NAME="marker=1545"> </A>You can use <TT CLASS="cv">MACEVersion</TT> to determine the version of the MACE tools available on a machine.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12579"> </A>FUNCTION MACEVersion: NumVersion;<BR></CODE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3384"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3403"> </A>The <TT CLASS="cv">MACEVersion</TT> function returns a version number that contains the same information as in the first 4 bytes of a <TT CLASS="cv">'vers'</TT> resource.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3404"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3405"> </A>You can call the <TT CLASS="cv">MACEVersion</TT> function at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3406"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3407"> </A>The trap macro and routine selector for the <TT CLASS="cv">MACEVersion</TT> function are</P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=3385"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4199"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=3598"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4193"> </A>$00000010 <A NAME="marker=169"> </A><A NAME="marker=1546"> </A></P></TD></TR></TABLE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=2219"> </A>SndControl<A NAME="marker=170"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=3836"> </A>You can obtain information about a sound data type by using the <TT CLASS="cv">SndControl</TT> function. In Sound Manager version 3.0 and later, however, you virtually never need to call <TT CLASS="cv">SndControl</TT>. The capabilities that <TT CLASS="cv">SndControl</TT> provides are either provided by the <TT CLASS="cv">Gestalt</TT> function or are no longer supported. The <TT CLASS="cv">SndControl</TT> function is documented here for completeness only.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12583"> </A>FUNCTION SndControl (id: Integer; VAR cmd: SndCommand): OSErr;<BR></CODE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12585"> </A><TT CLASS="cv">id</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2003"> </A>The sound data type you want to get information about.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12594"> </A><TT CLASS="cv">cmd</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2279"> </A>A sound command.</BLOCKQUOTE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2384"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=2383"> </A>The <TT CLASS="cv">SndControl</TT> function sends a control command directly to the Sound Manager to get information about a specific data type. The available data types are specified by constants:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=12605"> </A>CONST<BR>&nbsp;&nbsp;&nbsp;&nbsp;squareWaveSynth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{square-wave data}<BR>&nbsp;&nbsp;&nbsp;&nbsp;waveTableSynth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 3;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{wave-table data}<BR>&nbsp;&nbsp;&nbsp;&nbsp;sampledSynth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{sampled-sound data}<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=4614"> </A>You can call <TT CLASS="cv">SndControl</TT> even if no channel has been created for the type of data you want to get information about. <TT CLASS="cv">SndControl</TT> can be used with the <TT CLASS="cv">availableCmd</TT> or <TT CLASS="cv">versionCmd</TT> sound commands to request information. The requested information is returned in the sound command record specified by the <TT CLASS="cv">cmd</TT> parameter.</P><P CLASS="I.Important"><A NAME="pgfId=3410"> </A>The <TT CLASS="cv">SndControl</TT> function can indicate only whether a particular data format supports some feature (for example, stereo output), not whether the available sound hardware also supports that feature. In general, you should use the <TT CLASS="cv">Gestalt</TT> function to determine whether the sound features you need are available in the current operating environment. </P><P CLASS="T1.Text1"><A NAME="pgfId=3411"> </A>In Sound Manager version 2.0, you can also use the <TT CLASS="cv">totalLoadCmd</TT> and <TT CLASS="cv">loadCmd</TT> commands to get information about the amount of CPU time consumed by sound-related processing. However, these commands are not very accurate and are not&nbsp;supported by version 3.0 and later.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4615"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3412"> </A>You should not call the <TT CLASS="cv">SndControl</TT> function at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2122"> </A>RESULT CODES</H3><TABLE><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=3416"> </A>noErr</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLR.RtAlign"><A NAME="pgfId=4194"> </A>0</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4195"> </A>No error<A NAME="marker=1664"> </A></P></TD></TR></TABLE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4617"> </A>SEE ALSO</H3><P CLASS="T0.Text0"><A NAME="pgfId=4613"> </A>See the list of sound commands in <A target="doc" HREF="imsoundmgr.3b.htm#17214" CLASS="XRef">&quot;Sound Command Numbers&quot;</A> for a complete description of the sound commands supported by <TT CLASS="cv">SndControl</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=2123"> </A>SndChannelStatus<A NAME="marker=835"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=2121"> </A><A NAME="marker=932"> </A>You can use the <TT CLASS="cv">SndChannelStatus</TT> function to determine the status of a sound channel.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12609"> </A>FUNCTION SndChannelStatus (chan: SndChannelPtr; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theLength: Integer; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theStatus: SCStatusPtr): OSErr;<BR></CODE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12611"> </A><TT CLASS="cv">chan</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2280"> </A>A pointer to a valid sound channel.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12620"> </A><TT CLASS="cv">theLength</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2281"> </A>The size in bytes of the sound channel status record. You should set this field to <TT CLASS="cv">SizeOf(SCStatus)</TT>.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12633"> </A><TT CLASS="cv">theStatus</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2282"> </A>A pointer to a sound channel status record.</BLOCKQUOTE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3841"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=2385"> </A>If the <TT CLASS="cv">SndChannelStatus</TT> function executes successfully, the fields of the record specified by <TT CLASS="cv">theStatus</TT> accurately describe the sound channel specified by <TT CLASS="cv">chan</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3413"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3414"> </A>You can call the <TT CLASS="cv">SndChannelStatus</TT> function at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3415"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=2124"> </A>The trap macro and routine selector for the <TT CLASS="cv">SndChannelStatus</TT> function are</P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4200"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4201"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=2515"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=3408"> </A>$00100008</P></TD></TR></TABLE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3417"> </A>RESULT CODES</H3><TABLE><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=2223"> </A>noErr</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLR.RtAlign"><A NAME="pgfId=4196"> </A>0</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4198"> </A>No error</P></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=4202"> </A>paramErr</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLR.RtAlign"><A NAME="pgfId=4203"> </A>-50</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4204"> </A>A parameter is incorrect</P></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=4205"> </A>badChannel</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLR.RtAlign"><A NAME="pgfId=4206"> </A>-205</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4207"> </A>Channel is corrupt or unusable<A NAME="marker=978"> </A></P></TD></TR></TABLE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2460"> </A>SEE ALSO</H3><P CLASS="T0.Text0"><A NAME="pgfId=3420"> </A>For information on the structure of a sound channel status record, see <A target="doc" HREF="imsoundmgr.40.htm#35185" CLASS="XRef">&quot;Sound Channel Status Records&quot;</A>.<A NAME="marker=836"> </A></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=2224"> </A>SndManagerStatus<A NAME="marker=837"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=3843"> </A><A NAME="marker=782"> </A>You can use the <TT CLASS="cv">SndManagerStatus</TT> function to determine information about all sound channels currently allocated.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12644"> </A>FUNCTION SndManagerStatus (theLength: Integer; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theStatus: SMStatusPtr): OSErr;<BR></CODE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12646"> </A><TT CLASS="cv">theLength</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2283"> </A>The size in bytes of the Sound Manager status record. You should set this field to <TT CLASS="cv">SizeOf(SMStatus)</TT>.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12655"> </A><TT CLASS="cv">theStatus</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2284"> </A>A pointer to a Sound Manager status record.</BLOCKQUOTE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3421"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3422"> </A>The <TT CLASS="cv">SndManagerStatus</TT> function determines information about all currently allocated sound channels. If the <TT CLASS="cv">SndManagerStatus</TT> function executes successfully, the fields of&nbsp;the record specified by <TT CLASS="cv">theStatus</TT> accurately describe the current status of the Sound&nbsp;Manager.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3423"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3424"> </A>You can call the <TT CLASS="cv">SndManagerStatus</TT> function at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3425"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3426"> </A>The trap macro and routine selector for the <TT CLASS="cv">SndManagerStatus</TT> function are</P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=3428"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4213"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=2924"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4208"> </A>$00140008</P></TD></TR></TABLE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2950"> </A>RESULT CODES</H3><TABLE><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=2096"> </A>noErr</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLR.RtAlign"><A NAME="pgfId=2212"> </A>0</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=2461"> </A>No error<A NAME="marker=897"> </A><A NAME="marker=934"> </A></P></TD></TR></TABLE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3017"> </A><A NAME="17337"> </A>SndGetSysBeepState<A NAME="marker=1665"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=3066"> </A><A NAME="marker=1404"> </A>You can use the <TT CLASS="cv">SndGetSysBeepState</TT> procedure to determine if the system alert sound is enabled.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12666"> </A>PROCEDURE SndGetSysBeepState (VAR sysBeepState: Integer);<BR></CODE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12668"> </A>sysBeepState</P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2259"> </A> On exit, the state of the system alert sound.</BLOCKQUOTE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2260"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=2261"> </A>The <TT CLASS="cv">SndGetSysBeepState</TT> procedure returns one of two states in the <TT CLASS="cv">sysBeepState</TT> parameter, either the <TT CLASS="cv">sysBeepDisable</TT> or the <TT CLASS="cv">sysBeepEnable</TT> constant.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=12680"> </A>CONST<BR>&nbsp;&nbsp;&nbsp;&nbsp;sysBeepDisable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= $0000;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{system alert sound disabled}<BR>&nbsp;&nbsp;&nbsp;&nbsp;sysBeepEnable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= $0001;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{system alert sound enabled}<BR></CODE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2262"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3429"> </A>You can call the <TT CLASS="cv">SndGetSysBeepState</TT> procedure at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3431"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3432"> </A>The trap macro and routine selector for the <TT CLASS="cv">SndGetSysBeepState</TT> procedure are</P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=3434"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4215"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=2125"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4209"> </A>$00180008<A NAME="marker=1455"> </A><A NAME="marker=818"> </A></P></TD></TR></TABLE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3433"> </A><A NAME="29666"> </A>SndSetSysBeepState<A NAME="marker=819"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=2375"> </A><A NAME="marker=1470"> </A>You can use the <TT CLASS="cv">SndSetSysBeepState</TT> function to set the state of the system alert sound.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12684"> </A>FUNCTION SndSetSysBeepState (sysBeepState: Integer): OSErr;<BR></CODE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12686"> </A>sysBeepState</P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2377"> </A> The desired state of the system alert sound.</BLOCKQUOTE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2378"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=2470"> </A>You can use the <TT CLASS="cv">SndSetSysBeepState</TT> function to temporarily disable the system alert sound while you play a sound and then enable the alert sound when you are done. The&nbsp;<TT CLASS="cv">sysBeepState</TT> parameter should be set to either <TT CLASS="cv">sysBeepDisable</TT> or <TT CLASS="cv">sysBeepEnable</TT>.</P><P CLASS="T1.Text1"><A NAME="pgfId=3600"> </A>If your application disables the system alert sound, be sure to enable it when your application gets a suspend event.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3436"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=3437"> </A>You can call the <TT CLASS="cv">SndSetSysBeepState</TT> function at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3438"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=3439"> </A>The trap macro and routine selector for the <TT CLASS="cv">SndSetSysBeepState</TT> function are</P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=3440"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=4217"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=3430"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4210"> </A>$001C0008</P></TD></TR></TABLE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3435"> </A>RESULT CODES</H3><TABLE><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=2640"> </A>noErr</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLR.RtAlign"><A NAME="pgfId=4211"> </A>0</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4212"> </A>No error</P></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=4214"> </A>paramErr</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLR.RtAlign"><A NAME="pgfId=4216"> </A>-50</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=4218"> </A>A parameter is incorrect<A NAME="marker=1502"> </A><A NAME="marker=1671"> </A></P></TD></TR></TABLE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=2126"> </A>GetSoundHeaderOffset<A NAME="marker=1832"> </A></H2><P CLASS="T0.Text0"><A NAME="pgfId=2352"> </A><A NAME="marker=1833"> </A>You can use the GetSoundHeaderOffset function to get the offset from the beginning of a sound resource to the embedded sound header.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=12698"> </A>FUNCTION GetSoundHeaderOffset (sndHdl: Handle; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VAR offset: LongInt): OSErr;<BR></CODE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12700"> </A><TT CLASS="cv">sndHdl</TT></P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2664"> </A>A handle to a sound resource.</BLOCKQUOTE><P CLASS="DT.DefinitionTerm"><A NAME="pgfId=12709"> </A>offset</P><BLOCKQUOTE CLASS="DD.DefinitionDef"><A NAME="pgfId=2665"> </A>On exit, the offset from the beginning of the sound resource specified by the sndHdl parameter to the beginning of the sound header within that sound resource.</BLOCKQUOTE><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2688"> </A>DESCRIPTION</H3><P CLASS="T0.Text0"><A NAME="pgfId=2703"> </A>The GetSoundHeaderOffset function returns, in the offset parameter, the number of bytes from the beginning of the sound resource specified by the sndHdl parameter to the sound header that is contained within that resource. You might need this information if you want to use the address of that sound header in a sound command (such as the soundCmd or bufferCmd sound command).</P><P CLASS="T1.Text1"><A NAME="pgfId=2704"> </A>The handle passed to GetSoundHeaderOffset does not have to be locked.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2705"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T0.Text0"><A NAME="pgfId=2706"> </A>The GetSoundHeaderOffset function is available only in version 3.0 and later of the Sound Manager. See <A target="doc" HREF="imsoundmgr.25.htm#21454" CLASS="XRef">&quot;Obtaining a Pointer to a Sound Header&quot;</A> for a function you can call in earlier versions of the Sound Manager to obtain the same information.</P><P CLASS="T1.Text1"><A NAME="pgfId=2707"> </A>You can call the GetSoundHeaderOffset function at interrupt time.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=2708"> </A>ASSEMBLY-LANGUAGE INFORMATION</H3><P CLASS="T0.Text0"><A NAME="pgfId=2728"> </A>The trap macro and routine selector for the GetSoundHeaderOffset function are</P><TABLE><TR><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=2709"> </A>Trap macro</P></TH><TH ROWSPAN="1" COLSPAN="1"><P CLASS="TbH.TblHd"><A NAME="pgfId=2710"> </A>Selector</P></TH></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=2726"> </A>_SoundDispatch</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=2727"> </A>$04040024</P></TD></TR></TABLE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3419"> </A>RESULT CODES</H3><TABLE><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=3175"> </A>noErr</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLR.RtAlign"><A NAME="pgfId=3199"> </A>0</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=3200"> </A>No error</P></TD></TR><TR><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLCv.MLCode"><A NAME="pgfId=3201"> </A>badFormat</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="MLR.RtAlign"><A NAME="pgfId=3343"> </A>-206</P></TD><TD ROWSPAN="1" COLSPAN="1"><P CLASS="ML.ColsList"><A NAME="pgfId=3646"> </A>Resource is corrupt or unusable<A NAME="marker=1831"> </A></P></TD></TR></TABLE></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3344"> </A>SEE ALSO</H3><P CLASS="T0.Text0"><A NAME="pgfId=3647"> </A>See <A target="doc" HREF="imsoundmgr.25.htm#25982" CLASS="XRef">Listing 1-37</A> for an example of calling GetSoundHeaderOffset.<A NAME="marker=1222"> </A></P></DIV></DIV><hr>&#169; 1999 Apple Computer, Inc.<!-- QTnavbar start --><P><I>Inside Macintosh: Sound</I><P>| <A target="doc" HREF="imsoundmgr.55.htm">Previous</A> | <A target="doc" HREF="imsoundmgr.1.htm">Chapter contents</A> | <A target="doc" HREF="imsoundmgr.htm">Chapter top</A> | <A target="doc" HREF="imsoundmgr.51.htm">Section top</A> | <A target="doc" HREF="imsoundmgr.57.htm">Next</a> | <!-- QTnavbar end --><!-- legacy work start --><script type="text/javascript"> placeWatermark()</script><div style="width:100%; position:fixed;"><div align="center" id="watermark" style="position: relative; margin-left:auto; margin-right:auto; z-index:20; width:500px;"><div class="legacybox" style="position: relative;"><h1>Legacy Document<span class=closebutton><a href="javascript:closeWatermark()"><img src="../../../Resources/Images/closebutton.png" width="14" height="14" border="0" align="top" alt="close button"></a></span></h1><p><b>Important:</b><i>Sound Input Manager</i> is deprecated as of Mac OS X v10.5. For new audio development in Mac OS X, use Core Audio. See the <a href="http://developer.apple.com/referencelibrary/MusicAudio/" target="_top">Audio</a> page in the ADC Reference Library.</p></div></div></div><!-- legacy work end --></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>