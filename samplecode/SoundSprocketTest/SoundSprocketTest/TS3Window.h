/* *	File:		TS3Window.h * *	Copyright © 1996 Apple Computer, Inc. */#ifndef __TS3Window__#define __TS3Window__#include <Windows.h>typedef enum WindowMethod {	kWindowMethod_FIRST,	kWindowMethod_GetSleep = kWindowMethod_FIRST,	kWindowMethod_ConsumeEvent,	kWindowMethod_MouseDown,	kWindowMethod_KeyDown,	kWindowMethod_Update,	kWindowMethod_Activate,	kWindowMethod_Deactivate,	kWindowMethod_COUNT} WindowMethod;typedef void (*WindowMethodPtr)(WindowPtr, ...);void Window_Init(	void);void Window_Exit(	void);void Window_New(	WindowPtr			inWindow,	WindowMethodPtr		(*inMetaHandler)(WindowMethod inMethod));void Window_Dispose(	WindowPtr			inWindow);Boolean Window_IsMine(	WindowPtr			inWindow);void Window_GetSleep(	WindowPtr			inWindow,	UInt32*				outSleep);void Window_ConsumeEvent(	WindowPtr			inWindow,	const EventRecord*	inEvent,	Boolean*			outConsumed);void Window_MouseDown(	WindowPtr			inWindow,	Point				inWhere);void Window_KeyDown(	WindowPtr			inWindow,	char				inChar,	char				inKeyCap,	short				inModifiers,	Boolean				inAutoKey);void Window_Update(	WindowPtr			inWindow);void Window_Activate(	WindowPtr			inWindow);void Window_Deactivate(	WindowPtr			inWindow);#endif /* __TS3Window__ */