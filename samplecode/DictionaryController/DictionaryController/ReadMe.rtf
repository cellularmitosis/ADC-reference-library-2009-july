{\rtf1\ansi\ansicpg1252\cocoartf949
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;}
\vieww9000\viewh8400\viewkind0
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\qj

\f0\b\fs36 \cf0 DictionaryController
\b0\fs20 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural
\cf0 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\qj
\cf0 "DictionaryController" is a Cocoa application that demonstrates various ways to use the 
\f1 NSDictionaryController
\f0  class. A dictionary controller transforms the contents of a dictionary into an array of key-value pairs that can be bound to user interface items such as columns of a table view.  With the dictionary controller, you can specify which key-value pairs to be included or excluded for display as well as associate a localized displayable key to each pair.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural

\b \cf0 Sample Requirements
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qj\pardirnatural
\cf0 The supplied Xcode project was created using Xcode v3.0 running under Mac OS X 10.5.x or later. The project will create a Universal Binary.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural

\b \cf0 About the Sample
\b0 \
As a primary illustration, this sample shows how to display individual 
\f1 NSDictionary
\f0  objects loaded from the file called 
\f1 people.dict.
\f0 \
\
Each person dictionary looks like the following:\
\
\pard\tx480\pardeftab480\ql\qnatural\pardirnatural

\f1 \cf2 \CocoaLigature0 <dict>\cf0 \
	\cf2 <key>\cf0 lastName\cf2 </key>\cf0 \
	\cf2 <string>\cf0 Public\cf2 </string>\cf0 \
	\cf2 <key>\cf0 firstName\cf2 </key>\cf0 \
	\cf2 <string>\cf0 John Q.\cf2 </string>\cf0 \
	\cf2 <key>\cf0 street\cf2 </key>\cf0 \
	\cf2 <string>\cf0 679 North Michigan Ave.\cf2 </string>\cf0 \
	\cf2 <key>\cf0 city\cf2 </key>\cf0 \
	\cf2 <string>\cf0 Chicago\cf2 </string>\cf0 \
	\cf2 <key>\cf0 state\cf2 </key>\cf0 \
	\cf2 <string>\cf0 IL\cf2 </string>\cf0 \
	\cf2 <key>\cf0 zip\cf2 </key>\cf0 \
	\cf2 <string>\cf0 60611\cf2 </string>\cf0 \
	\cf2 <key>\cf0 id\cf2 </key>\cf0 \
	\cf2 <string>\cf0 459\cf2 </string>\cf0 \
\cf2 </dict>\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural

\f0 \cf0 \CocoaLigature1 \
An instance of 
\f1 NSDictionaryController
\f0  is used to display this information in a table.  Its content is bound to the current selection in the table view on the left side of  the main window.  Notice the last key/value pair named "id".  This is of little concern to the user so the dictionary controller marks this as an "Excluded Key".  Also the "lastName" and "firstName" keys will have a corresponding localized key loaded from 
\f1 Localizable.strings
\f0  file.  This feature allows keys from the dictionary to have displayable values seen by the user.\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qj\pardirnatural

\b \cf0 Using the Sample
\b0 \
Build and run the sample using Xcode.\
1) In the main window, select any person in the table on the left to reveal their corresponding 
\f1 NSDictionary
\f0  objects displayed in the table on the right which is bound to a dictionary controller.  Details of the selection in the right hand table are shown in three text fields under the table. Notice the bindings for the three text fields: all are bound to the dictionary controller's selection, with the following model key paths:\
	The first is bound with Model Key Path = "
\f1 value
\f0 "\
	The second is bound with Model Key Path = "
\f1 key
\f0 "\
	The third is bound with Model Key Path = "
\f1 localizedKey
\f0 "\
We achieve this since the objects managed by our dictionary controller are key-value pair objects that comply with the 
\f1 NSDictionaryControllerKeyValuePair
\f0  informal protocol.\
	\
2) In the File or Folder window, drop any file or folder from the Finder to the window's drop location to reveal its corresponding dictionary displayed in the table below it.\

\b \
\
Packaging List
\b0 \
AppDelegate.m\
AppDelegate.h\
	NSApp's main delegate, manages MyWindowController and helps open the sample's ReadMe from the Help menu.\
	This class is responsible for creating and opening both windows (MyWindowController, DropWindowController) for this sample.\
\
MyWindowController.h\
MyWindowController.m\

\b 	
\b0 The NSWindowController object for the sample's main window.\
MainWindow.nib\
	The nib for the MyWindowController.\
\
DropWindowController.h\
DropWindowController.m\

\b 	
\b0 The NSWindowController object for the sample's "File or Folder" window.\
DropWindow.nib\
	The nib for the DropWindowController.\
\
DropView.h\
DropView.m\

\b 	
\b0 A custom NSView used to receive file or folder drops from the Desktop.  This view resides in the DropWindow nib.\
\
people.dict\
	A dictionary file containing the list of people to be displayed in this sample.\
\
Localizable.string\
	Contains the localized key strings to be applied to the NSDictionaryController.\
\
\

\b Feedback and Bug Reports
\b0 \
Please send all feedback about this sample by connecting to the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/contact/feedback.html"}}{\fldrslt Contact ADC}} page.\
Please submit any bug reports about this sample to the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/bugreporter"}}{\fldrslt Bug Reporting}} page.\
\
\

\b Developer Technical Support\
\pard\pardeftab720\sa200\qj

\b0 \cf0 The Apple Developer Connection Developer Technical Support (DTS) team is made up of highly qualified engineers with development expertise in key Apple technologies. Whether you need direct one-on-one support troubleshooting issues, hands-on assistance to accelerate a project, or helpful guidance to the right documentation and sample code, Apple engineers are ready to help you.  Refer to the {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/technicalsupport/"}}{\fldrslt Apple Developer Technical Support}} page.\
Copyright \'a9\'a02007 Apple Inc. All rights reserved.}