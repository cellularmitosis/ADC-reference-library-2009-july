<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Manipulating Matrix Transforms</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3385"> </A>Creating and Manipulating Matrix Transforms</H1><P CLASS="T1.Text1"><A NAME="pgfId=3390"> </A><A NAME="marker=3386"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate matrix transforms.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3391"> </A>Q3MatrixTransform_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=3392"> </A><A NAME="marker=821"> </A>You can use the <TT CLASS="cv">Q3MatrixTransform_New</TT> function to create a new matrix transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5886"> </A>TQ3TransformObject Q3MatrixTransform_New (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Matrix4x4 *matrix);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5888"> </A><TT CLASS="cv">matrix</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3394"> </A>On entry, a pointer to a 4-by-4 matrix that defines the desired new transform.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3395"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3396"> </A>The <TT CLASS="cv">Q3MatrixTransform_New</TT> function returns, as its function result, a reference to a new transform object of type <TT CLASS="cv">kQ3TransformTypeMatrix</TT> using the data passed in the <TT CLASS="cv">matrix</TT> parameter. The data you pass in the <TT CLASS="cv">matrix</TT> parameter is copied into internal QuickDraw&nbsp;3D data structures. If QuickDraw&nbsp;3D cannot allocate memory for those structures, <TT CLASS="cv">Q3MatrixTransform_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P><P CLASS="T1.Text1"><A NAME="pgfId=3403"> </A>It is your responsibility to ensure that the matrix specified by the <TT CLASS="cv">matrix</TT> parameter is affine and invertible. QuickDraw&nbsp;3D does not check for these qualities.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3407"> </A>Q3MatrixTransform_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=3408"> </A><A NAME="marker=839"> </A>You can use the <TT CLASS="cv">Q3MatrixTransform_Submit</TT> function to submit a matrix transform without creating an object or allocating memory.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5899"> </A>TQ3Status Q3MatrixTransform_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Matrix4x4 *matrix, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5901"> </A><TT CLASS="cv">matrix</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3410"> </A>A pointer to a 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5910"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3411"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3412"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3413"> </A>The <TT CLASS="cv">Q3MatrixTransform_Submit</TT> function pushes the matrix transform specified by the <TT CLASS="cv">matrix</TT> parameter on the view transform stack of the view specified by the <TT CLASS="cv">view</TT> parameter. The function returns <TT CLASS="cv">kQ3Success</TT> if the operation succeeds and <TT CLASS="cv">kQ3Failure</TT> otherwise.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=1748"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=1749"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3414"> </A>Q3MatrixTransform_Get</H2><P CLASS="T1.Text1"><A NAME="pgfId=3415"> </A><A NAME="marker=848"> </A>You can use the <TT CLASS="cv">Q3MatrixTransform_Get</TT> function to query the private data stored in a matrix transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5921"> </A>TQ3Status Q3MatrixTransform_Get (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix4x4 *matrix);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5923"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3417"> </A>A transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5932"> </A><TT CLASS="cv">matrix</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3418"> </A>On exit, a pointer to the matrix associated with the transform specified in the <TT CLASS="cv">transform</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3419"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3420"> </A>The <TT CLASS="cv">Q3MatrixTransform_Get</TT> function returns, in the <TT CLASS="cv">matrix</TT> parameter, information about the matrix transform specified by the <TT CLASS="cv">transform</TT> parameter. You should use <TT CLASS="cv">Q3MatrixTransform_Get</TT> only with transforms of type <TT CLASS="cv">kQ3TransformTypeMatrix</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3421"> </A>Q3MatrixTransform_Set</H2><P CLASS="T1.Text1"><A NAME="pgfId=3422"> </A><A NAME="marker=857"> </A>You can use the <TT CLASS="cv">Q3MatrixTransform_Set</TT> function to set new private data for a matrix transform.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5943"> </A>TQ3Status Q3MatrixTransform_Set (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TransformObject transform, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Matrix4x4 *matrix);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5945"> </A><TT CLASS="cv">transform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3424"> </A>A transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5954"> </A><TT CLASS="cv">matrix</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3425"> </A>A pointer to the new matrix to be associated with the transform specified in the <TT CLASS="cv">transform</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3426"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3427"> </A>The <TT CLASS="cv">Q3MatrixTransform_Set</TT> function sets the matrix transform specified by the <TT CLASS="cv">transform</TT> parameter to the matrix passed in the <TT CLASS="cv">matrix</TT> parameter. You should use <TT CLASS="cv">Q3MatrixTransform_Set</TT> only with transforms of type <TT CLASS="cv">kQ3TransformTypeMatrix</TT>.<A NAME="marker=1581"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>