<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Creating a Model</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=3831"> </A><A NAME="marker=11001"> </A>Creating a Model</H1><P CLASS="T1.Text1"><A NAME="pgfId=3836"> </A><A NAME="marker=3832"> </A>As explained in <A HREF="qd3dintroduction.3.htm#16755" CLASS="XRef">&quot;Modeling and Rendering&quot;</A>, creating an image of a three-dimensional model involves several steps. You must first create a model and then specify key information about the scene (such as the lighting and camera angle). This section shows how to create a simple model containing three-dimensional objects.</P><P CLASS="T1.Text1"><A NAME="pgfId=4300"> </A>Objects in QuickDraw&nbsp;3D are defined using a <B CLASS="bold">Cartesian coordinate system</B> that is <B CLASS="bold">right-handed</B> (that is, if the thumb of the right hand points in the direction of the positive <I CLASS="italics">x</I> axis and the index finger points in the direction of the positive <I CLASS="italics">y</I> axis, then the middle finger, when made perpendicular to the other two fingers, points in the direction of the positive <I CLASS="italics">z</I> axis). <A HREF="qd3dintroduction.b.htm#10501" CLASS="XRef">Figure&nbsp;5</A> shows a right-handed coordinate system.</P><P CLASS="Note"><A NAME="pgfId=4329"> </A>For a more complete description of the coordinate spaces used by QuickDraw&nbsp;3D, see the chapter <A HREF="qd3dtransforms.htm#38532" CLASS="XRef">&quot;Transform Objects&quot;</A> later in this book. </P><P CLASS="Fg.Figure"><A NAME="pgfId=4320"> </A>Figure&nbsp;5<A NAME="10501"> </A>A right-handed Cartesian coordinate system</P><DIV><IMG SRC="qd3dintroduction-5.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=3840"> </A>The model created by the <TT CLASS="cv">MyNewModel</TT> function defined in <A HREF="qd3dintroduction.b.htm#33279" CLASS="XRef">Listing&nbsp;4</A> consists of a number of boxes that spell out the words &quot;Hello World.&quot; The words are written in block letters, with each letter composed of a number of individual boxes. <TT CLASS="cv">MyNewModel</TT> uses the inelegant but straightforward method of defining the 34 boxes by creating four arrays of 34 elements each. As described in the chapter <A HREF="qd3dgeometry.htm#25217" CLASS="XRef">&quot;Geometric Objects&quot;</A>, a box is defined by four pieces of information, an origin and three vectors that specify its sides:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=11005"> </A>typedef struct TQ3BoxData {<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;origin;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;orientation;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;majorAxis;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minorAxis;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*faceAttributeSet;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;boxAttributeSet;<BR>} TQ3BoxData;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3845"> </A>First, <TT CLASS="cv">MyNewModel</TT> creates a new and empty ordered display group to contain all the boxes. Then the function loops through the data arrays, creating boxes and adding them to the group.</P><P CLASS="L.Listing"><A NAME="pgfId=3847"> </A>Listing&nbsp;4<A NAME="33279"> </A>Creating a model</P><CODE CLASS="CvF.CodeFull"><A NAME="pgfId=11009"> </A>TQ3GroupObject MyNewModel (void)<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myModel;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myBox;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3BoxData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myBoxData;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupPosition&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myGroupPosition;<BR>&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;/*Data for boxes comprising Hello and World block letters.*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i;<BR>&nbsp;&nbsp;&nbsp;&nbsp;float&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xorigin[34] = { <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-12.0, -9.0, -11.0, -7.0, -6.0, -6.0, -6.0, -2.0, -1.0, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.0, 4.0, 8.0, 9.0, 9.0, 11.0, -13.0, -12.0, -11.0, -9.0, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7.0, -6.0, -6.0, -4.0, -2.0, -1.0, -1.0,  1.0,  1.0,  3.0, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.0, 8.0, 9.0, 9.0, 11.0};<BR>&nbsp;&nbsp;&nbsp;&nbsp;float&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yorigin[34] = { <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0, 0.0, 3.0, 0.0, 6.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.0, 0.0, 0.0, -8.0, -8.0, -7.0, -8.0, -8.0, -8.0, -2.0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-8.0, -8.0, -2.0, -5.0, -4.0, -8.0, -8.0, -8.0, -8.0, -8.0, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.0, -7.0};<BR>&nbsp;&nbsp;&nbsp;&nbsp;float&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height[34]  = { <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.0, 7.0, 1.0, 7.0, 1.0, 1.0, 1.0, 7.0, 1.0, 7.0, 1.0, 7.0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.0, 1.0, 7.0, 7.0, 1.0, 3.0, 7.0, 7.0, 1.0, 1.0, 7.0, 7.0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.0, 1.0, 2.0, 3.0, 7.0, 1.0, 7.0, 1.0, 1.0, 5.0};<BR>&nbsp;&nbsp;&nbsp;&nbsp;float&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width[34]   = { <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.0, 1.0, 2.0, 1.0, 3.0, 2.0, 3.0, 1.0, 3.0, 1.0, 3.0, 1.0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.0, 2.0, 1.0, 1.0, 3.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.0, 2.0, 1.0, 1.0, 1.0, 3.0, 1.0, 2.0, 2.0, 1.0};<BR></CODE><CODE CLASS="CvF.CodeFull"><A NAME="pgfId=11015"> </A>&nbsp;&nbsp;&nbsp;&nbsp;/*Create an ordered display group for the complete model.*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;myModel = Q3OrderedDisplayGroup_New();<BR>&nbsp;&nbsp;&nbsp;&nbsp;if (myModel == NULL)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bail;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;/*Add all the boxes to the model.*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;myBoxData.faceAttributeSet = NULL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;myBoxData.boxAttributeSet = NULL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;for (i=0; i&lt;34; i++) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Point3D_Set(&amp;myBoxData.origin, xorigin[i], yorigin[i], 1.0);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Vector3D_Set(&amp;myBoxData.orientation, 0, height[i], 0);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Vector3D_Set(&amp;myBoxData.minorAxis, width[i], 0, 0);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Vector3D_Set(&amp;myBoxData.majorAxis, 0, 0, 2);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myBox = Q3Box_New(&amp;myBoxData);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myGroupPosition = Q3Group_AddObject(myModel, myBox);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*now that myBox has been added to group, dispose of our reference*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Object_Dispose(myBox);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (myGroupPosition == NULL)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto bail;<BR>&nbsp;&nbsp;&nbsp;&nbsp;}<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;return (myModel);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*return the completed model*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;<BR>bail:<BR>&nbsp;&nbsp;&nbsp;&nbsp;/*If any of the above failed, then return an empty model.*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;return (NULL);<BR>}<BR></CODE><P CLASS="Note"><A NAME="pgfId=6573"> </A><A NAME="marker=11017"> </A>The <TT CLASS="cv">MyNewModel</TT> function can leak memory. Your application should use a different error-recovery strategy than is used in <A HREF="qd3dintroduction.b.htm#33279" CLASS="XRef">Listing&nbsp;4</A>. </P><P CLASS="T1.Text1"><A NAME="pgfId=3852"> </A>If successful, <TT CLASS="cv">MyNewModel</TT> returns the group object containing the 34 boxes to its caller.<A NAME="marker=3851"> </A></P><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>