<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing View Hints Objects</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3850"> </A><A NAME="37206"> </A>Managing View Hints Objects<A NAME="marker=3849"> </A></H1><P CLASS="T1.Text1"><A NAME="pgfId=3854"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manage view hints objects. A view hints object is an object in a metafile that gives hints about how to render a scene. You can use that information to configure a view object, or you can choose to ignore it.</P><P CLASS="T1.Text1"><A NAME="pgfId=9228"> </A>A view hints object contains specific information, derived from a view object and stored in a 3DMF file, that is separate from the group model submitted with a view. The view hints object is created from an existing view object using the <TT CLASS="cv">Q3ViewHints_New</TT> call and should be written out at the beginning of the 3DMF file, followed by the group model for a scene.  When an application reads a 3DMF file it should check for view hints and set up the view with the view hints settings if it wishes to preserve a scene's appearance between applications.</P><P CLASS="T1.Text1"><A NAME="pgfId=9230"> </A>View hints may include instructions about the renderer, camera, lights, and view attributes, plus other information in the draw context such as the window's dimensions, mask state, mask bitmap, and clear image color. The version 1.5.1 QuickDraw&nbsp;3D Viewer source code uses the following view hints information and applies it to the model's view if a view hints object is found while reading a 3DMF file:</P><UL><LI CLASS="B1.Bullet1"><A NAME="pgfId=9271"> </A>light group</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=9272"> </A>camera</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=9274"> </A>renderer</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=9275"> </A>window dimensions</LI><LI CLASS="B1.Bullet1"><A NAME="pgfId=9277"> </A>clear image color.</LI></UL><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3855"> </A>Q3ViewHints_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=3856"> </A><A NAME="marker=1662"> </A>You can use the <TT CLASS="cv">Q3ViewHints_New</TT> function to create a new view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13453"> </A>TQ3ViewHintsObject Q3ViewHints_New (TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13455"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3858"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3859"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3860"> </A>The <TT CLASS="cv">Q3ViewHints_New</TT> function returns, as its function result, a new view hints object that incorporates the view configuration information of the view object specified by the <TT CLASS="cv">view</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3861"> </A>Q3ViewHints_GetRenderer</H2><P CLASS="T1.Text1"><A NAME="pgfId=3862"> </A><A NAME="marker=1670"> </A>You can use the <TT CLASS="cv">Q3ViewHints_GetRenderer</TT> function to get the renderer associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13466"> </A>TQ3Status Q3ViewHints_GetRenderer (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3RendererObject *renderer);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13468"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3864"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13477"> </A><TT CLASS="cv">renderer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3865"> </A>On exit, the renderer currently associated with the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3866"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3867"> </A>The <TT CLASS="cv">Q3ViewHints_GetRenderer</TT> function returns, in the <TT CLASS="cv">renderer</TT> parameter, the renderer currently associated with the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter. The reference count of that renderer is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3868"> </A>Q3ViewHints_SetRenderer</H2><P CLASS="T1.Text1"><A NAME="pgfId=3869"> </A><A NAME="marker=1679"> </A>You can use the <TT CLASS="cv">Q3ViewHints_SetRenderer</TT> function to set the renderer associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13488"> </A>TQ3Status Q3ViewHints_SetRenderer (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3RendererObject renderer);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13490"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3871"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13503"> </A><TT CLASS="cv">renderer</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3872"> </A>A renderer object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3873"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3874"> </A>The <TT CLASS="cv">Q3ViewHints_SetRenderer</TT> function attaches the renderer specified by the <TT CLASS="cv">renderer</TT> parameter to the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter. The reference count of the specified renderer is incremented. In addition, if some other renderer was already attached to the specified view hints object, the reference count of that renderer is decremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3875"> </A>Q3ViewHints_GetCamera</H2><P CLASS="T1.Text1"><A NAME="pgfId=3876"> </A><A NAME="marker=1688"> </A>You can use the <TT CLASS="cv">Q3ViewHints_GetCamera</TT> function to get the camera associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13514"> </A>TQ3Status Q3ViewHints_GetCamera (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject *camera);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13516"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3878"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13525"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3879"> </A>On exit, the camera object currently associated with the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3880"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3881"> </A>The <TT CLASS="cv">Q3ViewHints_GetCamera</TT> function returns, in the <TT CLASS="cv">camera</TT> parameter, the camera currently associated with the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter. The reference count of that camera is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3882"> </A>Q3ViewHints_SetCamera</H2><P CLASS="T1.Text1"><A NAME="pgfId=3883"> </A><A NAME="marker=1697"> </A>You can use the <TT CLASS="cv">Q3ViewHints_SetCamera</TT> function to set the camera associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13536"> </A>TQ3Status Q3ViewHints_SetCamera (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3CameraObject camera);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13538"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3885"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13547"> </A><TT CLASS="cv">camera</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3886"> </A>A camera object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3887"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3888"> </A>The <TT CLASS="cv">Q3ViewHints_SetCamera</TT> function attaches the camera specified by the <TT CLASS="cv">camera</TT> parameter to the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter. The reference count of the specified camera is incremented. In addition, if some other camera was already attached to the specified view hints object, the reference count of that camera is decremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3889"> </A>Q3ViewHints_GetLightGroup</H2><P CLASS="T1.Text1"><A NAME="pgfId=3890"> </A><A NAME="marker=1706"> </A>You can use the <TT CLASS="cv">Q3ViewHints_GetLightGroup</TT> function to get the light group associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13558"> </A>TQ3Status Q3ViewHints_GetLightGroup (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject *lightGroup);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13560"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3892"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13569"> </A><TT CLASS="cv">lightGroup</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3893"> </A>On exit, the light group currently associated with the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3894"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3895"> </A>The <TT CLASS="cv">Q3ViewHints_GetLightGroup</TT> function returns, in the <TT CLASS="cv">lightGroup</TT> parameter, the light group currently associated with the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter. The reference count of that light group is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3896"> </A>Q3ViewHints_SetLightGroup</H2><P CLASS="T1.Text1"><A NAME="pgfId=3897"> </A><A NAME="marker=1715"> </A>You can use the <TT CLASS="cv">Q3ViewHints_SetLightGroup</TT> function to set the light group associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13580"> </A>TQ3Status Q3ViewHints_SetLightGroup (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject lightGroup);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13582"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3899"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13591"> </A><TT CLASS="cv">lightGroup</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3900"> </A>A light group.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3901"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3902"> </A>The <TT CLASS="cv">Q3ViewHints_SetLightGroup</TT> function attaches the light group specified by the <TT CLASS="cv">lightGroup</TT> parameter to the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter. The reference count of the specified light group is incremented. In addition, if some other light group was already attached to the specified view hints object, the reference count of that light group is decremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3903"> </A>Q3ViewHints_GetAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=3904"> </A><A NAME="marker=1724"> </A>You can use the <TT CLASS="cv">Q3ViewHints_GetAttributeSet</TT> function to get the current attribute set associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13602"> </A>TQ3Status Q3ViewHints_GetAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet *attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13604"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3906"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13613"> </A><TT CLASS="cv">attributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3907"> </A>On exit, the attribute set currently associated with the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3908"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3909"> </A>The <TT CLASS="cv">Q3ViewHints_GetAttributeSet</TT> function returns, in the <TT CLASS="cv">attributeSet</TT> parameter, the current attribute set of the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter. The reference count of the attribute set is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3910"> </A>Q3ViewHints_SetAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=3911"> </A><A NAME="marker=1733"> </A>You can use the <TT CLASS="cv">Q3ViewHints_SetAttributeSet</TT> function to set the attribute set associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13624"> </A>TQ3Status Q3ViewHints_SetAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13626"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3913"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13635"> </A><TT CLASS="cv">attributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3914"> </A>An attribute set.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3915"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3916"> </A>The <TT CLASS="cv">Q3ViewHints_SetAttributeSet</TT> function attaches the attribute set specified by the <TT CLASS="cv">attributeSet</TT> parameter to the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter. The reference count of the specified attribute set is incremented. In addition, if some other attribute set was already attached to the specified view hints object, the reference count of that attribute set is decremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3917"> </A>Q3ViewHints_GetDimensionsState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3918"> </A><A NAME="marker=1742"> </A>You can use the <TT CLASS="cv">Q3ViewHints_GetDimensionsState</TT> function to get the dimension state associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13646"> </A>TQ3Status Q3ViewHints_GetDimensionsState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean *isValid);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13648"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3920"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13657"> </A><TT CLASS="cv">isValid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3921"> </A>On exit, the current dimension state of the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3922"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3923"> </A>The <TT CLASS="cv">Q3ViewHints_GetDimensionsState</TT> function returns, in the <TT CLASS="cv">isValid</TT> parameter, a Boolean value that indicates whether the dimensions in the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter are to be used (<TT CLASS="cv">kQ3True</TT>) or not (<TT CLASS="cv">kQ3False</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3924"> </A>Q3ViewHints_SetDimensionsState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3925"> </A><A NAME="marker=1751"> </A>You can use the <TT CLASS="cv">Q3ViewHints_SetDimensionsState</TT> function to set the dimension state associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13668"> </A>TQ3Status Q3ViewHints_SetDimensionsState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean isValid);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13670"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3927"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13679"> </A><TT CLASS="cv">isValid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3928"> </A>A dimension state.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3929"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3930"> </A>The <TT CLASS="cv">Q3ViewHints_SetDimensionsState</TT> function sets the dimension state of the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter to the value passed in the <TT CLASS="cv">isValid</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3931"> </A>Q3ViewHints_GetDimensions</H2><P CLASS="T1.Text1"><A NAME="pgfId=3932"> </A><A NAME="marker=1760"> </A>You can use the <TT CLASS="cv">Q3ViewHints_GetDimensions</TT> function to get the dimensions associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13690"> </A>TQ3Status Q3ViewHints_GetDimensions (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long *width, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long *height);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13692"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3934"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13701"> </A><TT CLASS="cv">width</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3935"> </A>On exit, the width of the specified view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13710"> </A><TT CLASS="cv">height</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3936"> </A>On exit, the height of the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3937"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3938"> </A>The <TT CLASS="cv">Q3ViewHints_GetDimensions</TT> function returns, in the <TT CLASS="cv">width</TT> and <TT CLASS="cv">height</TT> parameters, the current width and height associated with the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3939"> </A>Q3ViewHints_SetDimensions</H2><P CLASS="T1.Text1"><A NAME="pgfId=3940"> </A><A NAME="marker=1770"> </A>You can use the <TT CLASS="cv">Q3ViewHints_SetDimensions</TT> function to set the dimensions associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13721"> </A>TQ3Status Q3ViewHints_SetDimensions (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long width, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long height);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13723"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3942"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13732"> </A><TT CLASS="cv">width</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3943"> </A>The desired width of the view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13745"> </A><TT CLASS="cv">height</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3944"> </A>The desired height of the view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3945"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3946"> </A>The <TT CLASS="cv">Q3ViewHints_SetDimensions</TT> function sets the width and height of the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter to the values passed in the <TT CLASS="cv">width</TT> and <TT CLASS="cv">height</TT> parameters.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3947"> </A>Q3ViewHints_GetMaskState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3948"> </A><A NAME="marker=1780"> </A>You can use the <TT CLASS="cv">Q3ViewHints_GetMaskState</TT> function to get the mask state associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13756"> </A>TQ3Status Q3ViewHints_GetMaskState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean *isValid);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13758"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3950"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13767"> </A><TT CLASS="cv">isValid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3951"> </A>On exit, the current mask state of the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3952"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3953"> </A>The <TT CLASS="cv">Q3ViewHints_GetMaskState</TT> function returns, in the <TT CLASS="cv">isValid</TT> parameter, a Boolean value that determines whether the mask associated with the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter is to be used (<TT CLASS="cv">kQ3True</TT>) or not (<TT CLASS="cv">kQ3False</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3954"> </A>Q3ViewHints_SetMaskState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3955"> </A><A NAME="marker=1789"> </A>You can use the <TT CLASS="cv">Q3ViewHints_SetMaskState</TT> function to set the mask state associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13778"> </A>TQ3Status Q3ViewHints_SetMaskState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean isValid);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13780"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3957"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13789"> </A><TT CLASS="cv">isValid</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3958"> </A>The desired mask state of the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3959"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3960"> </A>The <TT CLASS="cv">Q3ViewHints_SetMaskState</TT> function sets the mask state of the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter to the value specified in the <TT CLASS="cv">isValid</TT> parameter. Set <TT CLASS="cv">isValid</TT> to <TT CLASS="cv">kQ3True</TT> if you want the mask enabled and to <TT CLASS="cv">kQ3False</TT> otherwise.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3961"> </A>Q3ViewHints_GetMask</H2><P CLASS="T1.Text1"><A NAME="pgfId=3962"> </A><A NAME="marker=1798"> </A>You can use the <TT CLASS="cv">Q3ViewHints_GetMask</TT> function to get the mask associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13800"> </A>TQ3Status Q3ViewHints_GetMask (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Bitmap *mask);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13802"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3964"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13811"> </A><TT CLASS="cv">mask</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3965"> </A>On exit, the mask of the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3966"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3967"> </A>The <TT CLASS="cv">Q3ViewHints_GetMask</TT> function returns, in the <TT CLASS="cv">mask</TT> parameter, the current mask for the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter. The mask is a bitmap whose bits determine whether or not corresponding pixels in the drawing destination are drawn or are masked out. <TT CLASS="cv">Q3ViewHints_GetMask</TT> allocates memory internally for the returned bitmap; when you're done using the bitmap, you should call the <TT CLASS="cv">Q3Bitmap_Empty</TT> function to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3968"> </A>Q3ViewHints_SetMask</H2><P CLASS="T1.Text1"><A NAME="pgfId=3969"> </A><A NAME="marker=1807"> </A>You can use the <TT CLASS="cv">Q3ViewHints_SetMask</TT> function to set the mask associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13822"> </A>TQ3Status Q3ViewHints_SetMask (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Bitmap *mask);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13824"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3971"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13833"> </A><TT CLASS="cv">mask</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3972"> </A>The desired mask of the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3973"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3974"> </A>The <TT CLASS="cv">Q3ViewHints_SetMask</TT> function sets the mask of the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter to the bitmap specified in the <TT CLASS="cv">mask</TT> parameter. <TT CLASS="cv">Q3ViewHints_SetMask</TT> copies the bitmap to internal QuickDraw&nbsp;3D memory, so you can dispose of the specified bitmap after calling <TT CLASS="cv">Q3ViewHints_SetMask</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3978"> </A>Q3ViewHints_GetClearImageMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=3979"> </A><A NAME="marker=1819"> </A>You can use the <TT CLASS="cv">Q3ViewHints_GetClearImageMethod</TT> function to get the image clearing method associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13844"> </A>TQ3Status Q3ViewHints_GetClearImageMethod (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextClearImageMethod *clearMethod);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13846"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3981"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13855"> </A><TT CLASS="cv">clearMethod</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3982"> </A>On exit, the current image clearing method of the specified view hints object. See <A HREF="qd3ddrawcontexts.b.htm#34483" CLASS="XRef">&quot;Draw Context Data Structure&quot;</A> for the values that can be returned in this parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3986"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3987"> </A>The <TT CLASS="cv">Q3ViewHints_GetClearImageMethod</TT> function returns, in the <TT CLASS="cv">clearMethod</TT> parameter, a constant that indicates the current image clearing method for the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3988"> </A>Q3ViewHints_SetClearImageMethod</H2><P CLASS="T1.Text1"><A NAME="pgfId=3989"> </A><A NAME="marker=1831"> </A>You can use the <TT CLASS="cv">Q3ViewHints_SetClearImageMethod</TT> function to set the image clearing method associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13866"> </A>TQ3Status Q3ViewHints_SetClearImageMethod (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3DrawContextClearImageMethod clearMethod);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13868"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3991"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13881"> </A><TT CLASS="cv">clearMethod</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3992"> </A>The desired image clearing method of the specified view hints object. See <A HREF="qd3ddrawcontexts.b.htm#34483" CLASS="XRef">&quot;Draw Context Data Structure&quot;</A> for the values that can be passed in this parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3996"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3997"> </A>The <TT CLASS="cv">Q3ViewHints_SetClearImageMethod</TT> function sets the image clearing method of the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter to the value specified in the <TT CLASS="cv">clearMethod</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3998"> </A>Q3ViewHints_GetClearImageColor</H2><P CLASS="T1.Text1"><A NAME="pgfId=3999"> </A><A NAME="marker=1843"> </A>You can use the <TT CLASS="cv">Q3ViewHints_GetClearImageColor</TT> function to get the image clearing color associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13892"> </A>TQ3Status Q3ViewHints_GetClearImageColor (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ColorARGB *color);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13894"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6026"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13903"> </A><TT CLASS="cv">color</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4002"> </A>On exit, the current image clearing color of the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4006"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4007"> </A>The <TT CLASS="cv">Q3ViewHints_GetClearImageColor</TT> function returns, in the <TT CLASS="cv">color</TT> parameter, a constant that indicates the current image clearing color for the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4008"> </A>Q3ViewHints_SetClearImageColor</H2><P CLASS="T1.Text1"><A NAME="pgfId=4009"> </A><A NAME="marker=1855"> </A>You can use the <TT CLASS="cv">Q3ViewHints_SetClearImageColor</TT> function to set the image clearing color associated with a view hints object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=13914"> </A>TQ3Status Q3ViewHints_SetClearImageColor (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewHintsObject viewHints, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3ColorARGB *color);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13916"> </A><TT CLASS="cv">viewHints</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4011"> </A>A view hints object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=13925"> </A><TT CLASS="cv">color</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4012"> </A>The desired image clearing color of the specified view hints object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4016"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4017"> </A>The <TT CLASS="cv">Q3ViewHints_SetClearImageColor</TT> function sets the image clearing color of the view hints object specified by the <TT CLASS="cv">viewHints</TT> parameter to the value specified in the <TT CLASS="cv">color</TT> parameter.</P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>