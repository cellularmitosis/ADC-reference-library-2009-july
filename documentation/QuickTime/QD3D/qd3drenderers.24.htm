<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Starting and Ending Draw Regions</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH2.RoutineHd2"><A NAME="pgfId=15059"> </A>Starting and Ending Draw Regions</H1><P CLASS="T1.Text1"><A NAME="pgfId=15060"> </A>Generally, there is one draw region per monitor. At any particular time, however, a window associated with a draw context may not appear in the active monitor. Thus one or more draw regions may be inactive at a given time and should be explicitly ignored by the renderer. You can use the Q3XDrawRegion_IsActive function to determine if a given draw region is currently active.</P><P CLASS="T1.Text1"><A NAME="pgfId=15061"> </A>For active draw regions, one of two calls must be made before rendering into the draw region, regardless of how much draw region functionality is required: Q3XDrawRegion_Start or Q3XDrawRegion_StartAccessToImageBuffer.</P><P CLASS="T1.Text1"><A NAME="pgfId=15062"> </A>You can use the Q3XDrawRegion_Start function if double-buffering and image access services are not needed; it just returns a pointer to the draw region descriptor TQ3XDrawRegionDescriptor <A HREF="qd3drenderers.25.htm#13893" CLASS="XRef">(link)</A>. However, the function described below is more useful for most plug-in renderers.</P><P CLASS="T1.Text1"><A NAME="pgfId=15066"> </A>The Q3XDrawRegion_StartAccessToImageBuffer function provides image access and double-buffering services for your renderer. Besides returning a pointer to the draw region descriptor, it also returns a pointer to the raster image into which rendering occurs. For single-buffering, this is a pointer to video memory; for double buffering, it is a pointer to a system-allocated back buffer. The double-buffering process is handled by the draw region. Most plug-in renderers must use the Q3XDrawRegion_StartAccessToImageBuffer function instead of <TT CLASS="cv">Q3XDrawRegion_Start</TT>.</P><P CLASS="T1.Text1"><A NAME="pgfId=15067"> </A>Once a renderer is done with a draw region, it must call the Q3XDrawRegion_End function.</P><DIV><H3 CLASS="RoH.RoutineHeading"><A NAME="pgfId=15068"> </A>Q3XDrawRegion_IsActive</H3><P CLASS="T1.Text1"><A NAME="pgfId=15069"> </A>The <TT CLASS="cv">Q3XDrawRegion_IsActive</TT> function lets you determine whether a draw region is active or inactive. If it is inactive, the renderer may ignore it.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21273"> </A>TQ3Status Q3XDrawRegion_IsActive(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XDrawRegion&nbsp;&nbsp;&nbsp;&nbsp;drawRegion,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*isActive);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21275"> </A>drawRegion</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=15071"> </A>A draw region.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21284"> </A>isActive</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=15072"> </A>Returns <TT CLASS="cv">kQ3True</TT> if the draw region is active; <TT CLASS="cv">kQ3False</TT> otherwise.</DD></DL COMPACT><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=15073"> </A>DESCRIPTION</H4><P CLASS="T1.Text1"><A NAME="pgfId=15074"> </A>The Q3XDrawRegion_IsActive function returns, in the isActive parameter, <TT CLASS="cv">kQ3True</TT> if the draw region designated by drawRegion is active and <TT CLASS="cv">kQ3False</TT> otherwise.</P></DIV></DIV><DIV><H3 CLASS="RoH.RoutineHeading"><A NAME="pgfId=15076"> </A><A NAME="16649"> </A>Q3XDrawRegion_Start</H3><P CLASS="T1.Text1"><A NAME="pgfId=15077"> </A>The <TT CLASS="cv">Q3XDrawRegion_Start</TT> function returns a draw region descriptor to a renderer that does not require double-buffering or image access.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21295"> </A>TQ3Status Q3XDrawRegion_Start(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XDrawRegion&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;drawRegion,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XDrawRegionServices&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;services,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XDrawRegionDescriptor&nbsp;&nbsp;&nbsp;&nbsp;**descriptor);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21297"> </A>drawRegion</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=15079"> </A>A draw region.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21306"> </A>services</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=15083"> </A>Draw region services requested (see <A HREF="qd3drenderers.23.htm#37275" CLASS="XRef">[link]</A>).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21315"> </A>descriptor</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=15087"> </A>On return, a draw region descriptor (see <A HREF="qd3drenderers.25.htm#13893" CLASS="XRef">[link]</A>).</DD></DL COMPACT><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=15088"> </A>DESCRIPTION</H4><P CLASS="T1.Text1"><A NAME="pgfId=15089"> </A>The Q3XDrawRegion_Start function returns, in the descriptor parameter, a pointer to a draw region descriptor for the draw region designated by drawRegion.</P><P CLASS="T1.Text1"><A NAME="pgfId=15090"> </A>The Q3XDrawRegion_Start function may be called if double-buffering and image access services are not needed. The renderer must provide a valid value in the services parameter, requesting if clearing or <TT CLASS="cv">DDSurface</TT> locking is required (see <A HREF="qd3drenderers.23.htm#37275" CLASS="XRef">[link]</A>).</P><P CLASS="T1.Text1"><A NAME="pgfId=15094"> </A>This function is rarely used, because the renderer is then required to do all the work of allocating, locating, clearing, and double buffering the image raster. Most plug-in renderers use the Q3XDrawRegion_StartAccessToImageBuffer function instead of Q3XDrawRegion_Start.</P></DIV></DIV><DIV><H3 CLASS="RoH.RoutineHeading"><A NAME="pgfId=15096"> </A><A NAME="26378"> </A>Q3XDrawRegion_StartAccessToImageBuffer</H3><P CLASS="T1.Text1"><A NAME="pgfId=15097"> </A>The Q3XDrawRegion_StartAccessToImageBuffer function provides image access and double-buffering services for a renderer. In addition to returning a pointer to the draw region descriptor, it also returns a pointer to the raster image into which rendering occurs is returned. In the case of single-buffering, this is a pointer to the video memory; in the case of double-buffering, it is a pointer to a system-allocated back buffer. All double-buffering, etc., is now handled by the draw region.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21326"> </A>TQ3Status Q3XDrawRegion_StartAccessToImageBuffer(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XDrawRegion&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;drawRegion,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XDrawRegionServices&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;services,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XDrawRegionDescriptor&nbsp;&nbsp;&nbsp;&nbsp;**descriptor,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**image);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21328"> </A>drawRegion</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=15099"> </A>A draw region.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21337"> </A>services</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=15103"> </A>Draw region services requested (see <A HREF="qd3drenderers.23.htm#37275" CLASS="XRef">[link]</A>).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21346"> </A>descriptor</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=15107"> </A>On return, a draw region descriptor (see <A HREF="qd3drenderers.25.htm#13893" CLASS="XRef">[link]</A>).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21355"> </A>image</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=15108"> </A>On return, a pointer to the target raster image.</DD></DL COMPACT><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=15109"> </A>DESCRIPTION</H4><P CLASS="T1.Text1"><A NAME="pgfId=15110"> </A>The Q3XDrawRegion_StartAccessToImageBuffer function returns a draw region descriptor in the descriptor parameter and a pointer to the renderer's target raster in the image parameter, both for the draw region designated by drawRegion.</P></DIV><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=15111"> </A>SPECIAL CONSIDERATIONS</H4><P CLASS="T1.Text1"><A NAME="pgfId=15112"> </A>Most plug-in renderers use the Q3XDrawRegion_StartAccessToImageBuffer function instead of <TT CLASS="cv">Q3XDrawRegion_Start</TT>.</P></DIV></DIV><DIV><H3 CLASS="RoH.RoutineHeading"><A NAME="pgfId=15113"> </A>Q3XDrawRegion_End</H3><P CLASS="T1.Text1"><A NAME="pgfId=15114"> </A>A renderer must call the <TT CLASS="cv">Q3XDrawRegion_End</TT> function when it has finished with a draw region.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=21366"> </A>TQ3Status Q3XDrawRegion_End(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3XDrawRegion&nbsp;&nbsp;&nbsp;&nbsp;drawRegion);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=21368"> </A>drawRegion</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=15116"> </A>A draw region.</DD></DL COMPACT><DIV><H4 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=15117"> </A>DESCRIPTION</H4><P CLASS="T1.Text1"><A NAME="pgfId=15118"> </A>After rendering, the Q3XDrawRegion_End function performs internal clean-up and memory release for the draw region designated by drawRegion.</P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>