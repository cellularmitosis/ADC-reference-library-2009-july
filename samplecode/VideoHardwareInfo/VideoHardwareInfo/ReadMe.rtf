{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww17680\viewh16380\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Applications may need to query the system about VRAM, video hardware, Quartz Extreme support, OpenGL extensions and renderer, GLSL version and support so that they can determine which output devices are best suited for their needs.  VideoHardwareInfo shows how to query the system for these properties, and how to be notified about changes to the display configuration.\
\
Notifications for display changes are registered using CGDisplayRegisterReconfigurationCallback and then later removed using CGDisplayRemoveReconfigurationCallback.\
\
To get data about the hardware used to connect the display, VideoHardwareInfo queries I/O Kit for some of the the video accelerators hardware properties, vendor-id, device-id, model, and how much memory it has.\
\
To get data about OpenGL for a specific display, VideoHardwareInfo creates a CGLContext on that display.  We set the current context to the newly created CGLContext, and then start querying it for OpenGL information about that display.  We obtain the OpenGL vendor, render, version, if GLSL is supported and the GLSL version.\
\
To get data about Quartz for a specific display, VideoHardwareInfo  checks to see if the display is accelerated using CGDisplayUsesOpenGLAcceleration.  If so then the display supports Quartz Extreme.\
\
Note: The Deployment and Default builds build universal where as the Debug build only builds for the platform you are building on.}