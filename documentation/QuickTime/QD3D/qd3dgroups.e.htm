<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing Groups</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3288"> </A>Managing Groups</H1><P CLASS="T1.Text1"><A NAME="pgfId=3293"> </A><A NAME="marker=3289"> </A>QuickDraw&nbsp;3D provides a number of general routines for managing group objects. Unless otherwise indicated, you can use these functions with groups of any type.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3294"> </A>Q3Group_GetType</H2><P CLASS="T1.Text1"><A NAME="pgfId=3296"> </A><A NAME="marker=3295"> </A><A NAME="marker=719"> </A>You can use the <TT CLASS="cv">Q3Group_GetType</TT> function to determine the type of a group.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6325"> </A>TQ3ObjectType Q3Group_GetType (TQ3GroupObject group);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6327"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3298"> </A>A group.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3299"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3300"> </A>The <TT CLASS="cv">Q3Group_GetType</TT> function returns, as its function result, the type of the group specified by the <TT CLASS="cv">group</TT> parameter. <TT CLASS="cv">Q3Group_GetType</TT> returns one of these values:<A NAME="marker=3301"> </A></P><CODE CLASS="Cv.Code"><A NAME="pgfId=6338"> </A>kQ3GroupTypeDisplay<BR>kQ3GroupTypeInfo<BR>kQ3GroupTypeLight<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3303"> </A>If <TT CLASS="cv">Q3Group_GetType</TT> cannot determine the type of a group or an error occurs, it returns <TT CLASS="cv">kQ3ObjectTypeInvalid</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3304"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3305"> </A><TT CLASS="cv">kQ3ErrorInvalidObject kQ3ErrorNULLParameter</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3306"> </A>Q3Group_CountObjects</H2><P CLASS="T1.Text1"><A NAME="pgfId=3308"> </A><A NAME="marker=3307"> </A><A NAME="marker=733"> </A>You can use the <TT CLASS="cv">Q3Group_CountObjects</TT> function to determine how many objects a group contains.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6345"> </A>TQ3Status Q3Group_CountObjects (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject group, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long *nObjects);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6347"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3310"> </A>A group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6356"> </A><TT CLASS="cv">nObjects</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3311"> </A>On exit, a pointer to the number of objects in the specified group.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3312"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3313"> </A>The <TT CLASS="cv">Q3Group_CountObjects</TT> function returns, in the <TT CLASS="cv">nObjects</TT> parameter, the number of objects contained in the group specified by the <TT CLASS="cv">group</TT> parameter. If that group contains other groups, each contained group is counted only once.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3314"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3315"> </A><TT CLASS="cv">kQ3ErrorInvalidObject kQ3ErrorNULLParameter</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3316"> </A>Q3Group_CountObjectsOfType</H2><P CLASS="T1.Text1"><A NAME="pgfId=3318"> </A><A NAME="marker=3317"> </A><A NAME="marker=745"> </A>You can use the <TT CLASS="cv">Q3Group_CountObjectsOfType</TT> function to determine how many objects of a particular type a group contains.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6370"> </A>TQ3Status Q3Group_CountObjectsOfType (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject group, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ObjectType isType, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long *nObjects);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6372"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3320"> </A>A group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6381"> </A><TT CLASS="cv">isType</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3321"> </A>An object type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6390"> </A><TT CLASS="cv">nObjects</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3322"> </A>On exit, a pointer to the number of objects in the specified group that have the specified type.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3323"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3324"> </A>The <TT CLASS="cv">Q3Group_CountObjectsOfType</TT> function returns, in the <TT CLASS="cv">nObjects</TT> parameter, the number of objects contained in the group specified by the <TT CLASS="cv">group</TT> parameter that have the object type specified by the <TT CLASS="cv">isType</TT> parameter. The object type can be either a parent class (for example, <TT CLASS="cv">kQ3SharedType_Shape</TT>) or a leaf class (for example, <TT CLASS="cv">EcGeometryType_Box</TT>).</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3325"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3326"> </A><TT CLASS="cv">kQ3ErrorInvalidObject kQ3ErrorNULLParameter</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3327"> </A>Q3Group_AddObject</H2><P CLASS="T1.Text1"><A NAME="pgfId=3329"> </A><A NAME="marker=3328"> </A><A NAME="marker=758"> </A>You can use the <TT CLASS="cv">Q3Group_AddObject</TT> function to add an object to a group.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6404"> </A>TQ3GroupPosition Q3Group_AddObject (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject group, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object object);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6406"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3331"> </A>A group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6415"> </A><TT CLASS="cv">object</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3332"> </A>An object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3333"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3334"> </A>The <TT CLASS="cv">Q3Group_AddObject</TT> function inserts the object specified by the <TT CLASS="cv">object</TT> parameter into the group specified by the <TT CLASS="cv">group</TT> parameter. If <TT CLASS="cv">group</TT> is a unordered group, the object is appended to the list of objects in the group. If <TT CLASS="cv">group</TT> is an ordered group, the object is appended to the part of the list of objects in the group that are of the same type as <TT CLASS="cv">object</TT>. <TT CLASS="cv">Q3Group_AddObject</TT> returns the new position of the object in the group. If an error occurs as an object is inserted into the group, <TT CLASS="cv">Q3Group_AddObject</TT> returns <TT CLASS="cv">NULL</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3335"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3336"> </A><TT CLASS="cv">kQ3ErrorInvalidObject kQ3ErrorOutOfMemory</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3337"> </A>Q3Group_AddObjectBefore</H2><P CLASS="T1.Text1"><A NAME="pgfId=3339"> </A><A NAME="marker=3338"> </A><A NAME="marker=770"> </A>You can use the <TT CLASS="cv">Q3Group_AddObjectBefore</TT> function to add an object to a group, positioning it before a certain object already in the group.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6429"> </A>TQ3GroupPosition Q3Group_AddObjectBefore (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject group, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupPosition position, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object object);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6431"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3341"> </A>A group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6440"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3342"> </A>A group position.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6449"> </A><TT CLASS="cv">object</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3343"> </A>An object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3344"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3345"> </A>The <TT CLASS="cv">Q3Group_AddObjectBefore</TT> function inserts the object specified by the <TT CLASS="cv">object</TT> parameter into the group specified by the <TT CLASS="cv">group</TT> parameter, before the group position specified by the <TT CLASS="cv">position</TT> parameter. <TT CLASS="cv">Q3Group_AddObjectBefore</TT> returns, as its function result, the new position of the object in the group. If an error occurs during the insertion of the object into the group, <TT CLASS="cv">Q3Group_AddObjectBefore</TT> returns <TT CLASS="cv">NULL</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3346"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3347"> </A><TT CLASS="cv">kQ3ErrorInvalidObject kQ3ErrorInvalidPositionForGroup kQ3ErrorOutOfMemory</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3348"> </A>Q3Group_AddObjectAfter</H2><P CLASS="T1.Text1"><A NAME="pgfId=3350"> </A><A NAME="marker=3349"> </A><A NAME="marker=783"> </A>You can use the <TT CLASS="cv">Q3Group_AddObjectAfter</TT> function to add an object to a group, positioning it after a certain object already in the group.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6466"> </A>TQ3GroupPosition Q3Group_AddObjectAfter (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject group, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupPosition position, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object object);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6468"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3352"> </A>A group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6477"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3353"> </A>A group position.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6486"> </A><TT CLASS="cv">object</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3354"> </A>An object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3355"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3356"> </A>The <TT CLASS="cv">Q3Group_AddObjectAfter</TT> function inserts the object specified by the <TT CLASS="cv">object</TT> parameter into the group specified by the <TT CLASS="cv">group</TT> parameter, after the group position specified by the <TT CLASS="cv">position</TT> parameter. <TT CLASS="cv">Q3Group_AddObjectAfter</TT> returns, as its function result, the new position of the object in the group. If an error occurs during the insertion of the object into the group, <TT CLASS="cv">Q3Group_AddObjectAfter</TT> returns <TT CLASS="cv">NULL</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3357"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3358"> </A><TT CLASS="cv">kQ3ErrorInvalidObject kQ3ErrorInvalidPositionForGroup kQ3ErrorOutOfMemory</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3359"> </A>Q3Group_GetPositionObject</H2><P CLASS="T1.Text1"><A NAME="pgfId=3360"> </A><A NAME="marker=795"> </A>You can use the <TT CLASS="cv">Q3Group_GetPositionObject</TT> function to get the object located at a certain position in a group.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6503"> </A>TQ3Status Q3Group_GetPositionObject (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject group, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupPosition position, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object *object);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6505"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3362"> </A>A group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6514"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3363"> </A>A group position.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6523"> </A><TT CLASS="cv">object</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3367"> </A>On exit, a reference to a QuickDraw&nbsp;3D object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3368"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3369"> </A>The <TT CLASS="cv">Q3Group_GetPositionObject</TT> function returns, in the <TT CLASS="cv">object</TT> parameter, a reference to the object having the position specified by the <TT CLASS="cv">position</TT> parameter in the group specified by the <TT CLASS="cv">group</TT> parameter. The reference count of the returned object is incremented. If an error occurs when getting the object, <TT CLASS="cv">Q3Group_GetPositionObject</TT> returns <TT CLASS="cv">NULL</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3370"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3371"> </A><TT CLASS="cv">kQ3ErrorInvalidObject kQ3Error_InvalidPositionForGroup kQ3Error_NULLParameter</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3372"> </A>Q3Group_SetPositionObject</H2><P CLASS="T1.Text1"><A NAME="pgfId=3373"> </A><A NAME="marker=810"> </A>You can use the <TT CLASS="cv">Q3Group_SetPositionObject</TT> function to set the object located at a certain position in a group.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6540"> </A>TQ3Status Q3Group_SetPositionObject (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject group, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupPosition position, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object object);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6542"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3375"> </A>A group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6551"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3376"> </A>A group position.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6560"> </A><TT CLASS="cv">object</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3377"> </A>An object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3378"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3379"> </A>The <TT CLASS="cv">Q3Group_SetPositionObject</TT> function sets the object having the position specified by the <TT CLASS="cv">position</TT> parameter in the group specified by the <TT CLASS="cv">group</TT> parameter to the object specified by the <TT CLASS="cv">object</TT> parameter. The object previously occupying that position is disposed of. The reference count of <TT CLASS="cv">object</TT> is incremented.</P><P CLASS="T1.Text1"><A NAME="pgfId=3380"> </A><TT CLASS="cv">Q3GroupPosition_SetObject</TT> returns, as its function result, either a pointer to the object installed in the specified position, or <TT CLASS="cv">NULL</TT> if an error occurs.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3381"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3382"> </A><TT CLASS="cv">kQ3ErrorInvalidObject kQ3ErrorInvalidObjectForGroup kQ3ErrorInvalidObjectForPosition kQ3ErrorInvalidPositionForGroup</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3383"> </A>Q3Group_RemovePosition</H2><P CLASS="T1.Text1"><A NAME="pgfId=3384"> </A><A NAME="marker=823"> </A>You can use the <TT CLASS="cv">Q3Group_RemovePosition</TT> function to remove an object from a group.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6580"> </A>TQ3Object Q3Group_RemovePosition (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject group, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupPosition position);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6582"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3386"> </A>A group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6591"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3387"> </A>A group position.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3388"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3389"> </A>The <TT CLASS="cv">Q3Group_RemovePosition</TT> function removes the object having the group position specified by the <TT CLASS="cv">position</TT> parameter from the group specified by the <TT CLASS="cv">group</TT> parameter. After you call <TT CLASS="cv">Q3Group_RemovePosition</TT>, the position specified by the <TT CLASS="cv">position</TT> parameter is invalid. <TT CLASS="cv">Q3Group_RemovePosition</TT> returns, as its function result, the object removed from the group. If an error occurs when removing the object from the group, <TT CLASS="cv">Q3Group_RemovePosition</TT> returns <TT CLASS="cv">NULL</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3390"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3391"> </A><TT CLASS="cv">kQ3ErrorInvalidObject kQ3ErrorInvalidPositionForGroup</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3392"> </A>Q3Group_EmptyObjects</H2><P CLASS="T1.Text1"><A NAME="pgfId=3394"> </A><A NAME="marker=3393"> </A><A NAME="marker=835"> </A>You can use the <TT CLASS="cv">Q3Group_EmptyObjects</TT> function to remove all objects from a group.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6609"> </A>TQ3Status Q3Group_EmptyObjects (TQ3GroupObject group);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6611"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3396"> </A>A group.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3397"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3398"> </A>The <TT CLASS="cv">Q3Group_EmptyObjects</TT> function disposes of every object contained in the group specified by the <TT CLASS="cv">group</TT> parameter, thereby effectively emptying the contents of the group. The group itself is not disposed of.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3399"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3400"> </A><TT CLASS="cv">kQ3ErrorInvalidObject</TT></P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3401"> </A>Q3Group_EmptyObjectsOfType</H2><P CLASS="T1.Text1"><A NAME="pgfId=3403"> </A><A NAME="marker=3402"> </A><A NAME="marker=846"> </A>You can use the <TT CLASS="cv">Q3Group_EmptyObjectsOfType</TT> function to remove all objects of a particular type from a group.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=6622"> </A>TQ3Status Q3Group_EmptyObjectsOfType (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GroupObject group, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ObjectType isType);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6624"> </A><TT CLASS="cv">group</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3405"> </A>A group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=6633"> </A><TT CLASS="cv">isType</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3406"> </A>An object type.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3407"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3408"> </A>The <TT CLASS="cv">Q3Group_EmptyObjectsOfType</TT> function disposes of every object contained in the group specified by the <TT CLASS="cv">group</TT> parameter that has the type specified by the <TT CLASS="cv">isType</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3409"> </A>ERRORS</H3><P CLASS="T1.Text1"><A NAME="pgfId=3411"> </A><TT CLASS="cv">kQ3ErrorInvalidObject</TT><A NAME="marker=3410"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>