{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww11600\viewh11580\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs24 \cf0 ImageBrowserView\
\

\f1\b0 This is an example of subclassing HIView in order to implement a custom control. It demonstrates best practices for subclassing and handling of events.\
\
Interesting technologies used include:\
* Drag and drop for dragging images into the view\
* HIView tracking areas for displaying the control parts when the cursor is over the view\
* Accessibility support that demonstrates how one would implement an accessibility hierarchy \
* HIArchive support for read/write of persistent state\
\
\
In addition to the C implementation of the view using APIs only from HIToolbox (in ImageBrowserView.c), there is a C++ implementation that derives from the TView class of the HIFramework sample code (in TImageBrowserView.cp) in order to demonstrate how the registration and basic event handling is taken care of automatically by HIFramework. This implementation is enabled by selecting the "ImageBrowser HIFramework" build target.}