{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh9000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs24 \cf0 What is HIFramework?
\f1\b0 \
\
HIFramework is a small sample set of sample code illustrating how to abstract HIView subclassing using an object-oriented C++ approach.\
\
Although the HIView subclassing APIs were written such that they could be called and used by C-based applications, they were also designed to work well with C++.\
\
This small framework consists of an HIView-subclassing superclass to be used as the base class to create HIViews using C++.  It also has two simple convenience wrapper classes that help deal with Carbon Events and HIRects. \
\

\f0\b TView
\f1\b0 \
\
TView wraps the necessary HIObject and HIView C APIs with C++.  It is best to read the method header documentation for the various methods to learn the functionality of TView.\
\
Another sample available to accompany HIFramework is 
\f0\b HIViewTest
\f1\b0 .  This sample is a simple client of HIFramework and is a good example of how to use the functionality available in HIFramework.\
\

\f0\b TRect
\f1\b0 \
\
TRect is a simple wrapper class around HIRect access to help use HIRects.\
\

\f0\b TCarbonEvent
\f1\b0 \
\
TCarbonEvent is a simple wrapper class around Carbon Events.  It is primarily a set of accessors to access Carbon Event information and/or parameters.  The parameter access includes many common types and there is also a template function to use the parameter access with any parameter type.}