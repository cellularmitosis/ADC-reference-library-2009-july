{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset77 LucidaGrande;\f1\fswiss\fcharset77 Helvetica;\f2\fnil\fcharset77 LucidaGrande-Bold;
\f3\froman\fcharset77 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww13080\viewh12880\viewkind0
\pard\tx0\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li1120\fi-1120\ql\qnatural

\f0\fs24 \cf0 Copyright \'a9 2005 by Apple Computer, Inc.  All Rights Reserved.\
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li1120\fi-400\ri860\ql\qnatural

\f1\fs30 \cf0 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li1120\fi-420\ri-720\ql\qnatural

\f2\b\fs48 \cf0 Core Recipes Example 2:\
A Core Data Command Line Tool\
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li960\fi-20\ri860\ql\qnatural

\f3\b0\fs28 \cf0 \
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li960\ri-460\ql\qnatural

\f0\fs24 \cf0 Using a data model for the CoreRecipes project, this project demonstrates the creation of the Core Data "stack" to access and manipulate information in an XML store for use from a command-line interface.  \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li960\fi-20\ri-460\ql\qnatural
\cf0 \
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 Step 1:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 Uncomment the C-style comment block in the InitializeCoreDataStack function in CoreRecipesTool.m.  This demonstrates how to set up a Core Data persistence "stack" for the use of the tool.  The tool maintains a global Core Data stack; whether you use one or many Core Data stacks depends on the design of your application, framework or tool.\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
Step 2:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 In CoreRecipesTool.m, uncomment the C-style comment block in the FetchAllChefs function.  This illustrates how to create a simple fetch request to retrieve objects of a particular entity from Core Data.  No predicate is specified for the fetch request that is created in this function, indicating that all available instances of the specified entity are to be returned.\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
Step 3:\
\
\pard\tx1420\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li1440\ri-460\ql\qnatural

\f0\b0 \cf0 Uncomment the C-style comment block in the InsertChefAndSave function.  This code shows how to insert a new object of a particular entity, set its properties, and save the entire object graph.  If anything goes wrong with the save, in addition to returning nil the created Chef is deleted.\
\pard\tx960\tx4320\tx5760\tx6720\tx7680\tx8640\tx9600\li4300\fi-3360\ri-460\ql\qnatural

\f2\b \cf0 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li960\fi-20\ri-460\ql\qnatural

\f0\b0 \cf0 \
You may incorporate sample code from these examples into your applications without restriction, although the sample code has been provided "as is" and the responsibility for its operation is completely yours. However, you should not redistribute the source as "Apple Sample Code" if you make changes to it. If you're going to re-distribute the source, we require that you make it clear in the source that, although the code derived from Apple Sample Code,  you've since made changes to it.\
}