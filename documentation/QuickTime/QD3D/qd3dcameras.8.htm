<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Aspect Ratio Cameras</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=3284"> </A><A NAME="36032"> </A>Aspect Ratio Cameras</H1><P CLASS="T1.Text1"><A NAME="pgfId=3287"> </A><A NAME="marker=3285"> </A><A NAME="marker=3286"> </A>An <B CLASS="bold">aspect ratio camera</B> is a type of perspective camera defined in terms of a viewing angle and a horizontal-to-vertical aspect ratio, as shown in <A HREF="qd3dcameras.8.htm#25017" CLASS="XRef">Figure&nbsp;11</A>. With an aspect ratio camera, you don't specify the distance to the view plane directly (as you do with a view plane camera).</P><P CLASS="Fg.Figure"><A NAME="pgfId=3295"> </A>Figure&nbsp;11<A NAME="25017"> </A>An aspect ratio camera</P><DIV><IMG SRC="qd3dcameras-9.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=3296"> </A>The orientation of the field of view is determined by the specified aspect ratio. If the aspect ratio is greater than 1.0, the field of view is vertical. If the aspect ratio is less than 1.0, the field of view is horizontal. In general, to avoid distortion, the aspect ratio should be the same as the aspect ratio of the camera's view port.</P><P CLASS="T1.Text1"><A NAME="pgfId=3297"> </A>You can easily see that as the field of view increases, the view plane must move closer to camera location for the view port to fit within the field of view, in which case the image size decreases (because of perspective foreshortening). Conversely, as the field of view decreases, the view plane must move away from the camera location, and the image size increases.</P><P CLASS="T1.Text1"><A NAME="pgfId=3298"> </A>Note that you can always find a view plane camera that is projectively identical to any aspect ratio camera. (The converse is not true: it's not always possible to find an aspect ratio camera that is projectively identical to an arbitrary view plane camera.) Consider the aspect ratio camera shown in <A HREF="qd3dcameras.8.htm#27450" CLASS="XRef">Figure&nbsp;12</A>. It's easy to specify a view plane camera that creates the same image as that aspect ratio camera. To do this, set the center of the cross section (<I CLASS="italics">c</I><EM CLASS="Subscript">x</EM>,&nbsp;<I CLASS="italics">c</I><EM CLASS="Subscript">y</EM>) to be the origin (0,&nbsp;0), and set the half-width <I CLASS="italics">d</I><EM CLASS="Subscript">x</EM> to be the quantity <I CLASS="italics">d</I>&nbsp;tan(/2), where <I CLASS="italics">d</I> is the distance from the camera to the view plane and  is the horizontal field of view. (The half-angle applies to the smaller of the two view port dimensions.)</P><P CLASS="Fg.Figure"><A NAME="pgfId=3309"> </A>Figure&nbsp;12<A NAME="27450"> </A>The relation between aspect ratio cameras and view plane cameras<A NAME="marker=3306"> </A><A NAME="marker=3307"> </A><A NAME="marker=3308"> </A></P><DIV><IMG SRC="qd3dcameras-10.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=3313"> </A>See <A HREF="qd3dcameras.12.htm#25222" CLASS="XRef">&quot;Aspect Ratio Camera Data Structure&quot;</A> for more details on the data you need to provide to define an aspect ratio camera. See <A HREF="qd3dcameras.17.htm#36053" CLASS="XRef">&quot;Managing Aspect Ratio Cameras&quot;</A> for a description of the routines you can use to create and manipulate aspect ratio cameras.</P><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>