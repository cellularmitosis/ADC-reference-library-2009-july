<HTML><head><script language="JavaScript" src="../../RM/frametest.js"></script><TITLE> Enabling Asynchronous MP Decompression  Using the Base Decompressor</TITLE><script language=javascript> window.parent.focus(); </script></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>What's New in QuickTime 5</I><P>| <A HREF="Max.49.htm">Previous</A> | <A HREF="Max.1.htm">Chapter Contents</A> | <A HREF="Max.htm">Chapter Top</A> | <A HREF="Max.4b.htm">Next</A> |</P></DIV><!-- QTnavbar end --><H1 CLASS="H2.Heading2"><A NAME="pgfId=68779"> </A><A NAME="Enabling Asynchronous MP Decompression"> </A>Enabling Asynchronous MP Decompression  Using the Base Decompressor</H1><P CLASS="T1.Text1"><A NAME="pgfId=69142"> </A>The <A NAME="Base Decompressor"> </A>Base Decompressor, which has been available since QuickTime 3.0, is designed to simplify the job of writing an Image Decompressor. It deals with the job of managing asynchronous scheduled decompression, manages the queue safely, and avoids synchronization issues.</P><P CLASS="T1.Text1"><A NAME="pgfId=69131"> </A>In QuickTime 5, the Base Decompressor has been extended to simplify making an image decompressor component able to perform asynchronous decompression in a single MP task. The JPEG, H.263, Cinepak, and Video decompressors use this mechanism to run asynchronously. The H.263 compressor has been similarly modified to run asynchronously.</P><P CLASS="T1.Text1"><A NAME="pgfId=69155"> </A>If you have a decompressor that uses the base codec, all you need to do to support the asynchronous MP mode is to implement the <TT CLASS="cv">ImageCodecGetMPWorkFunction</TT> function.</P><P CLASS="T1.Text1"><A NAME="pgfId=68783"> </A>Your implementation should call your base decompressor instance's <TT CLASS="cv">ImageCodecGetBaseMPWorkFunction</TT> function, and pass to it a UPP for your <TT CLASS="cv">DrawBand</TT> function: </P><CODE CLASS="Cv.Code"><A NAME="pgfId=97311"> </A>pascal ComponentResult<BR>ExampleCDGetMPWorkFunction(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExampleSubDecompressorGlobals *storage,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ComponentMPWorkFunctionUPP *workFunction, void **refCon)<BR>{<BR>    if( 0 == storage-&gt;drawBandUPP )<BR>        storage-&gt;drawBandUPP = <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NewImageCodecMPDrawBandUPP( ExampleCDDrawBand);</code><br><CODE CLASS="Cv.Code"><A NAME="pgfId=97315"> </A>&nbsp;&nbsp;&nbsp;&nbsp;return ImageCodecGetBaseMPWorkFunction(storage-&gt;delegateComponent, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;workFunction, refCon, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage-&gt;drawBandUPP, storage);<BR>}</code><br><P CLASS="T1.Text1"><A NAME="pgfId=68789"> </A>If you implement the <TT CLASS="cv">ImageCodecGetMPWorkFunction</TT> selector, your <TT CLASS="cv">DrawBand</TT> function must be MP-safe. (MP safety is an even stricter condition than interrupt safety. As well as not calling routines that may move or purge memory, you may not make any calls which might cause 68K code to be executed. Ideally, your <TT CLASS="cv">DrawBand</TT> function should not make any API calls whatsoever.)</P><hr>&#169; 2001 Apple Computer, Inc.<!-- QTnavbar start --><P><I>What's New in QuickTime 5</I><P>| <A HREF="Max.49.htm">Previous</A> | <A HREF="Max.1.htm">Chapter Contents</A> | <A HREF="Max.htm">Chapter Top</A> | <A HREF="Max.4b.htm">Next</A> |</P></DIV><!-- QTnavbar end --></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>