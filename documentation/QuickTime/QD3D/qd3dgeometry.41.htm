<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Traversing Mesh Components, Vertices, Faces, and Edges</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=5474"> </A><A NAME="30340"> </A>Traversing Mesh Components, Vertices, Faces, and Edges</H1><P CLASS="T1.Text1"><A NAME="pgfId=5479"> </A><A NAME="marker=12868"> </A><A NAME="marker=5475"> </A>QuickDraw&nbsp;3D provides a large number of functions that you can use to iterate through the components, vertices, faces, or edges of a mesh. For example, you can call the <TT CLASS="cv">Q3Mesh_FirstMeshComponent</TT> function to get the first component in a mesh; then you can call the <TT CLASS="cv">Q3Mesh_NextMeshComponent</TT> function to get any subsequent mesh components.</P><P CLASS="T1.Text1"><A NAME="pgfId=12589"> </A>For even simpler mesh traversal, QuickDraw&nbsp;3D defines a large number of macros modeled on the standard C language <TT CLASS="cv">for</TT> statement. For example, the <TT CLASS="cv">Q3ForEachMeshComponent</TT> macro uses the <TT CLASS="cv">Q3Mesh_FirstMeshComponent</TT> function and the <TT CLASS="cv">Q3Mesh_NextMeshComponent</TT> function to iterate through all the components of a mesh.</P><P CLASS="I.Important"><A NAME="pgfId=12590"> </A>Adding or deleting vertices or faces within the scope of these iterators might produce unpredictable results. </P><CODE CLASS="Cv.Code"><A NAME="pgfId=45934"> </A>#define Q3ForEachMeshComponent(m,c,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (c) = Q3Mesh_FirstMeshComponent((m),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(c);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(c) = Q3Mesh_NextMeshComponent((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=45940"> </A>#define Q3ForEachComponentVertex(c,v,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (v) = Q3Mesh_FirstComponentVertex((c),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v) = Q3Mesh_NextComponentVertex((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=45946"> </A>#define Q3ForEachComponentEdge(c,e,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (e) = Q3Mesh_FirstComponentEdge((c),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e) = Q3Mesh_NextComponentEdge((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=45952"> </A>#define Q3ForEachMeshVertex(m,v,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (v) = Q3Mesh_FirstMeshVertex((m),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v) = Q3Mesh_NextMeshVertex((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=45958"> </A>#define Q3ForEachMeshFace(m,f,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (f) = Q3Mesh_FirstMeshFace((m),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(f) = Q3Mesh_NextMeshFace((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=45964"> </A>#define Q3ForEachMeshEdge(m,e,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (e) = Q3Mesh_FirstMeshEdge((m),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e) = Q3Mesh_NextMeshEdge((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=45970"> </A>#define Q3ForEachVertexEdge(v,e,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (e) = Q3Mesh_FirstVertexEdge((v),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e) = Q3Mesh_NextVertexEdge((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=45976"> </A>#define Q3ForEachVertexVertex(v,n,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (n) = Q3Mesh_FirstVertexVertex((v),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(n);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(n) = Q3Mesh_NextVertexVertex((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=45982"> </A>#define Q3ForEachVertexFace(v,f,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (f) = Q3Mesh_FirstVertexFace((v),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(f) = Q3Mesh_NextVertexFace((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=45988"> </A>#define Q3ForEachFaceEdge(f,e,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (e) = Q3Mesh_FirstFaceEdge((f),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e) = Q3Mesh_NextFaceEdge((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=45994"> </A>#define Q3ForEachFaceVertex(f,v,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (v) = Q3Mesh_FirstFaceVertex((f),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v) = Q3Mesh_NextFaceVertex((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=46000"> </A>#define Q3ForEachFaceFace(f,n,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (n) = Q3Mesh_FirstFaceFace((f),(i));&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(n);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(n) = Q3Mesh_NextFaceFace((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=46006"> </A>#define Q3ForEachFaceContour(f,h,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (h) = Q3Mesh_FirstFaceContour((f),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(h);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(h) = Q3Mesh_NextFaceContour((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=46012"> </A>#define Q3ForEachContourEdge(h,e,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (e) = Q3Mesh_FirstContourEdge((h),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(e) = Q3Mesh_NextContourEdge((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=46018"> </A>#define Q3ForEachContourVertex(h,v,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (v) = Q3Mesh_FirstContourVertex((h),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v) = Q3Mesh_NextContourVertex((i)) )<BR></CODE><CODE CLASS="Cv.Code"><A NAME="pgfId=46024"> </A>#define Q3ForEachContourFace(h,f,i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;for ( (f) = Q3Mesh_FirstContourFace((h),(i));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(f) = Q3Mesh_NextContourFace((i)) )<BR></CODE><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5500"> </A>Q3Mesh_FirstMeshComponent</H2><P CLASS="T1.Text1"><A NAME="pgfId=5501"> </A><A NAME="marker=3833"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstMeshComponent</TT> function to get the first component of a mesh.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46030"> </A>TQ3MeshComponent Q3Mesh_FirstMeshComponent (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject mesh, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46032"> </A><TT CLASS="cv">mesh</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5503"> </A>A mesh.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46041"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5504"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5505"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5506"> </A>The <TT CLASS="cv">Q3Mesh_FirstMeshComponent</TT> function returns, as its function result, the first mesh component in the mesh specified by the <TT CLASS="cv">mesh</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstMeshComponent</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextMeshComponent</TT> function.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=12602"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=12603"> </A>The <TT CLASS="cv">Q3Mesh_FirstMeshComponent</TT> function might not accurately report the first mesh component in a mesh if called while mesh updating is delayed (that is, after a call to <TT CLASS="cv">Q3Mesh_DelayUpdates</TT> but before the matching call to <TT CLASS="cv">Q3Mesh_ResumeUpdates</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5507"> </A>Q3Mesh_NextMeshComponent</H2><P CLASS="T1.Text1"><A NAME="pgfId=5508"> </A><A NAME="marker=3842"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextMeshComponent</TT> function to get the next component in a mesh.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46052"> </A>TQ3MeshComponent Q3Mesh_NextMeshComponent (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46054"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=12289"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5511"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5512"> </A>The <TT CLASS="cv">Q3Mesh_NextMeshComponent</TT> function returns, as its function result, the next mesh component in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstMeshComponent</TT> or <TT CLASS="cv">Q3Mesh_NextMeshComponent</TT>. If there are no more mesh components, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=12618"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=12619"> </A>The <TT CLASS="cv">Q3Mesh_NextMeshComponent</TT> function might not accurately report the next mesh component in a mesh if called while mesh updating is delayed (that is, after a call to <TT CLASS="cv">Q3Mesh_DelayUpdates</TT> but before the matching call to <TT CLASS="cv">Q3Mesh_ResumeUpdates</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5513"> </A>Q3Mesh_FirstComponentVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=5514"> </A><A NAME="marker=3850"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstComponentVertex</TT> function to get the first vertex in a mesh component.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46065"> </A>TQ3MeshVertex Q3Mesh_FirstComponentVertex (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshComponent component, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46067"> </A><TT CLASS="cv">component</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5516"> </A>A mesh component.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46076"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5517"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5518"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=12633"> </A>The <TT CLASS="cv">Q3Mesh_FirstComponentVertex</TT> function returns, as its function result, the first vertex in the mesh component specified by the <TT CLASS="cv">component</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstComponentVertex</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextComponentVertex</TT> function.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=12640"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=12641"> </A>The <TT CLASS="cv">Q3Mesh_FirstComponentVertex</TT> function might not accurately report the first vertex in a mesh component if called while mesh updating is delayed (that is, after a call to <TT CLASS="cv">Q3Mesh_DelayUpdates</TT> but before the matching call to <TT CLASS="cv">Q3Mesh_ResumeUpdates</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=12634"> </A>Q3Mesh_NextComponentVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=12636"> </A><A NAME="marker=12635"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextComponentVertex</TT> function to get the next vertex in a mesh component.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46087"> </A>TQ3MeshVertex Q3Mesh_NextComponentVertex (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46089"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=6285"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5524"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5525"> </A>The <TT CLASS="cv">Q3Mesh_NextComponentVertex</TT> function returns, as its function result, the next vertex in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstComponentVertex</TT> or <TT CLASS="cv">Q3Mesh_NextComponentVertex</TT>. If there are no more vertices, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=12656"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=12657"> </A>The <TT CLASS="cv">Q3Mesh_NextComponentVertex</TT> function might not accurately report the next vertex in a mesh component if called while mesh updating is delayed (that is, after a call to <TT CLASS="cv">Q3Mesh_DelayUpdates</TT> but before the matching call to <TT CLASS="cv">Q3Mesh_ResumeUpdates</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5526"> </A>Q3Mesh_FirstComponentEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=5527"> </A><A NAME="marker=3867"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstComponentEdge</TT> function to get the first edge in a mesh component.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46100"> </A>TQ3MeshEdge Q3Mesh_FirstComponentEdge (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshComponent component, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46102"> </A><TT CLASS="cv">component</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5529"> </A>A mesh component.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46111"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5530"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5531"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5532"> </A>The <TT CLASS="cv">Q3Mesh_FirstComponentEdge</TT> function returns, as its function result, the first edge in the mesh component specified by the <TT CLASS="cv">component</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstComponentEdge</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextComponentEdge</TT> function.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=12671"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=12672"> </A>The <TT CLASS="cv">Q3Mesh_FirstComponentEdge</TT> function might not accurately report the first edge in a mesh component if called while mesh updating is delayed (that is, after a call to <TT CLASS="cv">Q3Mesh_DelayUpdates</TT> but before the matching call to <TT CLASS="cv">Q3Mesh_ResumeUpdates</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5533"> </A>Q3Mesh_NextComponentEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=5534"> </A><A NAME="marker=3876"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextComponentEdge</TT> function to get the next edge in a mesh component.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46122"> </A>TQ3MeshEdge Q3Mesh_NextComponentEdge (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46124"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5536"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5537"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5538"> </A>The <TT CLASS="cv">Q3Mesh_NextComponentEdge</TT> function returns, as its function result, the next edge in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstComponentEdge</TT> or <TT CLASS="cv">Q3Mesh_NextComponentEdge</TT>. If there are no more edges, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=12684"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=12685"> </A>The <TT CLASS="cv">Q3Mesh_NextComponentEdge</TT> function might not accurately report the next edge in a mesh component if called while mesh updating is delayed (that is, after a call to <TT CLASS="cv">Q3Mesh_DelayUpdates</TT> but before the matching call to <TT CLASS="cv">Q3Mesh_ResumeUpdates</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5539"> </A>Q3Mesh_FirstMeshVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=5540"> </A><A NAME="marker=3884"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstMeshVertex</TT> function to get the first vertex in a mesh.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46135"> </A>TQ3MeshVertex Q3Mesh_FirstMeshVertex (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject mesh, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46137"> </A><TT CLASS="cv">mesh</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5542"> </A>A mesh.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46146"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5543"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5544"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5545"> </A>The <TT CLASS="cv">Q3Mesh_FirstMeshVertex</TT> function returns, as its function result, the first vertex in the mesh specified by the <TT CLASS="cv">mesh</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstMeshVertex</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextMeshVertex</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5546"> </A>Q3Mesh_NextMeshVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=5547"> </A><A NAME="marker=3893"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextMeshVertex</TT> function to get the next vertex in a mesh.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46157"> </A>TQ3MeshVertex Q3Mesh_NextMeshVertex (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46159"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5549"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5550"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5551"> </A>The <TT CLASS="cv">Q3Mesh_NextMeshVertex</TT> function returns, as its function result, the next vertex in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstMeshVertex</TT> or <TT CLASS="cv">Q3Mesh_NextMeshVertex</TT>. If there are no more vertices, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5552"> </A>Q3Mesh_FirstMeshFace</H2><P CLASS="T1.Text1"><A NAME="pgfId=5553"> </A><A NAME="marker=3901"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstMeshFace</TT> function to get the first face in a mesh.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46170"> </A>TQ3MeshFace Q3Mesh_FirstMeshFace (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject mesh, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46172"> </A><TT CLASS="cv">mesh</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5555"> </A>A mesh.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46181"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5556"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5557"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5558"> </A>The <TT CLASS="cv">Q3Mesh_FirstMeshFace</TT> function returns, as its function result, the first face in the mesh specified by the <TT CLASS="cv">mesh</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstMeshFace</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextMeshFace</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5559"> </A>Q3Mesh_NextMeshFace</H2><P CLASS="T1.Text1"><A NAME="pgfId=5560"> </A><A NAME="marker=3910"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextMeshFace</TT> function to get the next face in a mesh.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46192"> </A>TQ3MeshFace Q3Mesh_NextMeshFace (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46194"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5562"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5563"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5564"> </A>The <TT CLASS="cv">Q3Mesh_NextMeshFace</TT> function returns, as its function result, the next face in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstMeshFace</TT> or <TT CLASS="cv">Q3Mesh_NextMeshFace</TT>. If there are no more faces, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5565"> </A>Q3Mesh_FirstMeshEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=5566"> </A><A NAME="marker=3918"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstMeshEdge</TT> function to get the first edge in a mesh.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46205"> </A>TQ3MeshEdge Q3Mesh_FirstMeshEdge (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject mesh, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46207"> </A><TT CLASS="cv">mesh</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5568"> </A>A mesh.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46216"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5569"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5570"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5571"> </A>The <TT CLASS="cv">Q3Mesh_FirstMeshEdge</TT> function returns, as its function result, the first edge in the mesh specified by the <TT CLASS="cv">mesh</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstMeshEdge</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextMeshEdge</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5572"> </A>Q3Mesh_NextMeshEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=5573"> </A><A NAME="marker=3927"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextMeshEdge</TT> function to get the next edge in a mesh.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46227"> </A>TQ3MeshEdge Q3Mesh_NextMeshEdge (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46229"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5575"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5576"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5577"> </A>The <TT CLASS="cv">Q3Mesh_NextMeshEdge</TT> function returns, as its function result, the next edge in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstMeshEdge</TT> or <TT CLASS="cv">Q3Mesh_NextMeshEdge</TT>. If there are no more edges, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5578"> </A>Q3Mesh_FirstVertexEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=5579"> </A><A NAME="marker=3935"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstVertexEdge</TT> function to get the first edge around a vertex.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46240"> </A>TQ3MeshEdge Q3Mesh_FirstVertexEdge (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshVertex vertex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46242"> </A><TT CLASS="cv">vertex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5581"> </A>A mesh vertex.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46251"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5582"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5583"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5584"> </A>The <TT CLASS="cv">Q3Mesh_FirstVertexEdge</TT> function returns, as its function result, the first edge around the vertex specified by the <TT CLASS="cv">vertex</TT> parameter, in a counterclockwise ordering. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstVertexEdge</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextVertexEdge</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5585"> </A>Q3Mesh_NextVertexEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=5586"> </A><A NAME="marker=3944"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextVertexEdge</TT> function to get the next edge around a vertex, in a counterclockwise order.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46262"> </A>TQ3MeshEdge Q3Mesh_NextVertexEdge (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46264"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5588"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5589"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5590"> </A>The <TT CLASS="cv">Q3Mesh_NextVertexEdge</TT> function returns, as its function result, the next edge counterclockwise in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstVertexEdge</TT> or <TT CLASS="cv">Q3Mesh_NextVertexEdge</TT>. If there are no more edges, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5591"> </A>Q3Mesh_FirstVertexVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=5592"> </A><A NAME="marker=3952"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstVertexVertex</TT> function to get the first vertex connected to a vertex by an edge.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46275"> </A>TQ3MeshVertex Q3Mesh_FirstVertexVertex (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshVertex vertex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46277"> </A><TT CLASS="cv">vertex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5594"> </A>A mesh vertex.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46286"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5595"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5596"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5597"> </A>The <TT CLASS="cv">Q3Mesh_FirstVertexVertex</TT> function returns, as its function result, the first vertex neighboring the vertex specified by the <TT CLASS="cv">vertex</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstVertexVertex</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextVertexVertex</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5598"> </A>Q3Mesh_NextVertexVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=5599"> </A><A NAME="marker=3961"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextVertexVertex</TT> function to get the next vertex connected to a vertex by an edge, in a counterclockwise order.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46297"> </A>TQ3MeshVertex Q3Mesh_NextVertexVertex (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46299"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5601"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5602"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5603"> </A>The <TT CLASS="cv">Q3Mesh_NextVertexVertex</TT> function returns, as its function result, the next vertex counterclockwise in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstVertexVertex</TT> or <TT CLASS="cv">Q3Mesh_NextVertexVertex</TT>. If there are no more vertices, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5604"> </A>Q3Mesh_FirstVertexFace</H2><P CLASS="T1.Text1"><A NAME="pgfId=5605"> </A><A NAME="marker=3969"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstVertexFace</TT> function to get the first face around a vertex.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46310"> </A>TQ3MeshFace Q3Mesh_FirstVertexFace (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshVertex vertex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46312"> </A><TT CLASS="cv">vertex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5607"> </A>A mesh vertex.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46321"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5608"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5609"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5610"> </A>The <TT CLASS="cv">Q3Mesh_FirstVertexFace</TT> function returns, as its function result, the first face around the vertex specified by the <TT CLASS="cv">vertex</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstVertexFace</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextVertexVertex</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5611"> </A>Q3Mesh_NextVertexFace</H2><P CLASS="T1.Text1"><A NAME="pgfId=5612"> </A><A NAME="marker=3978"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextVertexFace</TT> function to get the next face around a vertex, in a counterclockwise order.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46332"> </A>TQ3MeshFace Q3Mesh_NextVertexFace (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46334"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5614"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5615"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5616"> </A>The <TT CLASS="cv">Q3Mesh_NextVertexFace</TT> function returns, as its function result, the next face counterclockwise in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstVertexFace</TT> or <TT CLASS="cv">Q3Mesh_NextVertexFace</TT>. If there are no more faces, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5617"> </A>Q3Mesh_FirstFaceEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=5618"> </A><A NAME="marker=3986"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstFaceEdge</TT> function to get the first edge of a mesh face.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46349"> </A>TQ3MeshEdge Q3Mesh_FirstFaceEdge (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshFace face, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46351"> </A><TT CLASS="cv">face</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5620"> </A>A mesh face.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46360"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5621"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5622"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5623"> </A>The <TT CLASS="cv">Q3Mesh_FirstFaceEdge</TT> function returns, as its function result, the first edge of the face specified by the <TT CLASS="cv">face</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstFaceEdge</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextFaceEdge</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5624"> </A>Q3Mesh_NextFaceEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=5625"> </A><A NAME="marker=3995"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextFaceEdge</TT> function to get the next edge of a mesh face, in a counterclockwise order.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46371"> </A>TQ3MeshEdge Q3Mesh_NextFaceEdge (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46373"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5627"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5628"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5629"> </A>The <TT CLASS="cv">Q3Mesh_NextFaceEdge</TT> function returns, as its function result, the next edge counterclockwise in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstFaceEdge</TT> or <TT CLASS="cv">Q3Mesh_NextFaceEdge</TT>. If there are no more edges, this function returns <TT CLASS="cv">NULL</TT>. This function iterates over all the contours in the face.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5630"> </A>Q3Mesh_FirstFaceVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=5631"> </A><A NAME="marker=4003"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstFaceVertex</TT> function to get the first vertex of a mesh face.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46384"> </A>TQ3MeshVertex Q3Mesh_FirstFaceVertex (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshFace face, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46386"> </A><TT CLASS="cv">face</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5633"> </A>A mesh face.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46395"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5634"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5635"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5636"> </A>The <TT CLASS="cv">Q3Mesh_FirstFaceVertex</TT> function returns, as its function result, the first vertex of the face specified by the <TT CLASS="cv">face</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstFaceVertex</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextFaceVertex</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5637"> </A>Q3Mesh_NextFaceVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=5638"> </A><A NAME="marker=4012"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextFaceVertex</TT> function to get the next vertex of a mesh face, in a counterclockwise order.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46406"> </A>TQ3MeshVertex Q3Mesh_NextFaceVertex (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46408"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5640"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5641"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5642"> </A>The <TT CLASS="cv">Q3Mesh_NextFaceVertex</TT> function returns, as its function result, the next vertex counterclockwise in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstFaceVertex</TT> or <TT CLASS="cv">Q3Mesh_NextFaceVertex</TT>. If there are no more vertices, this function returns <TT CLASS="cv">NULL</TT>. This function iterates over all the contours in the face.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5643"> </A>Q3Mesh_FirstFaceFace</H2><P CLASS="T1.Text1"><A NAME="pgfId=5644"> </A><A NAME="marker=4020"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstFaceFace</TT> function to get the first face surrounding a mesh face.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46419"> </A>TQ3MeshFace Q3Mesh_FirstFaceFace (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshFace face, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46421"> </A><TT CLASS="cv">face</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5646"> </A>A mesh face.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46430"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5647"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5648"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5649"> </A>The <TT CLASS="cv">Q3Mesh_FirstFaceFace</TT> function returns, as its function result, the first face surrounding the face specified by the <TT CLASS="cv">face</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstFaceFace</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextFaceFace</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5650"> </A>Q3Mesh_NextFaceFace</H2><P CLASS="T1.Text1"><A NAME="pgfId=5651"> </A><A NAME="marker=4029"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextFaceFace</TT> function to get the next face surrounding a mesh face, in a counterclockwise order.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46441"> </A>TQ3MeshFace Q3Mesh_NextFaceFace (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46443"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5653"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5654"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5655"> </A>The <TT CLASS="cv">Q3Mesh_NextFaceFace</TT> function returns, as its function result, the next face counterclockwise in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstFaceFace</TT> or <TT CLASS="cv">Q3Mesh_NextFaceFace</TT>. If there are no more faces, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5656"> </A>Q3Mesh_FirstFaceContour</H2><P CLASS="T1.Text1"><A NAME="pgfId=5657"> </A><A NAME="marker=4037"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstFaceContour</TT> function to get the first contour of a mesh face.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46454"> </A>TQ3MeshContour Q3Mesh_FirstFaceContour (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshFace face, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46456"> </A><TT CLASS="cv">face</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5659"> </A>A mesh face.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46465"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5660"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5661"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5662"> </A>The <TT CLASS="cv">Q3Mesh_FirstFaceContour</TT> function returns, as its function result, the first contour of the face specified by the <TT CLASS="cv">face</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstFaceContour</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextFaceContour</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5663"> </A>Q3Mesh_NextFaceContour</H2><P CLASS="T1.Text1"><A NAME="pgfId=5664"> </A><A NAME="marker=4046"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextFaceContour</TT> function to get the next contour of a mesh face.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46476"> </A>TQ3MeshContour Q3Mesh_NextFaceContour (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46478"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5666"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5667"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5668"> </A>The <TT CLASS="cv">Q3Mesh_NextFaceContour</TT> function returns, as its function result, the next contour in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstFaceContour</TT> or <TT CLASS="cv">Q3Mesh_NextFaceContour</TT>. If there are no more contours, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5669"> </A>Q3Mesh_FirstContourEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=5670"> </A><A NAME="marker=4054"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstContourEdge</TT> function to get the first edge of a mesh contour.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46489"> </A>TQ3MeshEdge Q3Mesh_FirstContourEdge (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshContour contour, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46491"> </A><TT CLASS="cv">contour</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5672"> </A>A mesh contour.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46500"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5673"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5674"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5675"> </A>The <TT CLASS="cv">Q3Mesh_FirstContourEdge</TT> function returns, as its function result, the first edge of the mesh contour specified by the <TT CLASS="cv">contour</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstContourEdge</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextContourEdge</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5676"> </A>Q3Mesh_NextContourEdge</H2><P CLASS="T1.Text1"><A NAME="pgfId=5677"> </A><A NAME="marker=4063"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextContourEdge</TT> function to get the next edge of a mesh contour, in a counterclockwise order.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46511"> </A>TQ3MeshEdge Q3Mesh_NextContourEdge (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46513"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5679"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5680"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5681"> </A>The <TT CLASS="cv">Q3Mesh_NextContourEdge</TT> function returns, as its function result, the next edge counterclockwise in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstContourEdge</TT> or <TT CLASS="cv">Q3Mesh_NextContourEdge</TT>. If there are no more edges, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5682"> </A>Q3Mesh_FirstContourVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=5683"> </A><A NAME="marker=4071"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstContourVertex</TT> function to get the first vertex of a mesh contour.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46524"> </A>TQ3MeshVertex Q3Mesh_FirstContourVertex (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshContour contour, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46526"> </A><TT CLASS="cv">contour</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5685"> </A>A mesh contour.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46535"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5686"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5687"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5688"> </A>The <TT CLASS="cv">Q3Mesh_FirstContourVertex</TT> function returns, as its function result, the first vertex of the mesh contour specified by the <TT CLASS="cv">contour</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstContourVertex</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextContourVertex</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5689"> </A>Q3Mesh_NextContourVertex</H2><P CLASS="T1.Text1"><A NAME="pgfId=5690"> </A><A NAME="marker=4080"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextContourVertex</TT> function to get the next vertex of a mesh contour, in a counterclockwise order.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46546"> </A>TQ3MeshVertex Q3Mesh_NextContourVertex (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46548"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5692"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5693"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5694"> </A>The <TT CLASS="cv">Q3Mesh_NextContourVertex</TT> function returns, as its function result, the next vertex in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstContourVertex</TT> or <TT CLASS="cv">Q3Mesh_NextContourVertex</TT>. If there are no more vertices, this function returns <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5695"> </A>Q3Mesh_FirstContourFace</H2><P CLASS="T1.Text1"><A NAME="pgfId=5696"> </A><A NAME="marker=4088"> </A>You can use the <TT CLASS="cv">Q3Mesh_FirstContourFace</TT> function to get the first face surrounding a mesh contour.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46559"> </A>TQ3MeshFace Q3Mesh_FirstContourFace (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshContour contour, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46561"> </A><TT CLASS="cv">contour</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5698"> </A>A mesh contour.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46570"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5699"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5700"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5701"> </A>The <TT CLASS="cv">Q3Mesh_FirstContourFace</TT> function returns, as its function result, the first face of the mesh contour specified by the <TT CLASS="cv">contour</TT> parameter. The <TT CLASS="cv">iterator</TT> parameter is a pointer to a mesh iterator structure that <TT CLASS="cv">Q3Mesh_FirstContourFace</TT> fills in before returning. You should pass the address of that structure to the <TT CLASS="cv">Q3Mesh_NextContourFace</TT> function.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=5702"> </A>Q3Mesh_NextContourFace</H2><P CLASS="T1.Text1"><A NAME="pgfId=5703"> </A><A NAME="marker=4097"> </A>You can use the <TT CLASS="cv">Q3Mesh_NextContourFace</TT> function to get the next face surrounding a mesh contour, in a counterclockwise order.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=46581"> </A>TQ3MeshFace Q3Mesh_NextContourFace (TQ3MeshIterator *iterator);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=46583"> </A><TT CLASS="cv">iterator</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=5705"> </A>A pointer to a mesh iterator structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=5706"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=5707"> </A>The <TT CLASS="cv">Q3Mesh_NextContourFace</TT> function returns, as its function result, the next face counterclockwise in the iteration specified by the <TT CLASS="cv">iterator</TT> parameter, which must have been filled in by a previous call to <TT CLASS="cv">Q3Mesh_FirstContourFace</TT> or <TT CLASS="cv">Q3Mesh_NextContourFace</TT>. If there are no more faces, this function returns <TT CLASS="cv">NULL</TT>.<A NAME="marker=5708"> </A><A NAME="marker=12869"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>