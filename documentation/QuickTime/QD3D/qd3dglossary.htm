<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Glossary</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="ChT.ChapterTitle"><A NAME="pgfId=3205"> </A>Glossary</H1><P CLASS="T1.Text1"><A NAME="pgfId=40552"> </A>| <A HREF="qd3dglossary.htm#16699" CLASS="XRef">A</A> | <A HREF="qd3dglossary.htm#37086" CLASS="XRef">B</A> | <A HREF="qd3dglossary.htm#38074" CLASS="XRef">C</A> | <A HREF="qd3dglossary.htm#38525" CLASS="XRef">D</A> | <A HREF="qd3dglossary.htm#24566" CLASS="XRef">E</A> | <A HREF="qd3dglossary.htm#11787" CLASS="XRef">F</A> | <A HREF="qd3dglossary.htm#18612" CLASS="XRef">G</A> | <A HREF="qd3dglossary.htm#39800" CLASS="XRef">H</A> | <A HREF="qd3dglossary.htm#36776" CLASS="XRef">I</A> | <A HREF="qd3dglossary.htm#25350" CLASS="XRef">J</A> | <A HREF="qd3dglossary.htm#20961" CLASS="XRef">K</A> | <A HREF="qd3dglossary.htm#27324" CLASS="XRef">L</A> | <A HREF="qd3dglossary.htm#26249" CLASS="XRef">M</A> | <A HREF="qd3dglossary.htm#27832" CLASS="XRef">N</A> | <A HREF="qd3dglossary.htm#12859" CLASS="XRef">O</A> | <A HREF="qd3dglossary.htm#23883" CLASS="XRef">P</A> | <A HREF="qd3dglossary.htm#21931" CLASS="XRef">Q</A> | <A HREF="qd3dglossary.htm#21312" CLASS="XRef">R</A> | <A HREF="qd3dglossary.htm#17123" CLASS="XRef">S</A> | <A HREF="qd3dglossary.htm#40951" CLASS="XRef">T</A> | <A HREF="qd3dglossary.htm#22204" CLASS="XRef">U</A> | <A HREF="qd3dglossary.htm#33632" CLASS="XRef">V</A> | <A HREF="qd3dglossary.htm#41432" CLASS="XRef">W</A> | <A HREF="qd3dglossary.htm#12196" CLASS="XRef">X</A> | <A HREF="qd3dglossary.htm#11997" CLASS="XRef">Y</A> | <A HREF="qd3dglossary.htm#24392" CLASS="XRef">Z</A> |</P><P CLASS="T1.Text1"><A NAME="pgfId=21520"> </A><DIV><HR></DIV></P><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40565"> </A><A NAME="16699"> </A>A</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64913"> </A><B CLASS="bold">accelerator</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64914"> </A>See <B CLASS="bold">graphics accelerator.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64915"> </A><B CLASS="bold">adjoint</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64916"> </A>The transpose of a matrix in which each element has been replaced by its cofactor.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64917"> </A><B CLASS="bold">adjoint matrix</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64918"> </A>See <B CLASS="bold">adjoint.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64919"> </A><B CLASS="bold">affine matrix</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64920"> </A>A matrix that specifies an affine transform.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64921"> </A><B CLASS="bold">affine transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64922"> </A>Any arbitrary concatenation of scale, translate, and rotate transforms. An affine transform preserves parallel lines in the objects transformed.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64923"> </A><B CLASS="bold">aliasing</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64924"> </A>The jagged edges (or staircasing) that result from drawing an image on a raster device such as a computer screen. Compare <B CLASS="bold">antialiasing.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64925"> </A><B CLASS="bold">alpha channel</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64926"> </A>A color component in some color spaces whose value represents the opacity of the color defined in the other components. Compare <B CLASS="bold">ARGB color structure.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64927"> </A><B CLASS="bold">ambient coefficient</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64928"> </A>A measure of an object's level of reflection of ambient light.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64929"> </A><B CLASS="bold">ambient light</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64930"> </A>An amount of light of a specific color that is added to the illumination of all surfaces in a model.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64931"> </A><B CLASS="bold">ambient reflection coefficient</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64933"> </A>See <B CLASS="bold">ambient coefficient.</B><A NAME="marker=64932"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64934"> </A><B CLASS="bold">antialiasing</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64935"> </A>The smoothing of jagged edges on a displayed shape by modifying the transparencies of individual pixels along the shape's edge. Compare <B CLASS="bold">aliasing.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64936"> </A><B CLASS="bold">antialiasing quality structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64937"> </A>A data structure that specifies data for the antialiasing quality. Defined by the <CODE CLASS="cv">TQ3AntialiasingQuality<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64938"> </A><B CLASS="bold">API</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64939"> </A>See <B CLASS="bold">application programming interface.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64940"> </A><B CLASS="bold">application coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64942"> </A>See <B CLASS="bold">world coordinate system.</B><A NAME="marker=64941"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64943"> </A><B CLASS="bold">application space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64945"> </A>See <B CLASS="bold">world coordinate system.</B><A NAME="marker=64944"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64946"> </A><B CLASS="bold">application programming </B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64947"> </A><B CLASS="bold">i</B>	The total set of constants, data structures, routines, and other programming elements that allow developers to use some part of the system software.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64948"> </A><B CLASS="bold">area</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64949"> </A>A rectangular section of a plane. Defined by the <CODE CLASS="cv">TQ3Area<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64950"> </A><B CLASS="bold">ARGB color space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64951"> </A>A color space whose components measure the intensity of red, green, and blue, together with the opacity (or alpha component) of the color thus defined.<A NAME="marker=64952"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64953"> </A><B CLASS="bold">ARGB color structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64954"> </A>A data structure that contains information about a color and its opacity. Defined by the <CODE CLASS="cv">TQ3ColorARGB<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64955"> </A><B CLASS="bold">artifact</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64956"> </A>Any oddity or unwanted feature of a rendered image. Compare <B CLASS="bold">aliasing.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64957"> </A><B CLASS="bold">aspect ratio</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64958"> </A>The ratio of the width of an image or other rectangular area to its height.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64959"> </A><B CLASS="bold">aspect ratio camera</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64960"> </A>A type of perspective camera defined in terms of a viewing angle and a horizontal-to-vertical aspect ratio.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64961"> </A><B CLASS="bold">aspect ratio camera data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64962"> </A>A data structure that contains basic information about an aspect ratio camera. Defined by the <CODE CLASS="cv">TQ3ViewAngleAspectCameraData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64970"> </A><B CLASS="bold">attenuation</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64971"> </A>The loss of light intensity over distance.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64972"> </A><B CLASS="bold">attribute</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64974"> </A>See <B CLASS="bold">attribute object.</B><A NAME="marker=64973"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64975"> </A><B CLASS="bold">attribute metahandler</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64976"> </A>A metahandler that defines methods for handling custom attribute data.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64977"> </A><B CLASS="bold">attribute object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64981"> </A>A type of QuickDraw&nbsp;3D object that determines some of the characteristics of a model, such as the color of objects or parts of objects in the model, the transparency of objects, and so forth. An attribute is of type <CODE CLASS="cv">TQ3Element<BR></CODE>. See also <B CLASS="bold">ambient coefficient, diffuse color, highlight state, normal vector, shading parameterization, specular color, specular reflection exponent, standard surface parameterization, surface shader, surface tangent, transparency color.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64982"> </A><B CLASS="bold">attribute set</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64983"> </A>A collection of zero or more different attribute types and their associated data.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=64984"> </A><B CLASS="bold">axis</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=64986"> </A>See <B CLASS="bold">coordinate axis.</B><A NAME="marker=64985"> </A></DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=52673"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40571"> </A><A NAME="37086"> </A>B</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65013"> </A><B CLASS="bold">back clipping plane</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65015"> </A>See <B CLASS="bold">yon plane.</B><A NAME="marker=65014"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65016"> </A><B CLASS="bold">backface culling</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65017"> </A>Ignoring backfacing polygons during rendering. Backface culling can reduce the amount of time required to render a model. Compare <B CLASS="bold">hidden surface removal.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65018"> </A><B CLASS="bold">backfacing polygon</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65019"> </A>Any polygon in a surface whose surface normal points away from a view's camera.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65020"> </A><B CLASS="bold">backfacing style</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65024"> </A>A type of QuickDraw&nbsp;3D object that determines whether or not a renderer draws shapes that face away from a scene's camera.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65025"> </A><B CLASS="bold">background shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65026"> </A>A shader that applies an image to the yon (or far) clipping plane of a view. Compare <B CLASS="bold">foreground shader.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65027"> </A><B CLASS="bold">badge</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65028"> </A>A visual element in a frame of a 3D model displayed by the 3D&nbsp;Viewer that distinguishes the frame from a static image.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65029"> </A><B CLASS="bold">base class</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65030"> </A>See <B CLASS="bold">parent class.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65031"> </A><B CLASS="bold">big-endian</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65032"> </A>Data formatting in which each field is addressed by referring to its most significant byte. See also <B CLASS="bold">little-endian.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65033"> </A><B CLASS="bold">binary file</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65034"> </A>A file object whose data is a&nbsp;stream of raw binary data, the type of which is indicated by object type codes. Compare <B CLASS="bold">text file.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65035"> </A><B CLASS="bold">bitmap</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65036"> </A>A two-dimensional array of values, each of which represents the state of one pixel<B CLASS="bold">. </B>Defined by the <CODE CLASS="cv">TQ3Bitmap<BR></CODE> data type. See also <B CLASS="bold">mipmap, pixmap, storage pixmap.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65037"> </A><B CLASS="bold">bitmap marker</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65038"> </A>A type of marker that uses a bitmap to specify the image that is to be drawn on top of a rendered scene at the specified location. Defined by the <CODE CLASS="cv">TQ3MarkerData<BR></CODE> data type. Compare <B CLASS="bold">pixmap marker.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65039"> </A><B CLASS="bold">bounding box</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65040"> </A>A rectangular box, aligned with the coordinate axes, that completely encloses an object. Defined by the <CODE CLASS="cv">TQ3BoundingBox<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65041"> </A><B CLASS="bold">bounding loop</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65042"> </A>A section of code in which all bounding box or sphere calculation takes place. A bounding loop begins with a call to the <CODE CLASS="cv">Q3View_StartBoundingBox<BR></CODE> (or <CODE CLASS="cv">Q3View_StartBoundingSphere<BR></CODE>) routine and should end when a call to <CODE CLASS="cv">Q3View_EndBoundingBox<BR></CODE> (or <CODE CLASS="cv">Q3View_EndBoundingSphere<BR></CODE>) returns some value other than <CODE CLASS="cv">kQ3ViewStatusRetraverse<BR></CODE>. A bounding loop is a type of submitting loop. See also <B CLASS="bold">picking loop, rendering loop, writing loop.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65043"> </A><B CLASS="bold">bounding sphere</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65044"> </A>A sphere that completely encloses an object. Defined by the <CODE CLASS="cv">TQ3BoundingSphere<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65045"> </A><B CLASS="bold">bounding volume</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65046"> </A>A bounding box or a bounding sphere.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65047"> </A><B CLASS="bold">bounds</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65049"> </A>See <B CLASS="bold">bounding volume.</B><A NAME="marker=65048"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65050"> </A><B CLASS="bold">box</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65051"> </A>A three-dimensional object defined by an origin (that is, a corner of the box) and three vectors that define the edges of the box meeting in that corner. Defined by the <CODE CLASS="cv">TQ3BoxData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65054"> </A><B CLASS="bold">B-spline curve</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65055"> </A>A curve that passes smoothly through a series of control points.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65056"> </A><B CLASS="bold">B-spline polynomial</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65057"> </A>A parametric equation that defines a B-spline curve.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65058"> </A><B CLASS="bold">B-spline surface</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65059"> </A>A surface that passes smoothly through a series of control points.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40573"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40577"> </A><A NAME="38074"> </A>C</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65085"> </A><B CLASS="bold">camera</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65087"> </A>See <B CLASS="bold">camera object.</B><A NAME="marker=65086"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65088"> </A><B CLASS="bold">camera coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65089"> </A>The coordinate system defined by a view's camera. Also called the <I CLASS="italics">view coordinate system</I>. Compare <B CLASS="bold">local coordinate system</B>, <B CLASS="bold">window coordinate system,</B> <B CLASS="bold">world coordinate system</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65090"> </A><B CLASS="bold">camera data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65091"> </A>A data structure that contains basic information about a camera. Defined by the <CODE CLASS="cv">TQ3CameraData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65092"> </A><B CLASS="bold">camera location</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65093"> </A>The position, in the world coordinate system, of a camera. Also called the <I CLASS="italics">eye point.</I> Compare <B CLASS="bold">camera placement structure</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65094"> </A><B CLASS="bold">camera object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65098"> </A>A type of QuickDraw&nbsp;3D object that you can use to define a point of view, a range of visible objects, and a method of projection for generating a two-dimensional image of those objects from a three-dimensional model. A camera object is an instance of the <CODE CLASS="cv">TQ3CameraObject<BR></CODE> class. See also <B CLASS="bold">aspect ratio camera, orthographic camera, view plane camera.</B><A NAME="marker=65099"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65100"> </A><B CLASS="bold">camera placement</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65101"> </A>The location, orientation, and direction of a camera. See also <B CLASS="bold">camera placement structure</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65102"> </A><B CLASS="bold">camera placement structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65103"> </A>A data structure that contains information about the placement (that is, the location, orientation, and direction) of a camera. Defined by the <CODE CLASS="cv">TQ3CameraPlacement<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65104"> </A><B CLASS="bold">camera range</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65105"> </A>The spatial extent that lies between the hither and yon planes of a camera. See also <B CLASS="bold">camera range structure.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65106"> </A><B CLASS="bold">camera range structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65107"> </A>A data structure that contains information about the hither and yon clipping planes for a camera. Defined by the <CODE CLASS="cv">TQ3CameraRange<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65108"> </A><B CLASS="bold">camera space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65110"> </A>See <B CLASS="bold">camera coordinate system.</B><A NAME="marker=65109"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65111"> </A><B CLASS="bold">camera vector</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65113"> </A>See <B CLASS="bold">viewing direction.</B><A NAME="marker=65112"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65114"> </A><B CLASS="bold">camera viewpoint control</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65115"> </A>A control in the controller strip of a viewer object that, when held down, causes a pop-up menu to appear listing the available cameras. Compare <B CLASS="bold">distance button, move button, rotate button, zoom button.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65116"> </A><B CLASS="bold">camera view port</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65117"> </A>The rectangular portion of a view plane that is to be mapped onto the area specified by the current draw context.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65118"> </A><B CLASS="bold">camera view port structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65119"> </A>A data structure that contains information about the view port of a camera. Defined by the <CODE CLASS="cv">TQ3CameraViewPort<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65120"> </A><B CLASS="bold">cap</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65122"> </A>See <B CLASS="bold">end cap.</B><A NAME="marker=65121"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65123"> </A><B CLASS="bold">Cartesian coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65124"> </A>A system of assigning planar positions to objects in terms of their distances from two mutually perpendicular lines (the <I CLASS="italics">x</I> and <I CLASS="italics">y</I> coordinate axes), or of assigning spatial positions to objects in terms of their distances from three mutually perpendicular lines (the <I CLASS="italics">x,</I> <I CLASS="italics">y,</I> and <I CLASS="italics">z</I> coordinate axes). Compare <B CLASS="bold">polar coordinate system, spherical coordinate system.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65125"> </A><B CLASS="bold">center of projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65126"> </A>The point at which the projectors in a perspective projection intersect.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65127"> </A><B CLASS="bold">child class</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65131"> </A>A class that is immediately below some other class (the parent class) in the QuickDraw&nbsp;3D class hierarchy. For example, the light class is a child class of the shape class. A&nbsp;child class inherits all of the methods of its parent. Also called a <I CLASS="italics">subclass.</I></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65132"> </A><B CLASS="bold">clamp</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65133"> </A>For a shader effect, to replicate the boundaries of the effect across the portion of the mapped area that lies outside the valid range 0.0&nbsp;to&nbsp;1.0. Compare <B CLASS="bold">wrap.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65134"> </A><B CLASS="bold">class</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65139"> </A>See <B CLASS="bold">QuickDraw&nbsp;3D class.</B><A NAME="marker=65138"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65140"> </A><B CLASS="bold">class type</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65142"> </A>See <B CLASS="bold">object type.</B><A NAME="marker=65141"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65143"> </A><B CLASS="bold">clipping plane</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65144"> </A>Either of the two planes that limit the part of a model that is rendered. See also <B CLASS="bold">hither plane, yon plane.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65145"> </A><B CLASS="bold">closed</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65146"> </A>Not open. Compare <B CLASS="bold">open.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65151"> </A><B CLASS="bold">color space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65152"> </A>A specification of a particular method for representing colors. Compare <B CLASS="bold">RGB color space.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65153"> </A><B CLASS="bold">complement</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65154"> </A>The set of points that lie outside a given solid object. The complement of the object <I CLASS="italics">A</I> is represented by the function &#172;<I CLASS="italics">A</I>. Compare <B CLASS="bold">intersection, union.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65155"> </A><B CLASS="bold">component</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65157"> </A>See <B CLASS="bold">mesh component.</B><A NAME="marker=65156"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65158"> </A><B CLASS="bold">concave polygon</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65159"> </A>A polygon with at least one interior angle greater than 180. Compare <B CLASS="bold">convex polygon.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65160"> </A><B CLASS="bold">cone</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65161"> </A>A three-dimensional object defined by an origin (that is, the center of the base) and three vectors that define the orientation and the major and minor radii of the cone. Defined by the <CODE CLASS="cv">TQ3ConeData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65162"> </A><B CLASS="bold">conic</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65163"> </A>See <B CLASS="bold">conic section.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65164"> </A><B CLASS="bold">conic section</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65165"> </A>Any two-dimensional curve that is formed by the intersection of a plane with a right circular cone. The most common conic sections are ellipses, circles, parabolas, and hyperbolas. Compare <B CLASS="bold">nonuniform rational B-spline (NURB).</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65166"> </A><B CLASS="bold">connected</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65167"> </A>Said of a pair of mesh vertices if an unbroken path of edges exists linking one vertex to the other. Compare <B CLASS="bold">mesh component.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65168"> </A><B CLASS="bold">constant shading</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65169"> </A>A method of shading surfaces in which the incident light color and intensity are calculated for a single point on a polygon and then applied to the entire polygon. Compare <B CLASS="bold">Gouraud shading, Phong shading.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65170"> </A><B CLASS="bold">constant subdivision</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65171"> </A>A method of subdividing smooth curves and surfaces. In this method, the renderer subdivides a curve into some given number of polyline segments and a surface into a certain-sized mesh of polygons. Compare <B CLASS="bold">screen-space subdivision, world-space subdivision.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65172"> </A><B CLASS="bold">constructive solid geometry (CSG)</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65173"> </A>A way of modeling solid objects constructed from the union, intersection, or difference of other solid objects.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65174"> </A><B CLASS="bold">container face</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65175"> </A>The face in a mesh that contains a particular contour.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65176"> </A><B CLASS="bold">contour</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65177"> </A>A list of vertices. In a mesh, a contour specifies a hole in a face. Compare <B CLASS="bold">container face.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65178"> </A><B CLASS="bold">controller</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65180"> </A>See <B CLASS="bold">controller object.</B><A NAME="marker=65179"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65181"> </A><B CLASS="bold">controller channel</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65182"> </A>Any piece of information sent from an application to an input device. Compare <B CLASS="bold">controller value.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65183"> </A><B CLASS="bold">controller data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65184"> </A>A data structure that contains information about a controller. Defined by the <CODE CLASS="cv">TQ3ControllerData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65185"> </A><B CLASS="bold">controller object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65189"> </A>A QuickDraw&nbsp;3D object that represents a 3D pointing device. A controller object is an instance of the <CODE CLASS="cv">TQ3ControllerObject<BR></CODE> class. See also <B CLASS="bold">tracker object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65190"> </A><B CLASS="bold">controller state</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65192"> </A>See <B CLASS="bold">controller state object.</B><A NAME="marker=65191"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65193"> </A><B CLASS="bold">controller state object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65197"> </A>A QuickDraw&nbsp;3D object that represents the current channels and other settings of a controller. A controller state object is an instance of the <CODE CLASS="cv">TQ3ControllerStateObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65198"> </A><B CLASS="bold">controller strip</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65199"> </A>A rectangular area at the bottom of a viewer object that contains one or more controls (usually buttons). Compare <B CLASS="bold">camera viewpoint control, distance button, move button, rotate button, zoom button.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65200"> </A><B CLASS="bold">controller value</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65201"> </A>Any piece of information sent from an input device to an application. Compare <B CLASS="bold">controller channel.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65202"> </A><B CLASS="bold">control point</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65203"> </A>A geometric point used to control the curvature of a curve or surface. Compare <B CLASS="bold">knot.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65204"> </A><B CLASS="bold">convex polygon</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65205"> </A>A polygon whose interior angles are all less than or equal to 180. Compare <B CLASS="bold">concave polygon.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65206"> </A><B CLASS="bold">coordinate axis</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65207"> </A>A line in a plane or in space that helps to define the position of geometric objects. See also <I CLASS="italics">x</I><B CLASS="bold"> axis, </B><I CLASS="italics">y</I><B CLASS="bold"> axis, </B><I CLASS="italics">z</I><B CLASS="bold"> axis.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65208"> </A><B CLASS="bold">coordinates</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65210"> </A>(1)&nbsp;See <B CLASS="bold">coordinate system.</B> (2)&nbsp;See <B CLASS="bold">tracker coordinates.</B><A NAME="marker=65209"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65211"> </A><B CLASS="bold">coordinate space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65213"> </A>See <B CLASS="bold">coordinate system.</B><A NAME="marker=65212"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65214"> </A><B CLASS="bold">coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65215"> </A>Any system of assigning planar or spatial positions to objects. Compare <B CLASS="bold">Cartesian coordinate system, polar coordinate system, spherical coordinate system.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65216"> </A><B CLASS="bold">corner</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65218"> </A>See <B CLASS="bold">mesh corner.</B><A NAME="marker=65217"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65219"> </A><B CLASS="bold">cross product</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65220"> </A>The vector that is perpendicular to two given vectors and whose magnitude is the product of the magnitudes of those two vectors multiplied by the sine of the angle between them. The cross product of the vectors <I CLASS="italics">u</I> and <I CLASS="italics">v</I> is denoted <I CLASS="italics">u</I> <I CLASS="italics">v</I>. Compare <B CLASS="bold">dot product.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65221"> </A><B CLASS="bold">CSG</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65223"> </A>See <B CLASS="bold">constructive solid geometry.</B><A NAME="marker=65222"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65224"> </A><B CLASS="bold">CSG equation</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65225"> </A>A value that encodes which CSG operations are to be performed on a model's CSG objects.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65226"> </A><B CLASS="bold">CSG object ID</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65227"> </A>A number, attached to an object as an attribute, that identifies an object for CSG operations.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65228"> </A><B CLASS="bold">C standard I/O library</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65230"> </A>See <B CLASS="bold">standard I/O library.</B><A NAME="marker=65229"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65231"> </A><B CLASS="bold">C string object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65235"> </A>A QuickDraw&nbsp;3D object that contains a standard C string (that is, an array of characters terminated by the null character).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65236"> </A><B CLASS="bold">culling</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65237"> </A>See <B CLASS="bold">backface culling.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65238"> </A><B CLASS="bold">custom</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65242"> </A>Supplied by your application, not by QuickDraw&nbsp;3D.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65243"> </A><B CLASS="bold">custom surface parameterization</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65244"> </A>A parameterization of a surface supplied by your application. Compare <B CLASS="bold">natural surface parameterization, standard surface parameterization.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65245"> </A><B CLASS="bold">cylinder</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65246"> </A>A three-dimensional object defined by an origin (that is, the center of the base) and three mutually perpendicular vectors that define the orientation and the major and minor radii of the cylinder. Defined by the <CODE CLASS="cv">TQ3CylinderData<BR></CODE> data type.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40579"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40583"> </A><A NAME="38525"> </A>D</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65274"> </A><B CLASS="bold">database file</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65275"> </A>A metafile in which all shared objects contained in the file are listed in the file's table of contents. See also <B CLASS="bold">normal file, stream file.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65276"> </A><B CLASS="bold">database mode</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65277"> </A>The mode in which a database file is opened. See also <B CLASS="bold">normal mode, stream mode.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65279"> </A><B CLASS="bold">default surface parameterization</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65281"> </A>See <B CLASS="bold">standard surface parameterization.</B><A NAME="marker=65280"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65282"> </A><B CLASS="bold">degrees of freedom (DOF)</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65283"> </A>The number of dimensions that are independently specifiable by a particular input device. For example, a slider or a dial has one degree of freedom; a mouse typically has two degrees of freedom.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65284"> </A><B CLASS="bold">device coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65286"> </A>See <B CLASS="bold">window coordinate system.</B><A NAME="marker=65285"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65287"> </A><B CLASS="bold">device space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65289"> </A>See <B CLASS="bold">window coordinate system.</B><A NAME="marker=65288"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65290"> </A><B CLASS="bold">differential scaling</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65291"> </A>A scale transform in which the scaling values <I CLASS="italics">d</I><EM CLASS="Subscript">x</EM>, <I CLASS="italics">d</I><EM CLASS="Subscript">y</EM>, and <I CLASS="italics">d</I><EM CLASS="Subscript">z</EM> are not all identical. Compare <B CLASS="bold">uniform scaling.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65292"> </A><B CLASS="bold">diffuse coefficient</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65293"> </A>A measure of an object's level of diffuse reflection.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65294"> </A><B CLASS="bold">diffuse color</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65295"> </A>The color of the light of a diffuse reflection.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65296"> </A><B CLASS="bold">diffuse reflection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65297"> </A>The type of reflection that is characteristic of light reflected from a dull, nonshiny surface. Also called <I CLASS="italics">Lambertian reflection.</I> Compare <B CLASS="bold">specular reflection.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65298"> </A><B CLASS="bold">diffuse reflection coefficient</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65300"> </A>See <B CLASS="bold">diffuse coefficient.</B><A NAME="marker=65299"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65301"> </A><B CLASS="bold">direct draw surface draw </B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65302"> </A><B CLASS="bold">c</B>	A data structure that contains information about a direct draw surface draw context. Defined by the <CODE CLASS="cv">TQ3DDSurfaceDrawContextData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65303"> </A><B CLASS="bold">directional light</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65304"> </A>A light source that emits parallel rays of light in a specific direction.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65305"> </A><B CLASS="bold">directional light data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65306"> </A>A data structure that contains information about a directional light. Defined by the <CODE CLASS="cv">TQ3DirectionalLightData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65307"> </A><B CLASS="bold">dirty state</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65308"> </A>A Boolean value that indicates whether an unknown object is preserved in its original state (<CODE CLASS="cv">kQ3False<BR></CODE>) or should be updated when written back to the file object from which it was originally read (<CODE CLASS="cv">kQ3True<BR></CODE>).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65309"> </A><B CLASS="bold">disk</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65310"> </A>A two-dimensional surface defined by an origin (that is, the center of the disk) and two vectors that define the major and minor radii of the disk. Defined by the <CODE CLASS="cv">TQ3DiskData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65311"> </A><B CLASS="bold">display group</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65312"> </A>A type of group that contains drawable objects. See also <B CLASS="bold">ordered display group, proxy display group.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65313"> </A><B CLASS="bold">distance button</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65314"> </A>A button in the controller strip of a viewer object that, when clicked, puts the cursor into trucking mode. Subsequent dragging up or down in the picture area causes the object to move farther away or closer. Compare <B CLASS="bold">camera viewpoint control, move button, rotate button, zoom button.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65315"> </A><B CLASS="bold">DOF</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65316"> </A>See <B CLASS="bold">degrees of freedom.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65317"> </A><B CLASS="bold">dot product</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65318"> </A>The floating-point number obtained by multiplying corresponding scalar components of two vectors and then adding together all those products. The dot product of the vectors <I CLASS="italics">u</I> and <I CLASS="italics">v</I> is denoted <I CLASS="italics">u</I> <I CLASS="italics">v</I>. Compare <B CLASS="bold">cross product.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65319"> </A><B CLASS="bold">drawable flag</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65320"> </A>A group state flag that determines whether a group is to be drawn when it is passed to a view for rendering or picking. Compare <B CLASS="bold">inline flag, picking flag.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65321"> </A><B CLASS="bold">draw context</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65323"> </A>See <B CLASS="bold">draw context object.</B><A NAME="marker=65322"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65324"> </A><B CLASS="bold">draw context coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65326"> </A>See <B CLASS="bold">window coordinate system.</B><A NAME="marker=65325"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65327"> </A><B CLASS="bold">draw context data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65328"> </A>A data structure that contains basic information about a draw context. Defined by the <CODE CLASS="cv">TQ3DrawContextData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65329"> </A><B CLASS="bold">draw context object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65333"> </A>A QuickDraw&nbsp;3D object that maintains information specific to a particular window system or drawing destination. A draw context object is an instance of the <CODE CLASS="cv">TQ3DrawContextObject<BR></CODE> class. See also <B CLASS="bold">Macintosh draw context, pixmap draw context, Windows draw context, X draw context.</B><A NAME="marker=65334"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65335"> </A><B CLASS="bold">draw context space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65337"> </A>See <B CLASS="bold">window coordinate system.</B><A NAME="marker=65336"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65338"> </A><B CLASS="bold">drawing completion </B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65339"> </A><B CLASS="bold">c</B>	An application-defined function that is called whenever the 3D&nbsp;Viewer has finished drawing any part of a viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65340"> </A><B CLASS="bold">drawing destination</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65341"> </A>The window or other output destination for a rendered model.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40585"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40589"> </A><A NAME="24566"> </A>E</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65362"> </A><B CLASS="bold">edge</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65364"> </A>A straight line that connects two vertices. See also <B CLASS="bold">mesh edge.</B><A NAME="marker=65363"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65365"> </A><B CLASS="bold">edge tolerance</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65366"> </A>A measure of how close a point must be to a line for a hit to occur. Compare <B CLASS="bold">vertex tolerance.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65367"> </A><B CLASS="bold">edit index</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65368"> </A>A long integer associated with a shared object that changes each time the object is edited<B CLASS="bold">.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65369"> </A><B CLASS="bold">element</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65371"> </A>See <B CLASS="bold">element object.</B><A NAME="marker=65370"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65372"> </A><B CLASS="bold">element object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65376"> </A>Any QuickDraw&nbsp;3D object that can be part of a set. An element object is an instance of the <CODE CLASS="cv">TQ3ElementObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65377"> </A><B CLASS="bold">elevation projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65378"> </A>A type of orthographic projection in which the view plane is perpendicular to one of the principal axes of the object being projected. See also <B CLASS="bold">front elevation projection, side elevation projection, top elevation projection.</B> Compare <B CLASS="bold">isometric projection.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65379"> </A><B CLASS="bold">ellipse</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65380"> </A>A two-dimensional curve defined by an origin (that is, the center of the ellipse) and two perpendicular vectors that define the major and minor radii of the ellipse. Defined by the <CODE CLASS="cv">TQ3EllipseData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65381"> </A><B CLASS="bold">ellipsoid</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65382"> </A>A three-dimensional object defined by an origin (that is, the center of the ellipsoid) and three mutually perpendicular vectors that define the orientation and the major and minor radii of the ellipsoid. Defined by the <CODE CLASS="cv">TQ3EllipsoidData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65383"> </A><B CLASS="bold">end cap</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65387"> </A>The delimiting boundary of some QuickDraw&nbsp;3D geometric objects (for instance, the oval top or bottom of a cylinder). Compare <B CLASS="bold">interior cap.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65388"> </A><B CLASS="bold">error</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65392"> </A>A nonrecoverable condition that causes the currently executing QuickDraw&nbsp;3D routine to fail. See also <B CLASS="bold">fatal error, notice, warning.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65393"> </A><B CLASS="bold">Error Manager</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65397"> </A>The part of QuickDraw&nbsp;3D that you can use to handle any errors or other exceptional conditions that occur during the execution of QuickDraw&nbsp;3D routines.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65401"> </A><B CLASS="bold">even-odd rule</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65402"> </A>A method of determining which planar areas defined by an arbitrary list of vertices are inside a polygon. To determine whether a particular bounded region is inside or outside a polygon, shoot a ray from any point in that region in any direction that does not intersect any vertex. If the ray cuts an odd number of edges, that region is inside the polygon; if the ray cuts an even number of edges, that region is outside the polygon.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65413"> </A><B CLASS="bold">eye point</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65415"> </A>See <B CLASS="bold">camera location.</B><A NAME="marker=65414"> </A></DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40591"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40595"> </A><A NAME="11787"> </A>F</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65445"> </A><B CLASS="bold">face</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65446"> </A>A closed figure that forms part of the surface of an object. Usually faces are planar, but mesh faces do not need to be planar. See also <B CLASS="bold">mesh face.</B><A NAME="marker=65447"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65448"> </A><B CLASS="bold">face attribute</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65449"> </A>An attribute that defines a characteristic of a polygonal object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65450"> </A><B CLASS="bold">face index</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65451"> </A>In a mesh, a unique integer (between 0 the total number of faces in the mesh minus 1) associated with a face. Compare <B CLASS="bold">vertex index.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65452"> </A><B CLASS="bold">facet</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65454"> </A>See <B CLASS="bold">face.</B><A NAME="marker=65453"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65455"> </A><B CLASS="bold">faceted shading</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65456"> </A>See <B CLASS="bold">constant shading.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65457"> </A><B CLASS="bold">fall-off value</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65458"> </A>A measure of the attenuation of a spot light's intensity from the edge of the hot angle to the edge of the outer angle. See also <B CLASS="bold">hot angle, outer angle</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65459"> </A><B CLASS="bold">fan</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65460"> </A>A strip in which all the triangles share a common vertex.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65461"> </A><B CLASS="bold">far plane</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65463"> </A>See <B CLASS="bold">yon plane.</B><A NAME="marker=65462"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65464"> </A><B CLASS="bold">fatal error</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65465"> </A>An error whose effects persist even after the call that caused it has ended.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65466"> </A><B CLASS="bold">field of view</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65467"> </A>The horizontal or vertical angular expanse visible through a camera. See also <B CLASS="bold">aspect ratio camera.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65468"> </A><B CLASS="bold">file</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65470"> </A>See <B CLASS="bold">file object.</B><A NAME="marker=65469"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65471"> </A><B CLASS="bold">file idle method</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65472"> </A>A callback routine that is called during lengthy file operations. Compare <B CLASS="bold">view idle method.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65473"> </A><B CLASS="bold">file mode</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65474"> </A>A set of flags that determine which operations can be performed on a piece of storage.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65475"> </A><B CLASS="bold">file mode flag</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65476"> </A>A value used to construct a file mode.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65477"> </A><B CLASS="bold">file object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65481"> </A>A type of QuickDraw&nbsp;3D object that you can use to access disk- or memory-based data stored in a container. A file object is an instance of the <CODE CLASS="cv">TQ3FileObject<BR></CODE> class. See also <B CLASS="bold">storage object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65482"> </A><B CLASS="bold">file status value</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65486"> </A>A value returned by the <CODE CLASS="cv">Q3File_EndWrite<BR></CODE> function that indicates whether QuickDraw&nbsp;3D has finished writing the model to a file object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65487"> </A><B CLASS="bold">fill style</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65491"> </A>A type of QuickDraw&nbsp;3D object that determines whether an object is drawn as a solid filled object or is decomposed into its components (namely, into a set of edges or points).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65492"> </A><B CLASS="bold">flat shading</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65493"> </A>See <B CLASS="bold">constant shading.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65494"> </A><B CLASS="bold">foreground shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65495"> </A>A shader that applies an image to the hither (or near) clipping plane of a view. Compare <B CLASS="bold">background shader.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65496"> </A><B CLASS="bold">frame</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65498"> </A>See <B CLASS="bold">viewer pane.</B><A NAME="marker=65497"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65499"> </A><B CLASS="bold">front clipping plane</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65501"> </A>See <B CLASS="bold">hither plane.</B><A NAME="marker=65500"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65502"> </A><B CLASS="bold">front elevation projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65503"> </A>A type of elevation projection in which the view plane is parallel to the front of the object being projected.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65504"> </A><B CLASS="bold">frustum</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65505"> </A>A solid figure created by cutting a cone or pyramid with two parallel planes. Compare <B CLASS="bold">view frustum.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65506"> </A><B CLASS="bold">frustum coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65508"> </A>See <B CLASS="bold">camera coordinate system.</B><A NAME="marker=65507"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65509"> </A><B CLASS="bold">frustum space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65511"> </A>See <B CLASS="bold">camera coordinate system.</B><A NAME="marker=65510"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65512"> </A><B CLASS="bold">frustum-to-window transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65513"> </A>A transform that defines the relationship between a frustum coordinate system and a window coordinate system. Compare <B CLASS="bold">local-to-world transform,</B> <B CLASS="bold">world-to-frustum transform</B>.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40597"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40601"> </A><A NAME="18612"> </A>G</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65521"> </A><B CLASS="bold">general polygon</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65522"> </A>A closed plane figure defined by one or more lists of vertices (that is, defined by one or more contours). Defined by the <CODE CLASS="cv">TQ3GeneralPolygonData<BR></CODE> data type. See also <B CLASS="bold">simple polygon</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65523"> </A><B CLASS="bold">generic renderer</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65524"> </A>A renderer that you can use solely to collect state information. The generic renderer does not draw any image.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65525"> </A><B CLASS="bold">geometric object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65529"> </A>A type of QuickDraw&nbsp;3D object that describes a particular kind of drawable shape, such as a triangle or a box. A&nbsp;geometric object is an instance of the <CODE CLASS="cv">TQ3GeometryObject<BR></CODE> class. See also <B CLASS="bold">box, cone, cylinder, disk, ellipse, ellipsoid, general polygon, line, marker, mesh, NURB curve, NURB patch, point, polygon, polyhedron, polyline, torus, triangle, trigrid, trimesh.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65530"> </A><B CLASS="bold">geometric primitive</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65534"> </A>Any of the basic geometric objects defined by QuickDraw&nbsp;3D.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65535"> </A><B CLASS="bold">geometry</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65537"> </A>See <B CLASS="bold">geometric object.</B><A NAME="marker=65536"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65538"> </A><B CLASS="bold">geometry attribute</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65539"> </A>An attribute that defines a characteristic of a nonpolygonal geometric object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65540"> </A><B CLASS="bold">global coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65542"> </A>See <B CLASS="bold">world coordinate system.</B><A NAME="marker=65541"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65543"> </A><B CLASS="bold">global space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65545"> </A>See <B CLASS="bold">world coordinate system.</B><A NAME="marker=65544"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65546"> </A><B CLASS="bold">Gouraud shading</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65547"> </A>A method of shading surfaces in which the incident light color and intensity are calculated for each vertex of a polygon and then interpolated linearly across the entire polygon. Compare <B CLASS="bold">constant shading, Phong shading.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65548"> </A><B CLASS="bold">graphics accelerator</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65552"> </A>Any hardware device used by QuickDraw&nbsp;3D to accelerate rendering.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65553"> </A><B CLASS="bold">group</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65555"> </A>See <B CLASS="bold">group object.</B><A NAME="marker=65554"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65556"> </A><B CLASS="bold">group object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65560"> </A>A type of QuickDraw&nbsp;3D object that you can use to collect objects together into hierarchical models. A group object is an instance of the <CODE CLASS="cv">TQ3GroupObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65561"> </A><B CLASS="bold">group position</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65565"> </A>A pointer to a data structure maintained internally by QuickDraw&nbsp;3D that indicates the position of a group element in the group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65566"> </A><B CLASS="bold">group state flag</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65567"> </A>A value that indicates the state of some characteristic of a group.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65568"> </A><B CLASS="bold">group state value</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65569"> </A>A set of group state flags that determine how a group is traversed during rendering or picking, or during computation of its bounding box or sphere.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40603"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40607"> </A><A NAME="39800"> </A>H</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65581"> </A><B CLASS="bold">handle storage object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65582"> </A>A storage object that represents a handle to a dynamically allocated block of RAM.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65583"> </A><B CLASS="bold">head</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65584"> </A>The hot spot of a 3D cursor. Compare<B CLASS="bold"> tail.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65585"> </A><B CLASS="bold">hidden line removal</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65586"> </A>The process of removing any lines in a model that are hidden by opaque surfaces of objects.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65587"> </A><B CLASS="bold">hidden surface removal</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65588"> </A>The process of removing any surfaces in a model that are hidden by opaque surfaces of objects. Compare <B CLASS="bold">backface culling.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65589"> </A><B CLASS="bold">hierarchy</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65594"> </A>See <B CLASS="bold">QuickDraw&nbsp;3D class hierarchy</B>.<A NAME="marker=65593"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65595"> </A><B CLASS="bold">highlight state</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65596"> </A>An attribute having data of type <CODE CLASS="cv">TQ3Boolean<BR></CODE> that determines whether a highlight style overrides the material attributes of an object (<CODE CLASS="cv">kQ3True<BR></CODE>) or not.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65597"> </A><B CLASS="bold">highlight style</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65601"> </A>A type of QuickDraw&nbsp;3D object that determines the material attributes of a geometric object (or a group of geometric objects) that override the normal attributes of the object (or group of objects).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65602"> </A><B CLASS="bold">high-order bit</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65603"> </A>See <B CLASS="bold">most significant bit.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65604"> </A><B CLASS="bold">hit</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65605"> </A>An object in a model that is close enough to the pick geometry. See also <B CLASS="bold">hit list.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65606"> </A><B CLASS="bold">hit data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65607"> </A>A data structure that contains information about a hit. Defined by the <CODE CLASS="cv">TQ3HitData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65608"> </A><B CLASS="bold">hither plane</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65609"> </A>The clipping plane closest to the camera.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65610"> </A><B CLASS="bold">hit information mask</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65611"> </A>A value that indicates the type of information you want returned for the items in a hit list.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65612"> </A><B CLASS="bold">hit list</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65613"> </A>A list of all objects in a model that are close to the pick geometry.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65614"> </A><B CLASS="bold">hit list sorting value</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65615"> </A>A value that determines the kind of sorting that is to be done on a hit list.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65616"> </A><B CLASS="bold">hit path structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65617"> </A>A data structure that contains information about the path through a model hierarchy to a specific picked object. Defined by the <CODE CLASS="cv">TQ3HitPath<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65618"> </A><B CLASS="bold">hit testing</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65620"> </A>See <B CLASS="bold">picking.</B><A NAME="marker=65619"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65621"> </A><B CLASS="bold">hot angle</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65622"> </A>The half-angle (specified in radians) from the center of a spot light's cone of light within which the light remains at constant full intensity. See also <B CLASS="bold">fall-off value, outer angle</B>.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40609"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40613"> </A><A NAME="36776"> </A>I</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65630"> </A><B CLASS="bold">identity matrix</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65631"> </A>Any <I CLASS="italics">n</I>  <I CLASS="italics">n</I> square matrix with elements <I CLASS="italics">a</I><EM CLASS="Subscript">ij</EM> such that <I CLASS="italics">a</I><EM CLASS="Subscript">ij</EM>&nbsp;=&nbsp;1 if <I CLASS="italics">i</I>&nbsp;=&nbsp;<I CLASS="italics">j</I> and <I CLASS="italics">a</I><EM CLASS="Subscript">ij</EM>&nbsp;=&nbsp;0 otherwise. Compare <B CLASS="bold">inverse.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65632"> </A><B CLASS="bold">idle method</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65633"> </A>See <B CLASS="bold">file idle method, view idle method.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65634"> </A><B CLASS="bold">illumination shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65635"> </A>A shader that determines the effects of the view's group of lights on the objects in a model. Compare <B CLASS="bold">Lambert illumination shader, Phong illumination shader.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65636"> </A><B CLASS="bold">image</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65637"> </A>The two-dimensional product of rendering.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65638"> </A><B CLASS="bold">image plane structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65639"> </A>A data structure that contains information about an image plane. Defined by the <CODE CLASS="cv">TQ3ImagePlane<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65642"> </A><B CLASS="bold">immediate mode</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65643"> </A>A mode of defining and rendering a model in which the application maintains the only copy of the model data. See also <B CLASS="bold">retained mode.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65644"> </A><B CLASS="bold">immediate object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65645"> </A>An object that is rendered in immediate mode. See also <B CLASS="bold">retained object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65646"> </A><B CLASS="bold">indexed vertex</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65647"> </A>A three-dimensional vertex specified by its index into an array of three-dimensional points. Defined by the TQ3IndexedVertex3D data type. (Polyhedra are specified using indexed vertices.) See also <B CLASS="bold">mesh vertex, vertex.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65648"> </A><B CLASS="bold">infinite light</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65650"> </A>See <B CLASS="bold">directional light.</B><A NAME="marker=65649"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65651"> </A><B CLASS="bold">information group</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65655"> </A>A group that contains one or more strings (and no other types of QuickDraw&nbsp;3D objects).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65656"> </A><B CLASS="bold">inherit</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65657"> </A>To have the data and methods of a parent class apply to a child class. Compare <B CLASS="bold">override.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65658"> </A><B CLASS="bold">inheritance</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65662"> </A>The property of the QuickDraw&nbsp;3D class hierarchy whereby a child class inherits the data and methods of its parent class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65663"> </A><B CLASS="bold">initial line</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65665"> </A>See <B CLASS="bold">polar axis.</B><A NAME="marker=65664"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65666"> </A><B CLASS="bold">inline</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65667"> </A>A method of executing groups that does not push and pop the graphics state stack before and after it is executed.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65668"> </A><B CLASS="bold">inline flag</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65669"> </A>A group state flag that determines whether or not a group should be executed inline. Compare <B CLASS="bold">drawable flag, picking flag.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65670"> </A><B CLASS="bold">inner product</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65672"> </A>See <B CLASS="bold">dot product</B>.<A NAME="marker=65671"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65673"> </A><B CLASS="bold">input/output (I/O)</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65674"> </A>The parts of a computer system that transfer data to or from peripheral devices.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65675"> </A><B CLASS="bold">instantiable class</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65676"> </A>A class of which instances can be created. All leaf classes are instantiable, and many parent classes are instantiable as well. (For example, both the class <CODE CLASS="cv">TQ3AttributeSet<BR></CODE> and its parent class <CODE CLASS="cv">TQ3SetObject<BR></CODE> are instantiable.)</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65677"> </A><B CLASS="bold">interacting</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65678"> </A>The process of selecting and manipulating objects in a model.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65679"> </A><B CLASS="bold">interactive renderer</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65680"> </A>A renderer that uses a fast and accurate algorithm for drawing solid, shaded surfaces. See also <B CLASS="bold">wireframe renderer</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65681"> </A><B CLASS="bold">interior cap</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65682"> </A>The delimiting boundary of the cutaway section of a partial solid.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65683"> </A><B CLASS="bold">interpolated shading</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65684"> </A>See <B CLASS="bold">Gouraud shading</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65685"> </A><B CLASS="bold">interpolation style</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65689"> </A>A type of QuickDraw&nbsp;3D object that determines the method of interpolation a renderer uses when applying lighting or other shading effects to a surface.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65690"> </A><B CLASS="bold">intersection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65691"> </A>The set of points that lie inside both of two given solid objects. The&nbsp;intersection of the objects <I CLASS="italics">A</I> and <I CLASS="italics">B</I> is represented by the function <I CLASS="italics">A</I>&nbsp;&nbsp;<I CLASS="italics">B</I>. Compare <B CLASS="bold">complement, union.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65692"> </A><B CLASS="bold">inverse</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65693"> </A>For an <I CLASS="italics">n</I>  <I CLASS="italics">n</I> square matrix <I CLASS="italics">A</I> with a nonzero determinant, the matrix <I CLASS="italics">B</I> such that <I CLASS="italics">AB</I>&nbsp;=&nbsp;<I CLASS="italics">BA</I>&nbsp;=<I CLASS="italics">I</I>, where <I CLASS="italics">I</I> is the <I CLASS="italics">n</I>  <I CLASS="italics">n</I> identity matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65694"> </A><B CLASS="bold">inverse matrix</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65695"> </A>See <B CLASS="bold">inverse.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65696"> </A><B CLASS="bold">I/O</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65697"> </A>See <B CLASS="bold">input/output.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65698"> </A><B CLASS="bold">I/O proxy display group</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65699"> </A>A display group that contains several representations of a single geometric object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65700"> </A><B CLASS="bold">isometric projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65701"> </A>A type of orthographic projection in which the view plane is not perpendicular to any of the principal axes of the object being projected but makes equal angles with each of those axes. Compare <B CLASS="bold">elevation projection.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65702"> </A>iterative construction</DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65703"> </A>Constructing a mesh by building it face-by-face, instead of filling in a data structure and constructing it from the data structure all at once.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40615"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40619"> </A><A NAME="25350"> </A>J</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65725"> </A><B CLASS="bold">join point</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65727"> </A>See <B CLASS="bold">knot.</B><A NAME="marker=65726"> </A></DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40621"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40625"> </A><A NAME="20961"> </A>K</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65731"> </A><B CLASS="bold">knot</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65732"> </A>A point on a curve that joins two segments of the curve.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65733"> </A><B CLASS="bold">knot vector</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65734"> </A>An array of numbers that defines a curve's knots.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40627"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40631"> </A><A NAME="27324"> </A>L</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65742"> </A><B CLASS="bold">Lambertian reflection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65744"> </A>See <B CLASS="bold">diffuse reflection.</B><A NAME="marker=65743"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65745"> </A><B CLASS="bold">Lambert illumination</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65746"> </A>A method of calculating the illumination of a point on a surface based on diffuse reflection. Compare <B CLASS="bold">null illumination, Phong illumination.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65747"> </A><B CLASS="bold">Lambert illumination shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65748"> </A>An illumination shader that implements a Lambert illumination model. Compare <B CLASS="bold">null illumination shader, Phong illumination shader.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65749"> </A><B CLASS="bold">leaf class</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65750"> </A>A class that has no children.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65751"> </A><B CLASS="bold">leaf object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65752"> </A>An instance of a leaf class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65753"> </A><B CLASS="bold">leaf type</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65754"> </A>The object type of a leaf object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65755"> </A><B CLASS="bold">least significant bit (LSB)</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65756"> </A>The bit contributing the least value in a string of bits. Same as <I CLASS="italics">low-order bit.</I> Compare <B CLASS="bold">most significant bit.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65757"> </A><B CLASS="bold">left-handed coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65758"> </A>A coordinate system that obeys the left-hand rule. In a left-handed coordinate system, positive rotations of an axis are clockwise. Compare <B CLASS="bold">right-handed coordinate system.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65759"> </A><B CLASS="bold">left-hand rule</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65760"> </A>A method of determining the direction of the positive <I CLASS="italics">z</I> axis (and thereby the front of a planar surface). According to the left-hand rule, if the thumb of the left hand points in the direction of the positive <I CLASS="italics">x</I> axis and the index finger points in the direction of the positive <I CLASS="italics">y</I> axis, then the middle finger points in the direction of the positive <I CLASS="italics">z</I> axis. Compare <B CLASS="bold">right-hand rule.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65761"> </A><B CLASS="bold">light</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65763"> </A>See <B CLASS="bold">light object.</B><A NAME="marker=65762"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65764"> </A><B CLASS="bold">light attenuation</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65766"> </A>See <B CLASS="bold">attenuation.</B><A NAME="marker=65765"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65767"> </A><B CLASS="bold">light data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65768"> </A>A data structure that contains basic information about a light. Defined by the <CODE CLASS="cv">TQ3LightData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65769"> </A><B CLASS="bold">light fall-off</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65771"> </A>See <B CLASS="bold">fall-off value.</B><A NAME="marker=65770"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65772"> </A><B CLASS="bold">light group</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65776"> </A>A group that contains one or more lights (and no other types of QuickDraw&nbsp;3D objects).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65777"> </A><B CLASS="bold">light object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65781"> </A>A type of QuickDraw&nbsp;3D object that you can use to illuminate the surfaces in a model. A light object is an instance of the <CODE CLASS="cv">TQ3LightObject<BR></CODE> class. See also <B CLASS="bold">ambient light, directional light, point light, spot light.</B><A NAME="marker=65782"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65783"> </A><B CLASS="bold">line</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65784"> </A>A straight segment in three-dimensional space defined by its two endpoints, with an optional set of attributes. Defined by the <CODE CLASS="cv">TQ3LineData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65785"> </A><B CLASS="bold">line of projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65787"> </A>See <B CLASS="bold">projector.</B><A NAME="marker=65786"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65788"> </A><B CLASS="bold">little-endian</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65789"> </A>Data formatting in which each field is addressed by referring to its least significant byte. See also <B CLASS="bold">big-endian.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65790"> </A><B CLASS="bold">local coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65791"> </A>The coordinate system in which an individual geometric objects is defined. Also called the <I CLASS="italics">object coordinate system</I> or the <I CLASS="italics">modeling coordinate system</I>. Compare <B CLASS="bold">camera coordinate system</B>, <B CLASS="bold">window coordinate system,</B> <B CLASS="bold">world coordinate system</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65792"> </A><B CLASS="bold">local space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65794"> </A>See <B CLASS="bold">local coordinate system.</B><A NAME="marker=65793"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65795"> </A><B CLASS="bold">local-to-world transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65796"> </A>A transform that defines the relationship between an object's local coordinate system and the world coordinate system. Compare <B CLASS="bold">frustum-to-window transform,</B> <B CLASS="bold">world-to-frustum transform</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65797"> </A><B CLASS="bold">low-order bit</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65798"> </A>See <B CLASS="bold">least significant bit.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65799"> </A><B CLASS="bold">LSB</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65800"> </A>See <B CLASS="bold">least significant bit.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65801"> </A><B CLASS="bold">luminance</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65802"> </A>The intensity of light in a color.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40633"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40637"> </A><A NAME="26249"> </A>M</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65806"> </A><B CLASS="bold">Macintosh draw context</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65807"> </A>A draw context that is associated with a Macintosh window.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65808"> </A><B CLASS="bold">Macintosh draw context data </B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65809"> </A><B CLASS="bold">s</B>	A data structure that contains information about a Macintosh draw context. Defined by the <CODE CLASS="cv">TQ3MacDrawContextData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65810"> </A><B CLASS="bold">Macintosh FSSpec storage object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65811"> </A>A storage object that represents the data fork of a Macintosh file using a file system specification structure (of type <CODE CLASS="cv">FSSpec<BR></CODE>).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65812"> </A><B CLASS="bold">Macintosh storage object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65813"> </A>A storage object that represents the data fork of a Macintosh file using a file reference number. Compare <B CLASS="bold">Macintosh FSSpec storage object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65814"> </A><B CLASS="bold">mapping</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65815"> </A>The process of transforming one coordinate space into another.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65816"> </A><B CLASS="bold">marker</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65817"> </A>A two-dimensional object typically used to indicate the position of an object (or part of an object) in a window. See <B CLASS="bold">bitmap marker, pixmap marker.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65818"> </A><B CLASS="bold">matrix</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65822"> </A>A rectangular array of numbers. QuickDraw&nbsp;3D defines 3-by-3 and 4-by-4 matrices using the <CODE CLASS="cv">TQ3Matrix3x3<BR></CODE> and <CODE CLASS="cv">TQ3Matrix4x4<BR></CODE> data types.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65823"> </A><B CLASS="bold">matrix transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65824"> </A>Any transform specified by an affine, invertible 4-by-4 matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65825"> </A><B CLASS="bold">memory storage object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65826"> </A>A storage object that represents a dynamically allocated block of RAM. Compare <B CLASS="bold">handle storage object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65827"> </A><B CLASS="bold">mesh</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65828"> </A>A collection of vertices, faces, and edges that represent a topological polyhedron. Defined by the <CODE CLASS="cv">TQ3Mesh<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65829"> </A><B CLASS="bold">mesh component</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65830"> </A>A collection of connected vertices in a mesh. Defined by the <CODE CLASS="cv">TQ3MeshComponent<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65831"> </A><B CLASS="bold">mesh corner</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65832"> </A>A mesh face together with one of its vertices. You can associate a set of attributes with a mesh corner. The attributes in a corner override any existing attributes of the associated vertex.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65833"> </A><B CLASS="bold">mesh edge</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65834"> </A>A line that connects two mesh vertices. A mesh edge is part of one or more mesh faces. Defined by the <CODE CLASS="cv">TQ3MeshEdge<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65835"> </A><B CLASS="bold">mesh face</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65836"> </A>A closed figure that forms part of a mesh. Unlike the faces of other geometric objects, mesh faces do not need to be planar. Defined by the <CODE CLASS="cv">TQ3MeshFace<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65837"> </A><B CLASS="bold">mesh iterator structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65841"> </A>A data structure used by QuickDraw&nbsp;3D to maintain information when iterating through parts of a mesh. Defined by the <CODE CLASS="cv">TQ3MeshIterator<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65842"> </A><B CLASS="bold">mesh part</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65844"> </A>See <B CLASS="bold">mesh part object.</B><A NAME="marker=65843"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65845"> </A><B CLASS="bold">mesh part object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65846"> </A>A distinguishable part of a mesh. A mesh part object is an instance of the <CODE CLASS="cv">TQ3MeshPartObject<BR></CODE> class. See also <B CLASS="bold">mesh edge part object, mesh face part object, mesh vertex part object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65847"> </A><B CLASS="bold">mesh vertex</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65848"> </A>A vertex (that is, a three-dimensional point) that is contained in a mesh. Defined by the <CODE CLASS="cv">TQ3MeshVertex<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65849"> </A><B CLASS="bold">metafile</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65853"> </A>A file format (that is, a description of the format of a kind of file). See also <B CLASS="bold">QuickDraw&nbsp;3D Object Metafile.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65854"> </A><B CLASS="bold">metafile object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65858"> </A>A basic unit contained in a file that conforms to the QuickDraw&nbsp;3D Object Metafile.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65859"> </A><B CLASS="bold">metahandler</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65863"> </A>An application-defined function that QuickDraw&nbsp;3D calls to build a method table for a custom object type. Compare <B CLASS="bold">attribute metahandler.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65864"> </A><B CLASS="bold">method</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65865"> </A>An item of data associated with a particular object class. The data is usually a function pointer or other information used by the object class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65866"> </A><B CLASS="bold">metric pick</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65868"> </A>See <B CLASS="bold">metric pick object.</B><A NAME="marker=65867"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65869"> </A><B CLASS="bold">metric pick object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65870"> </A>A pick object whose pick geometry has a pick origin.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65871"> </A><B CLASS="bold">mipmap</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65872"> </A> An array of pixel images of varying pixel depths<B CLASS="bold">. </B>Defined by the <CODE CLASS="cv">TQ3Mipmap<BR></CODE> data type. See also <B CLASS="bold">bitmap, pixmap, storage pixmap.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65873"> </A><B CLASS="bold">mipmapping</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65874"> </A>A method of storing texture maps in an array of pixel images of varying pixel depths. The first element in the array must be the mipmap page having the highest resolution, with a width and height that are even powers of 2. Each subsequent pixel image in the array should have a width and height that are half those of the previous image.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65875"> </A><B CLASS="bold">mipmap texture object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65876"> </A>A texture object in which the texture is defined by a mipmap.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65877"> </A><B CLASS="bold">model</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65878"> </A>A collection of synthetic three-dimensional geometric objects and groups of geometric objects. A model represents a prototype.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65879"> </A><B CLASS="bold">modeling</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65880"> </A>The process of creating a representation of real or abstract objects.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65881"> </A><B CLASS="bold">modeling coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65883"> </A>See <B CLASS="bold">local coordinate system.</B><A NAME="marker=65882"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65884"> </A><B CLASS="bold">modeling space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65886"> </A>See <B CLASS="bold">local coordinate system.</B><A NAME="marker=65885"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65887"> </A><B CLASS="bold">most significant bit (MSB)</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65888"> </A>The bit contributing the greatest value in a string of bits. Same as <I CLASS="italics">high-order bit.</I> Compare <B CLASS="bold">least significant bit.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65889"> </A><B CLASS="bold">move button</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65890"> </A>A button in the controller strip of a viewer object that, when clicked, puts the cursor into move mode. Subsequent dragging on an object in the picture area causes the object to be moved to a new location. Compare <B CLASS="bold">camera viewpoint control, distance button, rotate button, zoom button.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65891"> </A><B CLASS="bold">MSB</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65892"> </A>See <B CLASS="bold">most significant bit.</B></DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40639"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40643"> </A><A NAME="27832"> </A>N</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65896"> </A><B CLASS="bold">natural attribute</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65897"> </A>An attribute that can naturally be contained in a set of attributes of a specific type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65898"> </A><B CLASS="bold">natural surface parameterization</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65899"> </A>A parameterization of a surface that can be derived directly from the definition of the surface. Compare <B CLASS="bold">custom surface parameterization, standard surface parameterization.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65900"> </A><B CLASS="bold">near plane</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65902"> </A>See <B CLASS="bold">hither plane.</B><A NAME="marker=65901"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65910"> </A><B CLASS="bold">nonuniform rational </B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65911"> </A><B CLASS="bold">B</B>	A curve defined by nonuniform parametric ratios of B-spline polynomials. NURB curves can be used to define very complex curves and surfaces, as well as very common geometric objects (for instance, the conic sections). See also <B CLASS="bold">control point, knot, NURB curve, NURB patch.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65912"> </A><B CLASS="bold">normal</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65913"> </A>(a.)&nbsp;Perpendicular. (n.)&nbsp;A normal vector.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65914"> </A><B CLASS="bold">normal file</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65915"> </A>A metafile in which the specification of an object in the file never occurs more than once. In other words, a file object that contains a table of contents that lists all multiply-referenced objects in the file. See also <B CLASS="bold">normal file, stream file.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65916"> </A><B CLASS="bold">normalized vector</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65917"> </A>A vector whose length is 1.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65918"> </A><B CLASS="bold">normal mode</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65919"> </A>The mode in which a normal file is opened. See also <B CLASS="bold">database mode, stream mode.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65920"> </A><B CLASS="bold">normal vector</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65921"> </A>A vector that is normal (that is perpendicular) to a surface or planar object at a specific point.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65922"> </A><B CLASS="bold">notice</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65923"> </A>A condition that is less severe than a warning, and that will likely not cause problems. See also <B CLASS="bold">error, warning.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65924"> </A><B CLASS="bold">notify function</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65925"> </A>See <B CLASS="bold">tracker notify function.</B><A NAME="marker=65926"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65927"> </A><B CLASS="bold">null illumination</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65928"> </A>A method of calculating the illumination of a point on a surface that depends only on the diffuse color of the point. Compare <B CLASS="bold">Lambert illumination, Phong illumination.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65929"> </A><B CLASS="bold">null illumination shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65930"> </A>An illumination shader that implements a null illumination model. Compare <B CLASS="bold">Lambert illumination shader, Phong illumination shader.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65931"> </A><B CLASS="bold">NURB</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65932"> </A>See <B CLASS="bold">nonuniform rational B-spline.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65933"> </A><B CLASS="bold">NURB curve</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65934"> </A>A three-dimensional curve represented by a NURB equation. Defined by the <CODE CLASS="cv">TQ3NURBCurveData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65935"> </A><B CLASS="bold">NURB patch</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65936"> </A>A three-dimensional surface represented by a NURB equation. Defined by the <CODE CLASS="cv">TQ3NURBPatchData<BR></CODE> data type.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40645"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40649"> </A><A NAME="12859"> </A>O</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65982"> </A><B CLASS="bold">object</B><A NAME="19898"> </A></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65987"> </A>(1)&nbsp;See <B CLASS="bold">QuickDraw&nbsp;3D object.</B> (2)&nbsp;See <B CLASS="bold">metafile object.</B><A NAME="marker=65986"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65988"> </A><B CLASS="bold">object coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65990"> </A>See <B CLASS="bold">local coordinate system.</B><A NAME="marker=65989"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65991"> </A><B CLASS="bold">object space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65993"> </A>See <B CLASS="bold">local coordinate system.</B><A NAME="marker=65992"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65994"> </A><B CLASS="bold">object type</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=65998"> </A>The identifier of the class of which a QuickDraw&nbsp;3D object is an instance. Also called the <I CLASS="italics">class type.</I></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=65999"> </A><B CLASS="bold">oblique projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66000"> </A>A type of parallel projection in which the view plane is not perpendicular to the viewing direction. Compare <B CLASS="bold">orthographic projection.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66001"> </A><B CLASS="bold">off-axis viewing</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66002"> </A>A method of perspective projection in which the center of the projected object on the view plane is not on the camera vector.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66003"> </A><B CLASS="bold">opaque</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66007"> </A>(1)&nbsp;For a data structure, not publicly defined. You must use QuickDraw&nbsp;3D functions to get and set values in an opaque data structure. For an object, having data and methods that are not publicly defined. (2)&nbsp;For a geometric object, not allowing light to pass though.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66008"> </A><B CLASS="bold">open</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66009"> </A>Said of a storage object whenever its associated storage is in use--for example, when an application is reading data from a file object attached to the storage object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66010"> </A><B CLASS="bold">order</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66011"> </A>For a NURB curve or patch, one more than the highest degree equation used to define the curve or patch. For example, the order of a NURB curve defined by cubic polynomial equations is 4.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66012"> </A><B CLASS="bold">ordered display group</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66013"> </A>A display group in which the objects in the group are sorted by their type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66014"> </A><B CLASS="bold">orientation style</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66018"> </A>A type of QuickDraw&nbsp;3D object that determines which side of a planar surface is considered to be the &quot;front&quot; side.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66019"> </A><B CLASS="bold">origin</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66020"> </A>In Cartesian coordinates, the point (0,&nbsp;0) or (0,&nbsp;0,&nbsp;0). The coordinate axes intersect at the origin.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66021"> </A><B CLASS="bold">original QuickDraw</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66023"> </A>See <B CLASS="bold">QuickDraw.</B><A NAME="marker=66022"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66024"> </A><B CLASS="bold">orthogonal</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66025"> </A>Perpendicular.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66026"> </A><B CLASS="bold">orthographic camera</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66027"> </A>A type of camera that uses orthographic projection.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66028"> </A><B CLASS="bold">orthographic camera data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66029"> </A>A data structure that contains basic information about an orthographic camera. Defined by the <CODE CLASS="cv">TQ3OrthographicCameraData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66030"> </A><B CLASS="bold">orthographic projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66031"> </A>A type of parallel projection in which the view plane is perpendicular to the viewing direction. Compare <B CLASS="bold">oblique projection.</B> See also <B CLASS="bold">elevation projection, isometric projection.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66032"> </A><B CLASS="bold">outer angle</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66033"> </A>The half-angle (specified in radians) from the center of a spot light's cone to the edge of the cone. See also <B CLASS="bold">fall-off value, hot angle.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66034"> </A><B CLASS="bold">outer product</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66036"> </A>See <B CLASS="bold">cross product</B>.<A NAME="marker=66035"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66037"> </A><B CLASS="bold">override</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66038"> </A>To define class data or methods that replace those of the parent class. Compare <B CLASS="bold">inherit.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=52920"> </A>&nbsp;</DT></DL COMPACT></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40659"> </A><A NAME="23883"> </A>P</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66064"> </A><B CLASS="bold">parallel projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66065"> </A>A method of projecting a model onto a viewing plane that uses parallel projectors. See also <B CLASS="bold">oblique projection, orthographic projection.</B> Compare <B CLASS="bold">perspective projection.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66066"> </A><B CLASS="bold">parameterization</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66067"> </A>A parametric function that picks out all points on a geometric object, such as a pixmap or a surface. Compare <B CLASS="bold">surface parameterization.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66068"> </A><B CLASS="bold">parametric curve</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66069"> </A>Any curve whose points are described by one or more parametric functions. A&nbsp;two-dimensional parametric curve can be described by the parametric functions <I CLASS="italics">x</I>&nbsp;=&nbsp;<I CLASS="italics">x</I>(<I CLASS="italics">t</I>) and <I CLASS="italics">y</I>&nbsp;=&nbsp;<I CLASS="italics">y</I>(<I CLASS="italics">t</I>). A three-dimensional parametric curve is described by the parametric functions <I CLASS="italics">x</I>&nbsp;=&nbsp;<I CLASS="italics">x</I>(<I CLASS="italics">t</I>), <I CLASS="italics">y</I>&nbsp;=&nbsp;<I CLASS="italics">y</I>(<I CLASS="italics">t</I>), and <I CLASS="italics">z</I>&nbsp;=&nbsp;<I CLASS="italics">z</I>(<I CLASS="italics">t</I>). Compare <B CLASS="bold">B-spline polynomial, nonuniform rational B-spline (NURB).</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66070"> </A><B CLASS="bold">parametric equation</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66071"> </A>See <B CLASS="bold">parametric function.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66072"> </A><B CLASS="bold">parametric function</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66073"> </A>A function of one or more parameters (often denoted by <I CLASS="italics">s</I> and <I CLASS="italics">t</I> or <I CLASS="italics">u</I> and <I CLASS="italics">v</I>).</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66074"> </A><B CLASS="bold">parametric point</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66075"> </A>A position in two- or three-dimensional space picked out by a parametric function. Defined by the <CODE CLASS="cv">TQ3Param2D<BR></CODE> and <CODE CLASS="cv">TQ3Param3D<BR></CODE> data types. Compare <B CLASS="bold">point, point object, rational point.</B><A NAME="marker=66076"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66077"> </A><B CLASS="bold">parent class</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66078"> </A>The class (if any) of which a given class is a subclass. In other words, a class' parent class is the class immediately above that class in the QuickDraw&nbsp;3D class hierarchy. For example, the shape class is the parent class of the light class. Also called a <I CLASS="italics">base class</I> or a <I CLASS="italics">superclass.</I></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66082"> </A><B CLASS="bold">partial solid</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66083"> </A>A solid object whose <CODE CLASS="cv">uMin<BR></CODE> field is greater than 0.0 or whose <CODE CLASS="cv">uMax<BR></CODE> field is less than 1.0.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66084"> </A><B CLASS="bold">patch</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66085"> </A>A portion of a surface defined by a set of points. Compare <B CLASS="bold">NURB patch.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66086"> </A><B CLASS="bold">perspective foreshortening</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66087"> </A>A feature of perspective projections wherein the size of a projected object varies inversely with the distance of the object from the center of projection.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66088"> </A><B CLASS="bold">perspective projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66089"> </A>A method of projecting a model onto a viewing plane that uses nonparallel projectors. Compare <B CLASS="bold">parallel projection.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66090"> </A><B CLASS="bold">Phong illumination</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66091"> </A>A method of calculating the illumination of a point on a surface based on both diffuse reflection and specular reflection. Compare <B CLASS="bold">Lambert illumination, null illumination.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66092"> </A><B CLASS="bold">Phong illumination shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66093"> </A>An illumination shader that implements a Phong illumination model. Compare <B CLASS="bold">Lambert illumination shader, null illumination shader.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66094"> </A><B CLASS="bold">Phong shading</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66095"> </A>A method of shading surfaces in which the incident light color and intensity are calculated for a series of points along each edge of a polygon and then interpolated across the entire polygon. Compare <B CLASS="bold">constant shading, Gouraud shading.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66096"> </A><B CLASS="bold">pick</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66097"> </A>(n.) See <B CLASS="bold">pick object.</B> (v.) To determine whether a specified object is close enough to a pick geometry for a hit to be recorded.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66098"> </A><B CLASS="bold">pick data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66099"> </A>A data structure that contains basic information about a pick object. Defined by the <CODE CLASS="cv">TQ3PickData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66100"> </A><B CLASS="bold">pick detail</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66102"> </A>See <B CLASS="bold">hit information mask.</B><A NAME="marker=66101"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66103"> </A><B CLASS="bold">pick geometry</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66104"> </A>The geometric object used in any picking method.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66105"> </A><B CLASS="bold">pick hit</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66107"> </A>See <B CLASS="bold">hit.</B><A NAME="marker=66106"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66108"> </A><B CLASS="bold">pick hit list</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66110"> </A>See <B CLASS="bold">hit list.</B><A NAME="marker=66109"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66111"> </A><B CLASS="bold">picking</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66112"> </A>The process of identifying the objects in a view that are close to a specified geometric object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66113"> </A><B CLASS="bold">picking flag</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66114"> </A>A binary flag in a group state value that determines whether a group is eligible for picking. Compare <B CLASS="bold">drawable flag, inline flag.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66115"> </A><B CLASS="bold">picking ID</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66116"> </A>An arbitrary 32-bit value that you can use to determine which object was selected by a pick operation.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66117"> </A><B CLASS="bold">picking ID style</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66118"> </A>A type of style object that determines the picking ID of an object or group of objects in a model.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66119"> </A><B CLASS="bold">picking loop</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66120"> </A>A section of code in which all picking takes place. A picking loop begins with a call to the <CODE CLASS="cv">Q3View_StartPicking<BR></CODE> routine and should end when a call to <CODE CLASS="cv">Q3View_EndPicking<BR></CODE> returns some value other than <CODE CLASS="cv">kQ3ViewStatusRetraverse<BR></CODE>. A picking loop is a type of submitting loop. See also <B CLASS="bold">bounding loop, rendering loop, writing loop.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66121"> </A><B CLASS="bold">picking parts style</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66125"> </A>A type of QuickDraw&nbsp;3D object that determines which parts of a geometric object (for instance, a mesh) are eligible for inclusion in a hit list.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66126"> </A><B CLASS="bold">pick object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66130"> </A>A QuickDraw&nbsp;3D object that is used to select geometric objects in a model that are close to a specified geometric object. A pick object is an instance of the <CODE CLASS="cv">TQ3PickObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66131"> </A><B CLASS="bold">pick origin</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66132"> </A>A point in space that determines the origin of sorting hits. Compare <B CLASS="bold">metric pick object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66133"> </A><B CLASS="bold">pick parts mask</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66134"> </A>A value that indicates the kinds of objects placed in a hit list.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66135"> </A><B CLASS="bold">picture area</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66136"> </A>The portion of a window occupied by a viewer object that contains the displayed image.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66137"> </A><B CLASS="bold">pixel image</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66139"> </A>See <B CLASS="bold">pixmap</B><A NAME="marker=66138"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66140"> </A><B CLASS="bold">pixel map</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66142"> </A>See <B CLASS="bold">pixmap</B><A NAME="marker=66141"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66143"> </A><B CLASS="bold">pixmap</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66144"> </A>A two-dimensional array of values, each of which represents the color of one pixel<B CLASS="bold">. </B>Defined by the <CODE CLASS="cv">TQ3Pixmap<BR></CODE> data type. See also <B CLASS="bold">bitmap, mipmap, storage pixmap.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66145"> </A><B CLASS="bold">pixmap draw context</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66146"> </A>A draw context that is associated with a pixmap.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66147"> </A><B CLASS="bold">pixmap draw context data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66148"> </A>A data structure that contains information about a pixmap draw context. Defined by the <CODE CLASS="cv">TQ3PixmapDrawContextData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66149"> </A><B CLASS="bold">pixmap marker</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66150"> </A>A type of marker that uses a pixmap to specify the image that is to be drawn on top of a rendered scene at the specified location. Defined by the <CODE CLASS="cv">TQ3PixmapMarkerData<BR></CODE> data type. Compare <B CLASS="bold">bitmap marker.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66151"> </A><B CLASS="bold">pixmap texture object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66152"> </A>A texture object in which the texture is defined by a pixmap.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66153"> </A><B CLASS="bold">planar</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66154"> </A>Contained completely in two dimensions (as, for example, a circle). See also <B CLASS="bold">spatial.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66155"> </A><B CLASS="bold">plane constant</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66156"> </A>The value <I CLASS="italics">d</I> in the plane equation <I CLASS="italics">ax</I>+<I CLASS="italics">by</I>+<I CLASS="italics">cz</I>+<I CLASS="italics">d</I> = 0.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66157"> </A><B CLASS="bold">plan elevation projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66158"> </A>See <B CLASS="bold">top elevation projection.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66159"> </A><B CLASS="bold">plane equation</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66160"> </A>An equation that defines a plane. A plane equation can always be reduced to the form <I CLASS="italics">ax</I>+<I CLASS="italics">by</I>+<I CLASS="italics">cz</I>+<I CLASS="italics">d</I> = 0. Defined by the <CODE CLASS="cv">TQ3PlaneEquation<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66161"> </A><B CLASS="bold">point</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66162"> </A>A dimensionless position in two- or three-dimensional space. Defined by the <CODE CLASS="cv">TQ3Point2D<BR></CODE> and <CODE CLASS="cv">TQ3Point3D<BR></CODE> data types. Compare <B CLASS="bold">parametric point, point object, rational point.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66163"> </A><B CLASS="bold">point light</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66164"> </A>A light source that emits rays of light in all directions from a specific location.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66165"> </A><B CLASS="bold">point light data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66166"> </A>A data structure that contains information about a point light. Defined by the <CODE CLASS="cv">TQ3PointLightData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66167"> </A><B CLASS="bold">point object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66168"> </A>A dimensionless position in three-dimensional space, with an optional set of attributes. Defined by the <CODE CLASS="cv">TQ3PointData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66169"> </A><B CLASS="bold">point of interest</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66170"> </A>The point in world space at which a camera is aimed. The point of interest and the camera location determine the viewing direction.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66171"> </A><B CLASS="bold">point pick object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66173"> </A>See <B CLASS="bold">window-point pick object.</B><A NAME="marker=66172"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66174"> </A><B CLASS="bold">polar coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66175"> </A>A system of assigning planar positions to objects in terms of their distances (<I CLASS="italics">r</I>) from a point (the polar origin, or pole) along a ray that forms a given angle () with a coordinate line (the polar axis). The polar origin has the polar coordinates (0, ), for any angle . Compare <B CLASS="bold">Cartesian coordinate system, spherical coordinate system.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66176"> </A><B CLASS="bold">polar axis</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66177"> </A>A fixed ray that radiates from the polar origin, in terms of which polar coordinates are determined. Also called the <I CLASS="italics">initial line</I>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66178"> </A><B CLASS="bold">polar origin</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66179"> </A>The point in a plane from which the polar axis radiates. Also called the <I CLASS="italics">pole</I>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66180"> </A><B CLASS="bold">polar point</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66181"> </A>A point in a plane described using polar coordinates.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66182"> </A><B CLASS="bold">pole</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66184"> </A>See <B CLASS="bold">polar origin.</B><A NAME="marker=66183"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66185"> </A><B CLASS="bold">polygon</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66186"> </A>A closed plane figure. See <B CLASS="bold">general polygon, simple polygon.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66187"> </A><B CLASS="bold">polygon mesh</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66188"> </A>A mesh whose faces are composed of polygons.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66189"> </A><B CLASS="bold">polyhedral primitive</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66190"> </A>A three-dimensional surface composed of polygonal faces that share edges and vertices with other faces. See <B CLASS="bold">mesh, polyhedron, trigrid, trimesh.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66191"> </A><B CLASS="bold">polyhedron</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66192"> </A>(1)&nbsp;A polyhedral primitive whose faces are triangular. Defined by the <CODE CLASS="cv">TQ3PolyhedronData<BR></CODE> data type. (2)&nbsp;Any polyhedral primitive.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66193"> </A><B CLASS="bold">polyhedron data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66194"> </A>A data structure that contains information about a polyhedron. Defined by the <CODE CLASS="cv">TQ3PolyhedronData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66195"> </A><B CLASS="bold">polyhedron edge data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66196"> </A>A data structure that contains information about an edge in a polyhedron. Defined by the <CODE CLASS="cv">TQ3PolyhedronEdgeData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66197"> </A><B CLASS="bold">polyhedron triangle data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66198"> </A>A data structure that contains information about a triangle (that is, a face) in a polyhedron. Defined by the <CODE CLASS="cv">TQ3PolyhedronTriangleData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66199"> </A><B CLASS="bold">polyline</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66200"> </A>A collection of <I CLASS="italics">n</I> lines defined by the <I CLASS="italics">n</I>+1 points that define the endpoints of each line segment. Defined by the <CODE CLASS="cv">TQ3PolyLineData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66201"> </A><B CLASS="bold">postmultiplied</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66202"> </A>A term that describes the order in which matrices are multiplied. Matrix [A] is postmultiplied by matrix [B] if matrix [A] is replaced by [A] [B]. Compare <B CLASS="bold">premultiplied.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66203"> </A><B CLASS="bold">premultiplied</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66204"> </A>A term that describes the order in which matrices are multiplied. Matrix [A] is premultiplied by matrix [B] if matrix [A] is replaced by [B] [A]. Compare <B CLASS="bold">postmultiplied.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66205"> </A><B CLASS="bold">primitive</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66207"> </A>See <B CLASS="bold">geometric primitive.</B><A NAME="marker=66206"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66208"> </A><B CLASS="bold">private</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66210"> </A>See <B CLASS="bold">opaque.</B><A NAME="marker=66209"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66211"> </A><B CLASS="bold">projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66212"> </A>(1)&nbsp;A method of mapping three-dimensional objects into two dimensions. See also <B CLASS="bold">parallel projection, perspective projection.</B> Compare <B CLASS="bold">camera object.</B> (2)&nbsp;The image on the view plane that results from mapping three-dimensional objects into two dimensions.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66213"> </A><B CLASS="bold">projection plane</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66215"> </A>See <B CLASS="bold">view plane.</B><A NAME="marker=66214"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66216"> </A><B CLASS="bold">projective transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66218"> </A>See <B CLASS="bold">frustum-to-window transform.</B><A NAME="marker=66217"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66219"> </A><B CLASS="bold">projector</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66220"> </A>A ray that intersects both a point on an object in a model and the view plane, thereby projecting the object in the model onto the view plane.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66221"> </A><B CLASS="bold">prototype</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66222"> </A>The object (or collection of objects) represented in a model. Compare <B CLASS="bold">model, synthetic.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66223"> </A><B CLASS="bold">prototypical</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66224"> </A>Of or pertaining to a prototype. Compare <B CLASS="bold">model, synthetic.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66225"> </A><B CLASS="bold">proxy display group</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66227"> </A>See <B CLASS="bold">I/O proxy display group.</B><A NAME="marker=66226"> </A></DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40661"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40665"> </A><A NAME="21931"> </A>Q</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66247"> </A><B CLASS="bold">QuickDraw</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66248"> </A>A collection of system software routines on Macintosh computers that perform two-dimensional drawing on the user's screen.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66252"> </A><B CLASS="bold">QuickDraw&nbsp;3D</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66253"> </A>A graphics library developed by Apple Computer, Inc., that you can use to create, configure, render, and interact with models of three-dimensional objects. You can also use QuickDraw&nbsp;3D to read and write 3D data.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=53143"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40671"> </A><A NAME="21312"> </A>R</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66260"> </A><B CLASS="bold">radius vector</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66261"> </A>The ray that radiates from the polar origin and that forms a given angle with the polar axis (or two given angles with the <I CLASS="italics">x</I> and <I CLASS="italics">z</I> axes). A polar or spherical point lies at a given distance along the radius vector. See also <B CLASS="bold">polar coordinate system, spherical coordinate system.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66262"> </A><B CLASS="bold">rasterization</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66263"> </A>The process of determining values for the pixels in a rendered image. Also called <I CLASS="italics">scan conversion</I>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66264"> </A><B CLASS="bold">rational point</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66265"> </A>A dimensionless position in two- or three-dimensional space together with a floating-point weight. Defined by the <CODE CLASS="cv">TQ3RationalPoint3D<BR></CODE> and <CODE CLASS="cv">TQ3RationalPoint4D<BR></CODE> data types. Compare <B CLASS="bold">point.</B><A NAME="marker=66266"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66267"> </A><B CLASS="bold">ray</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66268"> </A>A point of origin and a direction. Defined by the <CODE CLASS="cv">TQ3Ray3D<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66271"> </A><B CLASS="bold">real</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66272"> </A>See <B CLASS="bold">prototypical.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66273"> </A><B CLASS="bold">rectangle pick object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66275"> </A>See <B CLASS="bold">window-rectangle pick object.</B><A NAME="marker=66274"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66276"> </A><B CLASS="bold">reference count</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66277"> </A>The number of times a shared object is being accessed.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66279"> </A><B CLASS="bold">render</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66280"> </A>To create an image (on the screen or some other medium) of&nbsp;a model.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66281"> </A><B CLASS="bold">renderer</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66283"> </A>See <B CLASS="bold">renderer object.</B><A NAME="marker=66282"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66284"> </A><B CLASS="bold">renderer feature flags</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66285"> </A>A set of flags that encode information about a specific renderer.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66287"> </A><B CLASS="bold">renderer object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66291"> </A>A QuickDraw&nbsp;3D object that you can use to render a model--that is, to create an image from a view and a model. A renderer object is an instance of the <CODE CLASS="cv">TQ3RendererObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66294"> </A><B CLASS="bold">rendering</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66295"> </A>The process of creating an image (on the screen or some other medium) of&nbsp;a model. See also <B CLASS="bold">rasterization.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66297"> </A><B CLASS="bold">rendering loop</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66298"> </A>A section of code in which all rendering takes place. A rendering loop begins with a call to the <CODE CLASS="cv">Q3View_StartRendering<BR></CODE> routine and should end when a call to <CODE CLASS="cv">Q3View_EndRendering<BR></CODE> returns some value other than <CODE CLASS="cv">kQ3ViewStatusRetraverse<BR></CODE>. A&nbsp;rendering loop is a type of submitting loop. See also <B CLASS="bold">bounding loop, picking loop, writing loop.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66299"> </A><B CLASS="bold">retained mode</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66300"> </A>A mode of defining and rendering a model in which the graphics library (for instance, QuickDraw&nbsp;3D) maintains a copy of the model. See also <B CLASS="bold">immediate mode.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66304"> </A><B CLASS="bold">retained object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66305"> </A>An object that is defined and rendered in retained mode. See also <B CLASS="bold">immediate object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66306"> </A><B CLASS="bold">RGB color space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66308"> </A>A color space whose three components measure the intensity of red, green, and blue.<A NAME="marker=66307"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66309"> </A><B CLASS="bold">RGB color structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66310"> </A>A data structure that contains information about a color. Defined by the <CODE CLASS="cv">TQ3ColorRGB<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66311"> </A><B CLASS="bold">right-handed coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66312"> </A>A coordinate system that obeys the right-hand rule. In a right-handed coordinate system, positive rotations of an axis are counterclockwise. Compare <B CLASS="bold">left-handed coordinate system.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66313"> </A><B CLASS="bold">right-hand rule</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66314"> </A>A method of determining the direction of the positive <I CLASS="italics">z</I> axis (and thereby the front of a planar surface). According to the right-hand rule, if the thumb of the right hand points in the direction of the positive <I CLASS="italics">x</I> axis and the index finger points in the direction of the positive <I CLASS="italics">y</I> axis, then the middle finger points in the direction of the positive <I CLASS="italics">z</I> axis. Compare <B CLASS="bold">left-hand rule.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66315"> </A><B CLASS="bold">rotate</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66316"> </A>To reposition an object by revolving (or turning) each point of the object by the same angle around a point or axis.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66317"> </A><B CLASS="bold">rotate-about-axis transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66318"> </A>A type of transform that rotates an object about an arbitrary axis in space by a specified number of radians at an arbitrary point in space.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66319"> </A><B CLASS="bold">rotate-about-axis transform </B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66320"> </A><B CLASS="bold">d</B>	A data structure that contains information on a rotate transform about an arbitrary axis in space at an arbitrary point in space. Defined by the <CODE CLASS="cv">TQ3RotateAboutAxisTransformData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66321"> </A><B CLASS="bold">rotate-about-point transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66322"> </A>A type of transform that rotates an object about the <I CLASS="italics">x</I>, <I CLASS="italics">y</I>, or <I CLASS="italics">z</I> axis by a specified number of radians at an arbitrary point in space.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66323"> </A><B CLASS="bold">rotate-about-point transform </B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66324"> </A><B CLASS="bold">d</B>	A data structure that contains information on a rotate transform about an arbitrary point in space. Defined by the <CODE CLASS="cv">TQ3RotateAboutPointTransformData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66325"> </A><B CLASS="bold">rotate button</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66326"> </A>A button in the controller strip of a viewer object that, when clicked, puts the cursor into rotate mode. Subsequent dragging of the cursor in the picture area causes the displayed object to rotate in the direction in which the cursor is dragged. Compare <B CLASS="bold">camera viewpoint control, distance button, move button, zoom button.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66327"> </A><B CLASS="bold">rotate transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66328"> </A>A type of transform that rotates an object about the <I CLASS="italics">x</I>, <I CLASS="italics">y</I>, or <I CLASS="italics">z</I> axis at the origin by a specified number of radians.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66329"> </A><B CLASS="bold">rotate transform data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66330"> </A>A data structure that contains information about a rotate transform. Defined by the <CODE CLASS="cv">TQ3RotateTransformData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66331"> </A><B CLASS="bold">rotation</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66332"> </A>A transform that causes an object to revolve around a point or an axis. Compare <B CLASS="bold">rotate-about-axis transform,</B> <B CLASS="bold">rotate-about-point transform,</B> <B CLASS="bold">rotate transform.</B></DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40673"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40677"> </A><A NAME="17123"> </A>S</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66411"> </A><B CLASS="bold">scalar product</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66413"> </A>See <B CLASS="bold">dot product</B>.<A NAME="marker=66412"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66414"> </A><B CLASS="bold">scale</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66415"> </A>To reposition and resize an object by multiplying the <I CLASS="italics">x</I>, <I CLASS="italics">y</I>, and <I CLASS="italics">z</I> coordinates of each of its points by values <I CLASS="italics">d</I><EM CLASS="Subscript">x</EM>, <I CLASS="italics">d</I><EM CLASS="Subscript">y</EM>, and <I CLASS="italics">d</I><EM CLASS="Subscript">z</EM>. Compare <B CLASS="bold">differential scaling, uniform scaling.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66416"> </A><B CLASS="bold">scale transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66417"> </A>A type of transform that scales an object along the <I CLASS="italics">x</I>, <I CLASS="italics">y</I>, and <I CLASS="italics">z</I> axes by specified values.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66418"> </A><B CLASS="bold">scan conversion</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66419"> </A>See <B CLASS="bold">rasterization.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66420"> </A><B CLASS="bold">scene</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66421"> </A>A combination of objects, lights, and draw context.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66422"> </A><B CLASS="bold">screen coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66424"> </A>See <B CLASS="bold">window coordinate system.</B><A NAME="marker=66423"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66425"> </A><B CLASS="bold">screen space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66427"> </A>See <B CLASS="bold">window coordinate system.</B><A NAME="marker=66426"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66428"> </A><B CLASS="bold">screen-space picking</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66429"> </A>The process of testing whether the projections of three-dimensional objects onto the screen intersect or are close enough to a specified two-dimensional object on the screen.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66430"> </A><B CLASS="bold">screen-space subdivision</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66431"> </A>A method of subdividing smooth curves and surfaces. In this method, the renderer subdivides a curve (or surface) into polylines (or polygons) whose sides have a maximum length of some specified number of pixels. Compare <B CLASS="bold">constant subdivision, world-space subdivision.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66432"> </A><B CLASS="bold">serpentine</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66433"> </A>Said of a trigrid in which quadrilaterals are divided into triangles in an alternating fashion.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66434"> </A><B CLASS="bold">set</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66436"> </A>See <B CLASS="bold">set object.</B><A NAME="marker=66435"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66437"> </A><B CLASS="bold">set object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66438"> </A>A collection of zero or more elements, each of which has both an element type and some associated element data. A set object is an instance of the <CODE CLASS="cv">TQ3SetObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66439"> </A><B CLASS="bold">shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66441"> </A>See <B CLASS="bold">shader object.</B><A NAME="marker=66440"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66442"> </A><B CLASS="bold">shader object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66446"> </A>A type of QuickDraw&nbsp;3D object that you can use to manipulate visual effects that depend on the illumination provided by a view's group of lights, the color and other material properties (such as the reflectance and texture) of surfaces in a model, and the position and orientation of the lights and objects in a model. A shader object is an instance of the <CODE CLASS="cv">TQ3ShaderObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66447"> </A><B CLASS="bold">shading parameterization</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66448"> </A>A surface <I CLASS="italics">uv</I> parameterization used when shading a surface.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66449"> </A><B CLASS="bold">shadow-receiving style</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66453"> </A>A type of QuickDraw&nbsp;3D object that determines whether or not objects in a model receive shadows when obscured by other objects in the model.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66454"> </A><B CLASS="bold">shape</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66456"> </A>See <B CLASS="bold">shape object.</B><A NAME="marker=66455"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66457"> </A><B CLASS="bold">shape hint</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66458"> </A>A data item associated with a general polygon that that specifies the shape of the general polygon.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66459"> </A><B CLASS="bold">shape object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66463"> </A>A type of QuickDraw&nbsp;3D object that affects how and where a renderer renders an object in a view. A shape object is an instance of the <CODE CLASS="cv">TQ3ShapeObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66464"> </A><B CLASS="bold">shape part</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66466"> </A>See <B CLASS="bold">shape part object.</B><A NAME="marker=66465"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66467"> </A><B CLASS="bold">shape part object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66468"> </A>A distinguishable part of a shape object. A shape part object is an instance of the <CODE CLASS="cv">TQ3ShapePartObject<BR></CODE> class. See also <B CLASS="bold">mesh part object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66469"> </A><B CLASS="bold">shared object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66473"> </A>A QuickDraw&nbsp;3D object that may be referenced by many objects or the application at the same time. A shared object is an instance of the <CODE CLASS="cv">TQ3SharedObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66474"> </A><B CLASS="bold">side elevation projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66475"> </A>A type of elevation projection in which the view plane is parallel to a side of the object being projected.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66476"> </A><B CLASS="bold">simple polygon</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66477"> </A>A closed plane figure defined by a list of vertices (that is, defined by a single contour). Defined by the <CODE CLASS="cv">TQ3PolygonData<BR></CODE> data type. See also <B CLASS="bold">general polygon</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66478"> </A><B CLASS="bold">smooth shading</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66479"> </A>See <B CLASS="bold">Gouraud shading, Phong shading</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66480"> </A><B CLASS="bold">space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66482"> </A>(1)&nbsp;See <B CLASS="bold">coordinate system.</B><A NAME="marker=66481"> </A> (2)&nbsp;The two- or three-dimensional extent defined by a coordinate system.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66483"> </A><B CLASS="bold">spatial</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66484"> </A>Contained completely in three dimensions (as, for example, a box). See also <B CLASS="bold">planar.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66485"> </A><B CLASS="bold">specular coefficient</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66486"> </A>A measure of an object's level of specular reflection.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66487"> </A><B CLASS="bold">specular color</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66488"> </A>The color of the light of a specular reflection.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66489"> </A><B CLASS="bold">specular control</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66491"> </A>See <B CLASS="bold">specular reflection exponent.</B><A NAME="marker=66490"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66492"> </A><B CLASS="bold">specular exponent</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66494"> </A>See <B CLASS="bold">specular reflection exponent.</B><A NAME="marker=66493"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66495"> </A><B CLASS="bold">specular highlight</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66496"> </A>A bright area on an object's surface caused by specular reflection.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66497"> </A><B CLASS="bold">specular reflection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66498"> </A>The type of reflection that is characteristic of light reflected from a shiny surface. Compare <B CLASS="bold">diffuse reflection.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66499"> </A><B CLASS="bold">specular reflection coefficient</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66500"> </A>See <B CLASS="bold">specular coefficient.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66501"> </A><B CLASS="bold">specular reflection exponent</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66502"> </A>A value that determines how quickly the specular reflection diminishes as the viewing direction moves away from the direction of reflection.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66505"> </A><B CLASS="bold">spherical coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66506"> </A>A system of assigning spatial positions to objects in terms of their distances from the origin () along a ray that forms a given angle () with the <I CLASS="italics">x</I> axis and another angle () with the <I CLASS="italics">z</I> axis. Compare <B CLASS="bold">Cartesian coordinate system, polar coordinate system.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66507"> </A><B CLASS="bold">spherical point</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66508"> </A>A point in space described using spherical coordinates.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66509"> </A><B CLASS="bold">spot light</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66510"> </A>A light source that emits a circular cone of light in a specific direction from a specific location. See also <B CLASS="bold">fall-off value, hot angle, outer angle</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66511"> </A><B CLASS="bold">spot light data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66512"> </A>A data structure that contains information about a spot light. Defined by the <CODE CLASS="cv">TQ3SpotLightData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66513"> </A><B CLASS="bold">standard I/O library</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66514"> </A>A collection of functions that provide character I/O and file manipulation services for C programs. Compare <B CLASS="bold">UNIX storage object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66515"> </A><B CLASS="bold">standard surface parameterization</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66516"> </A>A parametric function that maps the unit square to an object's surface. Compare <B CLASS="bold">custom surface parameterization, natural surface parameterization.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66517"> </A><B CLASS="bold">storage object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66521"> </A>A QuickDraw&nbsp;3D object that represents any piece of storage in a computer (for example, a file on disk, an area of memory, or some data on the Clipboard). A storage object is an instance of the <CODE CLASS="cv">TQ3StorageObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66522"> </A><B CLASS="bold">storage pixmap</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66523"> </A>A two-dimensional array of values contained in a storage object, each of which represents the color of one pixel<B CLASS="bold">. </B>Defined by the <CODE CLASS="cv">TQ3StoragePixmap<BR></CODE> data type. See also <B CLASS="bold">bitmap, mipmap, pixmap.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66524"> </A><B CLASS="bold">stream file</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66525"> </A>A metafile that contains no internal references. In other words, a file object that does not contain a table of contents and in which any references to objects are simply copies of the objects themselves. See also <B CLASS="bold">normal file, stream file.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66526"> </A><B CLASS="bold">stream mode</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66527"> </A>The mode in which a stream file is opened. See also <B CLASS="bold">database mode, normal mode.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66528"> </A><B CLASS="bold">string</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66530"> </A>See <B CLASS="bold">string object.</B><A NAME="marker=66529"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66531"> </A><B CLASS="bold">string object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66535"> </A>A QuickDraw&nbsp;3D object that contains a sequence of characters. A string object is an instance of the <CODE CLASS="cv">TQ3StringObject<BR></CODE> class. See also <B CLASS="bold">C string object.</B><A NAME="marker=66536"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66537"> </A><B CLASS="bold">strip</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66538"> </A>A surface composed of triangles that are ordered sequentially (that is, each triangle has one edge in common with the previous neighboring triangle, a second edge in common with the next neighboring triangle, and the remaining edge in common with no other triangle). See also <B CLASS="bold">fan.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66539"> </A><B CLASS="bold">style</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66541"> </A>See <B CLASS="bold">style object.</B><A NAME="marker=66540"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66542"> </A><B CLASS="bold">style object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66546"> </A>A type of QuickDraw&nbsp;3D object that determines some of the basic characteristics of the renderer used to render the curves and surfaces in a scene. A style object is an instance of the <CODE CLASS="cv">TQ3StyleObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66547"> </A><B CLASS="bold">subclass</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66548"> </A>See <B CLASS="bold">child class.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66549"> </A><B CLASS="bold">subdivision method</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66550"> </A>A method of subdividing smooth curves and surfaces. See <B CLASS="bold">constant subdivision, screen-space subdivision, world-space subdivision.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66551"> </A><B CLASS="bold">subdivision method specifier</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66552"> </A>An indicator of the number of parts into which a smooth curve or surface is to be subdivided.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66553"> </A><B CLASS="bold">subdivision style</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66557"> </A>A type of QuickDraw&nbsp;3D object that determines how a renderer decomposes smooth curves and surfaces into polylines and polygonal meshes for display purposes.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66558"> </A><B CLASS="bold">subdivision style data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66559"> </A>A data structure that contains information about the type of subdivision of curves and surfaces used by a renderer. Defined by the <CODE CLASS="cv">TQ3SubdivisionStyleData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66560"> </A><B CLASS="bold">submit</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66561"> </A>To make an object (or group of objects) eligible for drawing, picking, writing, or bounding box or sphere calculation. Compare <B CLASS="bold">submitting loop.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66562"> </A><B CLASS="bold">submitting loop</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66563"> </A>A section of code in which all submitting takes place. Compare <B CLASS="bold">bounding loop, picking loop, rendering loop, writing loop.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66564"> </A><B CLASS="bold">superclass</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66565"> </A>See <B CLASS="bold">parent class.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66566"> </A><B CLASS="bold">surface-based shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66567"> </A>A shader that affects the surfaces of geometric objects based on their material properties, position, and orientation (and other factors). Compare <B CLASS="bold">view-based shader.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66568"> </A><B CLASS="bold">surface parameterization</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66569"> </A>A parametric function that picks out all points on a surface. See also <B CLASS="bold">custom surface parameterization, natural surface parameterization, standard surface parameterization.</B><A NAME="marker=66570"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66571"> </A><B CLASS="bold">surface normal</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66572"> </A>See <B CLASS="bold">normal vector.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66573"> </A><B CLASS="bold">surface shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66574"> </A>A shader that is applied when calculating the appearance of a surface. Compare <B CLASS="bold">texture shader.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66575"> </A><B CLASS="bold">surface tangent</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66576"> </A>A pair of vectors that indicate the directions of changing <I CLASS="italics">u</I> and <I CLASS="italics">v</I> parameters on a surface. Defined by the <CODE CLASS="cv">TQ3Tangent2D<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66577"> </A><B CLASS="bold">surrounding light</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66579"> </A>See <B CLASS="bold">ambient light.</B><A NAME="marker=66578"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66580"> </A><B CLASS="bold">synthetic</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66581"> </A>Not real, as for example the objects in a model. Compare <B CLASS="bold">prototypical.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66582"> </A><B CLASS="bold">synthetic camera</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66584"> </A>See <B CLASS="bold">camera object.</B><A NAME="marker=66583"> </A></DD></DL COMPACT></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40683"> </A><A NAME="40951"> </A>T</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66618"> </A><B CLASS="bold">tail</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66619"> </A>The part of a 3D cursor at the point (1,&nbsp;0,&nbsp;0) in the local coordinates of the cursor. Compare<B CLASS="bold"> head.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66620"> </A><B CLASS="bold">tangent</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66621"> </A>A line or plane that intersects a curve or surface at a single point. Compare <B CLASS="bold">surface tangent.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66622"> </A><B CLASS="bold">tessellate</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66623"> </A>To decompose a curve or surface into polygonal faces.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66624"> </A><B CLASS="bold">text file</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66625"> </A>A file object whose data is a stream of ASCII characters with meaningful labels for each type of object contained in the file. Compare <B CLASS="bold">binary file.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66626"> </A><B CLASS="bold">texture</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66628"> </A>See <B CLASS="bold">texture object.</B><A NAME="marker=66627"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66629"> </A><B CLASS="bold">texture mapping</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66630"> </A>A technique wherein a predefined image (the texture) is mapped onto the surface of an object in a model.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66631"> </A><B CLASS="bold">texture object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66635"> </A>A type of QuickDraw&nbsp;3D object used to perform texture mapping. Compare <B CLASS="bold">mipmap texture object, pixmap texture object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66636"> </A><B CLASS="bold">texture parameterization</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66637"> </A>A parametric function that maps the unit square to a texture.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66638"> </A><B CLASS="bold">texture shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66639"> </A>A type of surface shader that applies textures to surfaces.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66640"> </A><B CLASS="bold">3D</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66641"> </A>Three-dimensional. See also <B CLASS="bold">spatial.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66642"> </A><B CLASS="bold">3DMF</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66647"> </A>See <B CLASS="bold">QuickDraw&nbsp;3D Object Metafile.</B><A NAME="marker=66646"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66648"> </A><B CLASS="bold">3D pointing device</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66649"> </A>Any physical device capable of controlling movements or specifying positions in three-dimensional space.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66650"> </A><B CLASS="bold">3D Viewer</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66651"> </A>A shared library that you can use to display 3D objects and other data in a window and to allow users limited interaction with those objects. See also <B CLASS="bold">viewer object.</B><A NAME="marker=66652"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66653"> </A><B CLASS="bold">tolerance</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66655"> </A>See <B CLASS="bold">edge tolerance, vertex tolerance.</B><A NAME="marker=66654"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66656"> </A><B CLASS="bold">top elevation projection</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66657"> </A>A type of elevation projection in which the view plane is parallel to the top of the object being projected. Also called <I CLASS="italics">plan elevation projection.</I></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66658"> </A><B CLASS="bold">topological modification</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66659"> </A>The process of adding and deleting vertices, faces, edges, and other components in a geometric object, such as a mesh.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66660"> </A><B CLASS="bold">torus</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66661"> </A>A three-dimensional object formed by the rotation of an ellipse about an axis in the plane of the ellipse that does not cut the ellipse. Defined by the <CODE CLASS="cv">TQ3TorusData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66662"> </A><B CLASS="bold">tracker</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66664"> </A>See <B CLASS="bold">tracker object.</B><A NAME="marker=66663"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66665"> </A><B CLASS="bold">tracker coordinates</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66666"> </A>The current settings (that is, position and orientation) of a tracker.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66667"> </A><B CLASS="bold">tracker notify function</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66668"> </A>A function that is called whenever the coordinates of a tracker change by more than a specified amount.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66669"> </A><B CLASS="bold">tracker object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66673"> </A>A QuickDraw&nbsp;3D object that represents the position and orientation of a single element in your application's user interface. A tracker object is an instance of the <CODE CLASS="cv">TQ3TrackerObject<BR></CODE> class. See also <B CLASS="bold">controller object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66674"> </A><B CLASS="bold">tracker serial number</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66675"> </A>A unique number that changes every time the coordinates of a tracker are updated by a controller.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66676"> </A><B CLASS="bold">tracker threshold</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66677"> </A>The amount by which a tracker's coordinates must change for the tracker notify function to be called.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66678"> </A><B CLASS="bold">transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66680"> </A>See <B CLASS="bold">transform object.</B><A NAME="marker=66679"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66681"> </A><B CLASS="bold">transform object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66685"> </A>A type of QuickDraw&nbsp;3D object that you can use to modify or transform the appearance or behavior of a QuickDraw&nbsp;3D object. A transform object is an instance of the <CODE CLASS="cv">TQ3TransformObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66689"> </A><B CLASS="bold">translate</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66690"> </A>To reposition an object by adding values <I CLASS="italics">d</I><EM CLASS="Subscript">x</EM>, <I CLASS="italics">d</I><EM CLASS="Subscript">y</EM>, and <I CLASS="italics">d</I><EM CLASS="Subscript">z</EM> to the <I CLASS="italics">x</I>, <I CLASS="italics">y</I>, and <I CLASS="italics">z</I> coordinates of each of its points.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66691"> </A><B CLASS="bold">translate transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66692"> </A>A type of transform that translates an object along the <I CLASS="italics">x</I>, <I CLASS="italics">y</I>, and <I CLASS="italics">z</I> axes by specified values.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66693"> </A><B CLASS="bold">transparency</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66694"> </A>The ability of an object to allow light to pass through it.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66695"> </A><B CLASS="bold">transparency color</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66696"> </A>A color of type <CODE CLASS="cv">TQ3ColorRGB<BR></CODE> that determines the amount of light that can pass through a surface. The color (0,&nbsp;0,&nbsp;0) indicates complete transparency, and (1,&nbsp;1,&nbsp;1) indicates complete opacity.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66697"> </A><B CLASS="bold">transpose</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66698"> </A>(n.)&nbsp;For an <I CLASS="italics">m </I><I CLASS="italics">n</I> matrix with elements <I CLASS="italics">a</I><EM CLASS="Subscript">ij</EM>, the <I CLASS="italics">n </I><I CLASS="italics">m</I> matrix with elements <I CLASS="italics">b</I><EM CLASS="Subscript">ij</EM> such that <I CLASS="italics">b</I><EM CLASS="Subscript">ij</EM>&nbsp;=&nbsp;<I CLASS="italics">a</I><EM CLASS="Subscript">ji</EM>. (v.)&nbsp;To form the transpose of a given matrix.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66699"> </A><B CLASS="bold">transpose matrix</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66700"> </A>See <B CLASS="bold">transpose.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66701"> </A><B CLASS="bold">triangle</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66702"> </A>A closed plane figure defined by three&nbsp;edges. Defined by the <CODE CLASS="cv">TQ3TriangleData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66703"> </A><B CLASS="bold">triangular mesh</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66704"> </A>See <B CLASS="bold">trimesh.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66705"> </A><B CLASS="bold">trigrid</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66706"> </A>A grid composed of triangular facets. Defined by the <CODE CLASS="cv">TQ3TriGridData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66708"> </A><B CLASS="bold">trimesh</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66709"> </A>A collection of vertices, edges, and faces in which all faces are triangular. (In other words, a trimesh is simply a mesh composed entirely of triangles.) Defined by the <CODE CLASS="cv">TQ3TriMeshData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66710"> </A><B CLASS="bold">trimesh attributes data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66711"> </A>A data structure that contains information about the attributes of a trimesh vertex, edge, or face. Defined by the <CODE CLASS="cv">TQ3TriMeshAttributeData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66712"> </A><B CLASS="bold">trimesh data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66713"> </A>A data structure that contains information about a trimesh. Defined by the <CODE CLASS="cv">TQ3TriMeshData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66714"> </A><B CLASS="bold">trimesh edge data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66715"> </A>A data structure that contains information about an edge in a trimesh. Defined by the <CODE CLASS="cv">TQ3TriMeshEdgeData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66716"> </A><B CLASS="bold">trimesh triangle data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66717"> </A>A data structure that contains information about a triangle (that is, a face) in a trimesh. Defined by the <CODE CLASS="cv">TQ3TriMeshTriangleData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66718"> </A><B CLASS="bold">2D</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66719"> </A>Two-dimensional. See also <B CLASS="bold">planar.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66722"> </A><B CLASS="bold">type</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66724"> </A>See <B CLASS="bold">object type.</B><A NAME="marker=66723"> </A></DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40685"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40689"> </A><A NAME="22204"> </A>U</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66755"> </A><B CLASS="bold">under-color shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66756"> </A>A shader associated with some other shader that supplies an under color for surfaces shaded by that shader.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66757"> </A><B CLASS="bold">uniform scaling</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66758"> </A>A scale transform in which the scaling values <I CLASS="italics">d</I><EM CLASS="Subscript">x</EM>, <I CLASS="italics">d</I><EM CLASS="Subscript">y</EM>, and <I CLASS="italics">d</I><EM CLASS="Subscript">z</EM> are all identical. Compare <B CLASS="bold">differential scaling.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66759"> </A><B CLASS="bold">union</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66760"> </A>The set of points that lie inside either of two given solid objects. The&nbsp;union of the objects <I CLASS="italics">A</I> and <I CLASS="italics">B</I> is represented by the function <I CLASS="italics">A</I>&nbsp;&nbsp;<I CLASS="italics">B</I>. Compare <B CLASS="bold">complement, intersection.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66761"> </A><B CLASS="bold">unit cube</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66762"> </A>A box whose three defining edges have a length of 1.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66763"> </A><B CLASS="bold">unit vector</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66764"> </A>See <B CLASS="bold">normalized vector.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66765"> </A><B CLASS="bold">UNIX path name storage object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66766"> </A>A storage object that represents a file using a path name.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66767"> </A><B CLASS="bold">UNIX storage object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66768"> </A>A storage object that represents a file using a structure of type <CODE CLASS="cv">FILE<BR></CODE> (defined in the standard I/O library). Compare <B CLASS="bold">UNIX path name storage object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66769"> </A><B CLASS="bold">unknown object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66776"> </A>A type of QuickDraw&nbsp;3D object that is created when QuickDraw&nbsp;3D encounters data it doesn't recognize while reading a metafile. An unknown object is an instance of the <CODE CLASS="cv">TQ3UnknownObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66777"> </A><B CLASS="bold">up vector</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66778"> </A>A vector that indicates which direction is up. A camera has an up vector that defines its orientation. Compare <B CLASS="bold">camera placement.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66779"> </A><B CLASS="bold">user interface view</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66780"> </A>See <B CLASS="bold">user interface view object.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66781"> </A><B CLASS="bold">user interface view notify function</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66782"> </A>A function that is called whenever one of your user interface views needs to be redrawn.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66783"> </A><B CLASS="bold">user interface view object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66784"> </A>A type of view that allows the user to interact (using interface elements such as a 3D cursor or widgets) with the 3D objects displayed in the view. A user interface view object is an instance of the <CODE CLASS="cv">TQ3UIViewObject<BR></CODE> class.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40691"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40695"> </A><A NAME="33632"> </A>V</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66788"> </A><B CLASS="bold">valid range</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66789"> </A>The range of <I CLASS="italics">u</I> and <I CLASS="italics">v</I> parametric values for a standard surface parameterization. For QuickDraw&nbsp;3D, the valid range is the closed interval [0.0, 1.0].</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66793"> </A><B CLASS="bold">vector</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66794"> </A>A pair or triple of floating-point numbers that obeys the laws of vector arithmetic. Defined by the <CODE CLASS="cv">TQ3Vector2D<BR></CODE> and <CODE CLASS="cv">TQ3Vector3D<BR></CODE> data types. Compare <B CLASS="bold">cross product</B>, <B CLASS="bold">dot product, normal.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66795"> </A><B CLASS="bold">vector-normal interpolation shading</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66796"> </A>See <B CLASS="bold">Phong shading</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66797"> </A><B CLASS="bold">vector product</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66799"> </A>See <B CLASS="bold">cross product</B>.<A NAME="marker=66798"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66800"> </A><B CLASS="bold">vertex</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66801"> </A>A dimensionless position in three- or four-dimensional space at which two or more lines (for instance, edges) intersect, with an optional set of vertex attributes. Defined by the <CODE CLASS="cv">TQ3Vertex3D<BR></CODE> and <CODE CLASS="cv">TQ3Vertex4D<BR></CODE> data types. See also <B CLASS="bold">indexed vertex, mesh vertex.</B><A NAME="marker=66802"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66803"> </A><B CLASS="bold">vertex attribute</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66804"> </A>An attribute that defines a characteristic of a vertex of a polygonal object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66805"> </A><B CLASS="bold">vertex index</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66806"> </A>In a mesh, a unique integer (between 0 the total number of vertices in the mesh minus 1) associated with a vertex. Compare <B CLASS="bold">face index.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66807"> </A><B CLASS="bold">vertex tolerance</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66808"> </A>A measure of how close two points must be for a hit to occur. Compare <B CLASS="bold">edge tolerance.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66809"> </A><B CLASS="bold">view</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66811"> </A>See <B CLASS="bold">view object.</B><A NAME="marker=66810"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66812"> </A><B CLASS="bold">view attribute</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66813"> </A>An attribute that defines a characteristic of a view object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66814"> </A><B CLASS="bold">view-based shader</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66815"> </A>A shader that operates independently of the material properties or orientation of objects (in other words, that operates solely on aspects of the view, such as the camera position). Compare <B CLASS="bold">surface-based shader.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66816"> </A><B CLASS="bold">viewing box</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66817"> </A>The rectangular box defined by an orthographic camera and the hither and yon clipping planes. Compare <B CLASS="bold">viewing frustum.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66818"> </A><B CLASS="bold">view coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66820"> </A>See <B CLASS="bold">camera coordinate system.</B><A NAME="marker=66819"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66821"> </A><B CLASS="bold">viewer</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66823"> </A>See <B CLASS="bold">viewer object.</B><A NAME="marker=66822"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66824"> </A><B CLASS="bold">Viewer</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66826"> </A>See <B CLASS="bold">3D Viewer.</B><A NAME="marker=66825"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66827"> </A><B CLASS="bold">viewer badge</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66829"> </A>See <B CLASS="bold">badge.</B><A NAME="marker=66828"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66830"> </A><B CLASS="bold">viewer controller strip</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66832"> </A>See <B CLASS="bold">controller strip.</B><A NAME="marker=66831"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66833"> </A><B CLASS="bold">viewer flags</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66834"> </A>A set of bit flags that specify information about the appearance and behavior of a viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66835"> </A><B CLASS="bold">viewer frame</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66837"> </A>See <B CLASS="bold">viewer pane.</B><A NAME="marker=66836"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66838"> </A><B CLASS="bold">viewer object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66839"> </A>An instance of the 3D&nbsp;Viewer. A viewer object is of type <CODE CLASS="cv">ViewerObject<BR></CODE>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66840"> </A><B CLASS="bold">viewer pane</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66841"> </A>The portion of a window occupied by a viewer object. The pane includes the picture area and the controller strip.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66842"> </A><B CLASS="bold">viewer state flags</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66843"> </A>A set of bit flags returned by the <CODE CLASS="cv">Q3ViewerGetState<BR></CODE> function that specify information about the current state of a viewer object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66844"> </A><B CLASS="bold">view hints object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66845"> </A>An object in a metafile that gives hints about how to render a scene.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66846"> </A><B CLASS="bold">view idle method</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66847"> </A>A callback routine that is called during lengthy rendering operations. Compare <B CLASS="bold">file idle method.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66848"> </A><B CLASS="bold">view information structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66849"> </A>A data structure that contains information about a view. Defined by the <CODE CLASS="cv">TQ3ViewInfo<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66850"> </A><B CLASS="bold">viewing box</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66851"> </A>A rectangle defined by a perspective camera and the hither and yon clipping planes. Compare <B CLASS="bold">viewing frustum.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66852"> </A><B CLASS="bold">viewing direction</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66853"> </A>The direction of a view's camera. Also called the <I CLASS="italics">camera vector</I> or the <I CLASS="italics">viewing vector</I>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66854"> </A><B CLASS="bold">viewing frustum</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66855"> </A>A nonrectangular frustum defined by a perspective camera and the hither and yon clipping planes. Compare <B CLASS="bold">viewing box.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66856"> </A><B CLASS="bold">viewing vector</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66858"> </A>See <B CLASS="bold">viewing direction.</B><A NAME="marker=66857"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66859"> </A><B CLASS="bold">view mapping matrix</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66863"> </A>A matrix maintained by QuickDraw&nbsp;3D that transforms the viewing frustum into a standard rectangular solid. The world-to-frustum transform is the product of the transforms specified by the view orientation matrix and the view mapping matrix. Compare <B CLASS="bold">view orientation matrix.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66864"> </A><B CLASS="bold">view object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66868"> </A>A type of QuickDraw&nbsp;3D object used to collect state information that controls the appearance and position of objects at the time of rendering. A view object is an instance of the <CODE CLASS="cv">TQ3ViewObject<BR></CODE> class.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66869"> </A><B CLASS="bold">view orientation matrix</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66873"> </A>A matrix maintained by QuickDraw&nbsp;3D that rotates and translates a view's camera so that it is pointing down the negative <I CLASS="italics">z</I> axis. The world-to-frustum transform is the product of the transforms specified by the view orientation matrix and the view mapping matrix. Compare <B CLASS="bold">view mapping matrix.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66874"> </A><B CLASS="bold">view plane</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66875"> </A>The plane onto which a model is projected. Also called the <I CLASS="italics">projection plane.</I></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66876"> </A><B CLASS="bold">view plane camera</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66877"> </A>A type of perspective camera defined in terms of an arbitrary view plane.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66878"> </A><B CLASS="bold">view plane camera data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66879"> </A>A data structure that contains basic information about a view plane camera. Defined by the <CODE CLASS="cv">TQ3ViewPlaneCameraData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66880"> </A><B CLASS="bold">view plane coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66881"> </A>The two-dimensional coordinate system whose origin is the point at which the viewing direction intersects the view plane and whose positive <I CLASS="italics">y</I> axis is parallel to the camera's up vector.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66882"> </A><B CLASS="bold">view port</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66884"> </A>See <B CLASS="bold">camera view port.</B><A NAME="marker=66883"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66885"> </A><B CLASS="bold">view space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66887"> </A>See <B CLASS="bold">camera coordinate system.</B><A NAME="marker=66886"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66888"> </A><B CLASS="bold">view status value</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66889"> </A>A value returned by the <CODE CLASS="cv">Q3View_EndRendering<BR></CODE> function that indicates whether the renderer has finished processing the model.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66891"> </A><B CLASS="bold">view volume</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66892"> </A>The part of world space that is projected onto the view plane during rendering. See also <B CLASS="bold">view box, view frustum.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66893"> </A><B CLASS="bold">virtual</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66894"> </A>See <B CLASS="bold">synthetic.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66895"> </A><B CLASS="bold">virtual camera</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66897"> </A>See <B CLASS="bold">camera object.</B><A NAME="marker=66896"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66898"> </A><B CLASS="bold">visual line determination</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66899"> </A>See <B CLASS="bold">hidden line removal</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66900"> </A><B CLASS="bold">visual surface determination</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66901"> </A>See <B CLASS="bold">hidden surface removal</B>.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=40697"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=40705"> </A><A NAME="41432"> </A>W</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66934"> </A><B CLASS="bold">warning</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66935"> </A>A condition that, though less severe than an error, might cause an error if your application continues execution without handling the warning. See also <B CLASS="bold">error, notice.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66936"> </A><B CLASS="bold">widget</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66937"> </A>An element of an application's 3D user interface.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66938"> </A><B CLASS="bold">window coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66939"> </A>The coordinate system defined by a window. Also called the <I CLASS="italics">screen coordinate system</I> or the <I CLASS="italics">draw context coordinate system</I>. Compare <B CLASS="bold">camera coordinate system</B>, <B CLASS="bold">local coordinate system,</B> <B CLASS="bold">world coordinate system</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66940"> </A><B CLASS="bold">window picking</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66942"> </A>See <B CLASS="bold">screen-space picking.</B><A NAME="marker=66941"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66943"> </A><B CLASS="bold">window-point pick data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66944"> </A>A data structure that contains information about a window-point pick object. Defined by the <CODE CLASS="cv">TQ3WindowPointPickData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66945"> </A><B CLASS="bold">window-point pick object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66946"> </A>A pick object that tests for closeness between a point in a window and the screen projections of the objects in the model.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66947"> </A><B CLASS="bold">window-rectangle pick data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66948"> </A>A data structure that contains information about a window-rectangle pick object. Defined by the <CODE CLASS="cv">TQ3WindowRectPickData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66949"> </A><B CLASS="bold">window-rectangle pick object</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66950"> </A>A pick object that tests for closeness between a rectangle in a window and the screen projections of the objects in the model.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66951"> </A><B CLASS="bold">Windows 32 draw context</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66952"> </A>A draw context that is associated with a window in a Windows computer.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66953"> </A><B CLASS="bold">Windows 32 draw context </B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66954"> </A>A data structure that contains information about a Windows 32 draw context. Defined by the <CODE CLASS="cv">TQ3Win32DCDrawContextData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66955"> </A><B CLASS="bold">window space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66957"> </A>See <B CLASS="bold">window coordinate system.</B><A NAME="marker=66956"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66958"> </A><B CLASS="bold">wireframe renderer</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66959"> </A>A renderer that creates line drawings of models. See also <B CLASS="bold">interactive renderer</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66960"> </A><B CLASS="bold">world coordinate system</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66961"> </A>The coordinate system that defines the locations of all geometric objects as they exist at rendering or picking time, with all applicable transforms acting on them. Also called the <I CLASS="italics">global coordinate system</I> or the <I CLASS="italics">application coordinate system</I>. Compare <B CLASS="bold">camera coordinate system</B>, <B CLASS="bold">local coordinate system,</B> <B CLASS="bold">window coordinate system</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66962"> </A><B CLASS="bold">world space</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66964"> </A>See <B CLASS="bold">world coordinate system.</B><A NAME="marker=66963"> </A></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66966"> </A><B CLASS="bold">world-space subdivision</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66967"> </A>A method of subdividing smooth curves and surfaces according to which the renderer subdivides a curve (or surface) into polylines (or polygons) whose sides have a world-space length that is at most as large as a given value. Compare <B CLASS="bold">constant subdivision, screen-space subdivision.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66968"> </A><B CLASS="bold">world-to-frustum transform</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66969"> </A>A transform that defines the relationship between the world coordinate system and the frustum coordinate system. Compare <B CLASS="bold">frustum-to-window transform</B>, <B CLASS="bold">local-to-world transform</B>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66970"> </A><B CLASS="bold">wrap</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66971"> </A>For a shader effect, to replicate the entire effect across the mapped area. Compare <B CLASS="bold">clamp.</B></DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=66972"> </A><B CLASS="bold">writing loop</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=66973"> </A>A section of code in which all writing takes place. A writing loop begins with a call to the <CODE CLASS="cv">Q3View_StartWriting<BR></CODE> routine and should end when a call to <CODE CLASS="cv">Q3View_EndWriting<BR></CODE> returns some value other than <CODE CLASS="cv">kQ3ViewStatusRetraverse<BR></CODE>. A writing loop is a type of submitting loop. See also <B CLASS="bold">bounding loop, picking loop, rendering loop.</B></DD></DL COMPACT></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=52256"> </A><A NAME="12196"> </A>X</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67015"> </A><I CLASS="italics">x</I><B CLASS="bold"> axis</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=67016"> </A>In Cartesian coordinates, the horizontal axis.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67017"> </A><B CLASS="bold">X color map data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=67018"> </A>A data structure that contains information about an X color map. Defined by the <CODE CLASS="cv">TQ3XColormapData<BR></CODE> data type.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67019"> </A><B CLASS="bold">X draw context</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=67020"> </A>A draw context that is associated with a window in an X windows display.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67021"> </A><B CLASS="bold">X draw context data structure</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=67022"> </A>A data structure that contains information about an X draw context. Defined by the <CODE CLASS="cv">TQ3XDrawContextData<BR></CODE> data type.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=66997"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=66998"> </A><A NAME="11997"> </A>Y</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67026"> </A><I CLASS="italics">y</I><B CLASS="bold"> axis</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=67027"> </A>In Cartesian coordinates, the vertical axis.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67028"> </A><B CLASS="bold">yon plane</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=67029"> </A>The clipping plane farthest away from the camera.</DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=66999"> </A>&nbsp;</P></DIV><DIV><H2 CLASS="H1.Heading1"><A NAME="pgfId=67000"> </A><A NAME="24392"> </A>Z</H2><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67033"> </A><I CLASS="italics">z </I><B CLASS="bold">axis</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=67034"> </A>In Cartesian coordinates, the axis that represents depth.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67035"> </A><B CLASS="bold">zoom button</B></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=67036"> </A>A button in the controller strip of a viewer object that, when clicked, puts the cursor into zooming mode. Subsequent dragging up or down in the picture area causes the camera's field of view to increase or decrease. Compare <B CLASS="bold">camera viewpoint control, distance button, move button, rotate button.</B></DD></DL COMPACT><P CLASS="T1.Text1"><A NAME="pgfId=67001"> </A>&nbsp;</P></DIV></DIV><hr>&#169; d by Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>