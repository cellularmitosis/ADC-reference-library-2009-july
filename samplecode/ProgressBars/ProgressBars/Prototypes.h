/*	File:		Prototypes.h	Contains:	Prototypes	Written by: Chris White		Copyright:	Copyright © 1996-1999 by Apple Computer, Inc., All Rights Reserved.				You may incorporate this Apple sample source code into your program(s) without				restriction. This Apple sample source code has been provided "AS IS" and the				responsibility for its operation is yours. You are not permitted to redistribute				this Apple sample source code as "Apple sample source code" after having made				changes. If you're going to re-distribute the source, we require that you make				it clear in the source that the code was descended from Apple sample source				code, but that you've made changes.	Change History (most recent first):				8/10/1999	Karl Groethe	Updated for Metrowerks Codewarror Pro 2.1				*/#ifndef __PROTOTYPES__#define __PROTOTYPES__// System Includes#ifndef __WINDOWS__	#include <Windows.h>#endif// Application Includes#ifndef __BAREBONES__	#include "BareBones.h"#endif// BareBones.cvoid			main ( void );// Initialize.cvoid			InitToolbox ( void );void			InitApplication ( void );// AppleEventStuff.cOSErr			InstallAppleEventHandlers ( void );// Events.cvoid			EventLoop ( void );// Windows.cvoid			DoActivate ( EventRecord* theEvent );void			DoUpdate ( EventRecord* theEvent );void			DoContentClick ( WindowRef theWindow, EventRecord* theEvent );void			DoDragWindow ( WindowRef theWindow, EventRecord* theEvent );// Menus.cvoid			MenuDispatch ( SInt32 menuResult );void			AdjustMenus ( void );// Utilities.cStringPtr		CopyPStr ( Str255	inSourceStr, StringPtr outDestStr, SInt16 inDestSize );StringPtr		ConcatPStr ( Str255 ioFirstStr, Str255 inSecondStr, SInt16 inDestSize );void			OSTypeToPStr ( OSType inOSType, StringPtr outString );void			PStrToOSType ( StringPtr inString, OSType* outOSType );void			AlertUser ( short messageCode, short errorNum, StringPtr theString );void			LocalToGlobalRect ( Rect* theRect );Boolean			IsMovableModal ( WindowRef theWindow );pascal void		OutlineUserItem ( DialogRef theDialog, SInt16 theItem );#if DEBUGGINGvoid			DebugStrNum ( Str255 str, int num );#endif// NonThreadedProgress.cOSErr			ProgressOperation ( tOperation theOperation, void* refCon, StringPtr theText );Boolean			UpdateProgressBar ( DialogRef theDialog, int doneAmount, int maxAmount );Boolean			StandardDemoOperation ( void* refCon, DialogRef theDialog );Boolean			BarberPoleDemoOperation ( void* refCon, DialogRef theDialog );// ThreadedProgress.cOSErr			ThreadedProgressOperation ( tThreadedOperation theOperation, void* refCon,								StringPtr theText, SInt32* operationErr, Boolean bBarberPole );pascal SInt32	ThreadedBarberPoleDemoOperation ( tThreadedOperationPtr theInfo );pascal SInt32	ThreadedStandardDemoOperation ( tThreadedOperationPtr theInfo );#endif