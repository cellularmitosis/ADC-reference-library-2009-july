{\rtf1\mac\ansicpg10000\cocoartf100
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\froman\fcharset77 Times-Bold;
\f3\froman\fcharset77 Times-Roman;\f4\fmodern\fcharset77 Courier-Bold;\f5\fmodern\fcharset77 Courier;
}
{\colortbl;\red255\green255\blue255;}
\vieww14240\viewh14600\viewkind0
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\ql\qnatural

\f0\fs24 \cf0 \

\f1\b\fs36 Tinted Image\

\f0\b0\fs24 \
This example demonstrates the use of an NSImage instance as a target for off-screen drawing.\
\
When writing code with the Cocoa framework, you have several choices for where the code you're writing should be.  In this case, I decided that I wanted all NSImages to be able to produce and deliver a tinted version of themselves.   Since Objective-C gives me the option of adding methods to existing classes without subclassing, I was able to add these methods to NSImage using a category.\
\
The method: 
\f2\b\fs28 -tintedImageWithColor: 
\f0\b0\fs24 returns an autoreleased image, which is created by drawing the reciever's contents in a new NSImage, and overlaying a color on it.   If the given color has an alpha (transparency) value, the new image will be a blend between the original image and the given color.
\f3 \

\f0 \

\f4\b - 
\f5\b0 (NSImage *)
\f4\b  tintedImageWithColor:
\f5\b0 (NSColor *) tint\
\

\f0 At the risk of being redundant with the CompositeLab example, there is also the method:\

\f5 \
- (NSImage *) 
\f4\b tintedImageWithColor:
\f5\b0 (NSColor *) tint 
\f4\b operation:
\f5\b0 (NSCompositingOperation) op  \
\

\f0 To use the app, drop an image on either of the image wells in the window, and use the color well to bring up the NSColorPanel.   The Popup list selects one of the 14 available compositing modes.  Try them all!\
\
This app also lets you save the tinted version of the image.  This functionality is implemented in the methods\
\

\f4\b - 
\f5\b0 (IBAction)
\f4\b saveTintedImage:
\f5\b0 (id)sender
\f4\b \

\f0\b0 \
and\
\

\f4\b - 
\f5\b0 (void)
\f4\b savePanelDidEnd:
\f5\b0 (NSSavePanel *)sheet
\f4\b  returnCode:
\f5\b0 (int)returnCode 
\f4\b contextInfo:
\f5\b0 (void  *)contextInfo
\f4\b \

\f0\b0 \
in the Controller class.\
\
\
\
\
\
}