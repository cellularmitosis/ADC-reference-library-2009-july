OTCheckNetForNBPNameVersion: 1.1b1A program sample demonstrating how to search an AppleTalk network with multiple zones for a reigstered Name Binding Protocol entity. This program sample has been carbonized and works under Mac OS XDescriptionThe OTCheckNetForNBPName sample demonstrates the use of the Open Transport under Carbon, to search an AppleTalk network for an NBP entity using multiple simultaneous searches to reduce the lookup time.This sample demonstrates how to1. find the number of AppleTalk zones present by dynamically increasing the buffer size until a kOTBufferOverflowErr is no longer returned.2. Use multiple lookup request and reply structures in order to reduce the amount of time required to search the network.3. Use asynchronous lookup requests so that other actions can be taken while performing the lookup.4. Register/deregister an entity with OT.The sample first determines the number of zones that will need to be searched. The gZoneBufPtr global is then allocated which is a pointer to a string array. Once we have found all of the zone names, the zone names are unpacked into the string array.The program then allocates 3 large arrays with the number of elements governed by the GetNumberOfActiveLookups call.  There is a separate array for the lookup request, the lookup reply, and the entity array where the requested string and the response will be placed into. Initally all lookups are issued one after the other. As each lookup completes, in the NBPHandler code, then the lookup and reply structures are reused to issue the next lookup in the next zone in the zone list array. This process continues until all of the zones are checked.Note that this code demonstrates the use of OTIoctl to enable self send mode.  Under Mac OS X, this mode is always enabled so the return result will indicate that selfsend was previously enabled. For Mac OS 9, the code should still be used if global self send functionality is required.Building the CodeThis sample was built using the Metrowerks CodeWarrior Pro IDE 4.1 environment.To rebuild the project, open it in CodeWarrior, and choose Make from the Project menu. Note that there are the following routines for you to change the behavior of the code.OSStatus 	SetNameMatchString(Str32 *matchString);OSStatus 	SetTypeMatchString(Str32 *matchString);Use these routines to return Pascal strings with the NBP name and type  that you are interested in searching forOSStatus SetNameRegisterString(Str32 *registerString)OSStatus SetTypeRegisterString(Str32 *registerString)Modify these routines to obtain the strings that you will use to register your NBP entity.UInt32 GetNumberOfEntitiesPerZone(void)Returns the number of maximum number of entities that you will allow for a match per zone. For example, you might set the name to be a wildcard value but key on the type value.  As such, you might want to only allow 2 copies of the type to be present in the zone before the lookup returns.GetNumberOfActiveLookupsReturns the number of simultaneous lookups to handle at a time.  As you increase this value, you increase the lookup requests on the network and the amount of memory required using the OTAllocMem call for the lookup request and reply structures, as well, as for the entity structure.Limitations:Copyright (work in progress)  Apple Computer, Inc You may incorporate this sample code into your applications without restriction, though the sample code has been provided "AS IS" and the responsibility for its operation is 100% yours.  However, what you are not permitted to do is to redistribute the source as "DSC Sample Code"after having made changes. If you're going to re-distribute the source, we require that you make it clear in the source that the code was descended from Apple Sample Code, but that you've made changes.Important Note:The program is dependent on having  TARGET_API_MAC_CARBON defined.  This symbol is required for the OTNotifyUPP Universal ProcPtr to be compiled properly. If  TARGET_API_MAC_CARBON is not defined, the program sample will crash when the notifier routine is called. In this sample, TARGET_API_MAC_CARBON is defined in the prefix file.Bug Reports:If you find any bugs, please send them to "dts@apple.com".