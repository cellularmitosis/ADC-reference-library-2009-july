<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Specifying a Virtual Device</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=44697"> </A><A NAME="24045"> </A>Specifying a Virtual Device</H1><P CLASS="T1.Text1"><A NAME="pgfId=44784"> </A><A NAME="marker=51433"> </A>You send all drawing commands to a draw context. To create a draw context, you need to specify a virtual device and a drawing engine. This section shows how to initialize a virtual device. See the next section for information on specifying a drawing engine.</P><P CLASS="T1.Text1"><A NAME="pgfId=44830"> </A>On Macintosh computers, a virtual device represents either an area of memory, a video device, or an offscreen graphics world. You specify a virtual device by filling in fields of a <B CLASS="bold">device structure,</B> defined by the <TT CLASS="cv">TQADevice</TT> data type.<A NAME="marker=51435"> </A></P><CODE CLASS="Cv.Code"><A NAME="pgfId=63948"> </A>typedef struct TQADevice {<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQADeviceType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deviceType;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQAPlatformDevice&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;device;<BR>} TQADevice;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=44915"> </A>The <TT CLASS="cv">deviceType</TT> field indicates the type of virtual device you want to draw into. Currently, you can pass either <TT CLASS="cv">kQADeviceMemory</TT> or <TT CLASS="cv">kQADeviceGDevice</TT> to select a Macintosh device type. The <TT CLASS="cv">device</TT> field indicates a platform device data structure, which is either of type <TT CLASS="cv">TQADeviceMemory</TT> for memory devices or <TT CLASS="cv">GDHandle</TT> for graphics devices.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=63952"> </A>typedef union TQAPlatformDevice {<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQADeviceMemory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memoryDevice;<BR>&nbsp;&nbsp;&nbsp;&nbsp;GDHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gDevice;<BR>} TQAPlatformDevice;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=44876"> </A>To specify a memory device, you fill in the fields of a <B CLASS="bold">memory device structure,</B> defined by the <TT CLASS="cv">TQADeviceMemory</TT> data type.<A NAME="marker=51436"> </A></P><CODE CLASS="Cv.Code"><A NAME="pgfId=63956"> </A>typedef struct TQADeviceMemory {<BR>&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rowBytes;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQAImagePixelType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pixelType;<BR>&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width;<BR>&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height;<BR>&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*baseAddr;<BR>} TQADeviceMemory;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=44838"> </A><A HREF="qd3dravedriver.6.htm#30793" CLASS="XRef">Listing&nbsp;4</A> shows how to initialize a memory device.</P><P CLASS="L.Listing"><A NAME="pgfId=44835"> </A>Listing&nbsp;4<A NAME="30793"> </A>Initializing a memory device</P><CODE CLASS="Cv.Code"><A NAME="pgfId=63960"> </A>TQADevice&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myDevice;<BR>long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myTargetMemory[100][100];<BR><BR>myDevice.deviceType = kQADeviceMemory;<BR>myDevice.device.memoryDevice.rowBytes = 100 * sizeof(long);<BR>myDevice.device.memoryDevice.pixelType = kQAPixel_ARGB32;<BR>myDevice.device.memoryDevice.width = 100;<BR>myDevice.device.memoryDevice.height = 100;<BR>myDevice.device.memoryDevice.baseAddr = myTargetMemory;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=44822"> </A>Drawing to memory always occurs in the native pixel format of the platform. Note that not all drawing engines support drawing to memory. For information on determining what kinds of virtual devices a particular drawing engine supports, see <A HREF="qd3dravedriver.7.htm#27446" CLASS="XRef">&quot;Finding a Drawing Engine&quot;</A>.</P><P CLASS="T1.Text1"><A NAME="pgfId=44971"> </A><A HREF="qd3dravedriver.6.htm#10633" CLASS="XRef">Listing&nbsp;5</A> shows how to initialize a virtual graphics device.</P><P CLASS="L.Listing"><A NAME="pgfId=45004"> </A>Listing&nbsp;5<A NAME="10633"> </A>Initializing a graphics device</P><CODE CLASS="Cv.Code"><A NAME="pgfId=63964"> </A>TQADevice&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myDevice;<BR>GDHandle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gDeviceHandle;<BR><BR>/*create a GDHandle (perhaps by calling NewGDevice)*/<BR>...<BR>myDevice.deviceType = kQADeviceGDevice;<BR>myDevice.device.gDevice = gDeviceHandle;<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=45010"> </A>The code in <A HREF="qd3dravedriver.6.htm#10633" CLASS="XRef">Listing&nbsp;5</A> assumes that the <TT CLASS="cv">gDeviceHandle</TT> global variable has been assigned a handle to a <TT CLASS="cv">GDevice</TT> record. See <I CLASS="italics">Inside Macintosh: Imaging With QuickDraw</I> for complete information on creating and configuring graphics devices.</P><P CLASS="Note"><A NAME="pgfId=45023"> </A>A draw context can be associated with only a single virtual device and hence with only a single <TT CLASS="cv">GDevice</TT>. Macintosh windows can straddle several screens, each associated with a different <TT CLASS="cv">GDevice</TT>. It is your responsibility to determine which graphics devices a window straddles and to create a separate draw context for each one. <A NAME="marker=51434"> </A></P><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>