<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Boxes</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=4872"> </A><A NAME="21023"> </A>Creating and Editing Boxes</H1><P CLASS="T1.Text1"><A NAME="pgfId=4877"> </A><A NAME="marker=4873"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate boxes. See <A HREF="qd3dgeometry.28.htm#16233" CLASS="XRef">&quot;Boxes&quot;</A> for the definition of a box.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4881"> </A>Q3Box_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=4882"> </A><A NAME="marker=3072"> </A>You can use the <TT CLASS="cv">Q3Box_New</TT> function to create a new box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44018"> </A>TQ3GeometryObject Q3Box_New (const TQ3BoxData *boxData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44020"> </A><TT CLASS="cv">boxData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4884"> </A>A pointer to a <TT CLASS="cv">TQ3BoxData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4885"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4886"> </A>The <TT CLASS="cv">Q3Box_New</TT> function returns, as its function result, a new box having the sides and attributes specified by the <TT CLASS="cv">boxData</TT> parameter. If a new box could not be created, <TT CLASS="cv">Q3Box_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4887"> </A>Q3Box_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=4888"> </A><A NAME="marker=3080"> </A>You can use the <TT CLASS="cv">Q3Box_Submit</TT> function to submit an immediate box for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44031"> </A>TQ3Status Q3Box_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3BoxData *boxData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44033"> </A><TT CLASS="cv">boxData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4890"> </A>A pointer to a <TT CLASS="cv">TQ3BoxData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44042"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4891"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4892"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4893"> </A>The <TT CLASS="cv">Q3Box_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate box whose shape and attribute set are specified by the <TT CLASS="cv">boxData</TT> parameter. The box is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4894"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=4895"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4903"> </A>Q3Box_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=4904"> </A><A NAME="marker=3100"> </A>You can use the <TT CLASS="cv">Q3Box_GetData</TT> function to get the data that defines a box and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44053"> </A>TQ3Status Q3Box_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3BoxData *boxData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44055"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4906"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44064"> </A><TT CLASS="cv">boxData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4907"> </A>On exit, a pointer to a <TT CLASS="cv">TQ3BoxData</TT> structure that contains information about the box specified by the <TT CLASS="cv">box</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4908"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4909"> </A>The <TT CLASS="cv">Q3Box_GetData</TT> function returns, through the <TT CLASS="cv">boxData</TT> parameter, information about the box specified by the <TT CLASS="cv">box</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3BoxData</TT> structure internally; you must call <TT CLASS="cv">Q3Box_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4913"> </A>Q3Box_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=4914"> </A><A NAME="marker=3112"> </A>You can use the <TT CLASS="cv">Q3Box_SetData</TT> function to set the data that defines a box and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44075"> </A>TQ3Status Q3Box_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3BoxData *boxData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44077"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4916"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44086"> </A><TT CLASS="cv">boxData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4917"> </A>A pointer to a <TT CLASS="cv">TQ3BoxData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4918"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4919"> </A>The <TT CLASS="cv">Q3Box_SetData</TT> function sets the data associated with the box specified by the <TT CLASS="cv">box</TT> parameter to the data specified by the <TT CLASS="cv">boxData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4920"> </A>Q3Box_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=4921"> </A><A NAME="marker=3121"> </A>You can use the <TT CLASS="cv">Q3Box_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3Box_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44097"> </A>TQ3Status Q3Box_EmptyData (TQ3BoxData *boxData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44099"> </A><TT CLASS="cv">boxData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4923"> </A>A pointer to a <TT CLASS="cv">TQ3BoxData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4924"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4925"> </A>The <TT CLASS="cv">Q3Box_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3BoxData</TT> structure pointed to by the <TT CLASS="cv">boxData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3Box_GetData</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4926"> </A>Q3Box_GetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=4927"> </A><A NAME="marker=3129"> </A>You can use the <TT CLASS="cv">Q3Box_GetOrigin</TT> function to get the origin of a box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44110"> </A>TQ3Status Q3Box_GetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44112"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4929"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44121"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4930"> </A>On exit, the origin of the specified box.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4931"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4932"> </A>The <TT CLASS="cv">Q3Box_GetOrigin</TT> function returns, in the <TT CLASS="cv">origin</TT> parameter, the origin of the box specified by the <TT CLASS="cv">box</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4933"> </A>Q3Box_SetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=4934"> </A><A NAME="marker=3138"> </A>You can use the <TT CLASS="cv">Q3Box_SetOrigin</TT> function to set the origin of a box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44132"> </A>TQ3Status Q3Box_SetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44134"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4936"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44143"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4937"> </A>The desired origin of the specified box.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4938"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4939"> </A>The <TT CLASS="cv">Q3Box_SetOrigin</TT> function sets the origin of the box specified by the <TT CLASS="cv">box</TT> parameter to that specified in the <TT CLASS="cv">origin</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4940"> </A>Q3Box_GetOrientation</H2><P CLASS="T1.Text1"><A NAME="pgfId=4941"> </A><A NAME="marker=3147"> </A>You can use the <TT CLASS="cv">Q3Box_GetOrientation</TT> function to get the orientation of a box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44154"> </A>TQ3Status Q3Box_GetOrientation (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *orientation);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44156"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4943"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44165"> </A><TT CLASS="cv">orientation</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4944"> </A>On exit, the orientation of the specified box.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4945"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4946"> </A>The <TT CLASS="cv">Q3Box_GetOrientation</TT> function returns, in the <TT CLASS="cv">orientation</TT> parameter, the orientation of the box specified by the <TT CLASS="cv">box</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4947"> </A>Q3Box_SetOrientation</H2><P CLASS="T1.Text1"><A NAME="pgfId=4948"> </A><A NAME="marker=3156"> </A>You can use the <TT CLASS="cv">Q3Box_SetOrientation</TT> function to set the orientation of a box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44176"> </A>TQ3Status Q3Box_SetOrientation (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *orientation);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44178"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4950"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44187"> </A><TT CLASS="cv">orientation</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4951"> </A>The desired orientation of the specified box.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4952"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4953"> </A>The <TT CLASS="cv">Q3Box_SetOrientation</TT> function sets the orientation of the box specified by the <TT CLASS="cv">box</TT> parameter to that specified in the <TT CLASS="cv">orientation</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4954"> </A>Q3Box_GetMajorAxis</H2><P CLASS="T1.Text1"><A NAME="pgfId=4955"> </A><A NAME="marker=3165"> </A>You can use the <TT CLASS="cv">Q3Box_GetMajorAxis</TT> function to get the major axis of a box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44198"> </A>TQ3Status Q3Box_GetMajorAxis (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *majorAxis);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44200"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4957"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44209"> </A><TT CLASS="cv">majorAxis</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4958"> </A>On exit, the major axis of the specified box.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4959"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4960"> </A>The <TT CLASS="cv">Q3Box_GetMajorAxis</TT> function returns, in the <TT CLASS="cv">majorAxis</TT> parameter, the major axis of the box specified by the <TT CLASS="cv">box</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4961"> </A>Q3Box_SetMajorAxis</H2><P CLASS="T1.Text1"><A NAME="pgfId=4962"> </A><A NAME="marker=3174"> </A>You can use the <TT CLASS="cv">Q3Box_SetMajorAxis</TT> function to set the major axis of a box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44220"> </A>TQ3Status Q3Box_SetMajorAxis (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *majorAxis);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44222"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4964"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44235"> </A><TT CLASS="cv">majorAxis</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4965"> </A>The desired major axis of the specified box.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4966"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4967"> </A>The <TT CLASS="cv">Q3Box_SetMajorAxis</TT> function sets the major axis of the box specified by the <TT CLASS="cv">box</TT> parameter to that specified in the <TT CLASS="cv">majorAxis</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4968"> </A>Q3Box_GetMinorAxis</H2><P CLASS="T1.Text1"><A NAME="pgfId=4969"> </A><A NAME="marker=3183"> </A>You can use the <TT CLASS="cv">Q3Box_GetMinorAxis</TT> function to get the minor axis of a box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44246"> </A>TQ3Status Q3Box_GetMinorAxis (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *minorAxis);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44248"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4971"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44257"> </A><TT CLASS="cv">minorAxis</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4972"> </A>On exit, the minor axis of the specified box.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4973"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4974"> </A>The <TT CLASS="cv">Q3Box_GetMinorAxis</TT> function returns, in the <TT CLASS="cv">minorAxis</TT> parameter, the minor axis of the box specified by the <TT CLASS="cv">box</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4975"> </A>Q3Box_SetMinorAxis</H2><P CLASS="T1.Text1"><A NAME="pgfId=4976"> </A><A NAME="marker=3192"> </A>You can use the <TT CLASS="cv">Q3Box_SetMinorAxis</TT> function to set the minor axis of a box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44268"> </A>TQ3Status Q3Box_SetMinorAxis (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *minorAxis);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44270"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4978"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44279"> </A><TT CLASS="cv">minorAxis</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4979"> </A>The desired minor axis of the specified box.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4980"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4981"> </A>The <TT CLASS="cv">Q3Box_SetMinorAxis</TT> function sets the minor axis of the box specified by the <TT CLASS="cv">box</TT> parameter to that specified in the <TT CLASS="cv">minorAxis</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4982"> </A>Q3Box_GetFaceAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=4983"> </A><A NAME="marker=3201"> </A>You can use the <TT CLASS="cv">Q3Box_GetFaceAttributeSet</TT> function to get the attribute set of a face of a box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44290"> </A>TQ3Status Q3Box_GetFaceAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long faceIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet *faceAttributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44292"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4985"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44301"> </A><TT CLASS="cv">faceIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4986"> </A>An index into the array of faces for the specified box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44310"> </A><TT CLASS="cv">faceAttributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4987"> </A> On exit, a pointer to an attribute set for the specified face.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4988"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4989"> </A>The <TT CLASS="cv">Q3Box_GetFaceAttributeSet</TT> function returns, in the <TT CLASS="cv">faceAttributeSet</TT> parameter, the set of attributes for the face having the index <TT CLASS="cv">faceIndex</TT> of the box specified by the <TT CLASS="cv">box</TT> parameter. The reference count of the set is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=4990"> </A>Q3Box_SetFaceAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=4991"> </A><A NAME="marker=3211"> </A>You can use the <TT CLASS="cv">Q3Box_SetFaceAttributeSet</TT> function to set the attribute set of a face of a box.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=44322"> </A>TQ3Status Q3Box_SetFaceAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject box, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long faceIndex, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet faceAttributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44324"> </A><TT CLASS="cv">box</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4993"> </A>A box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44333"> </A><TT CLASS="cv">faceIndex</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4994"> </A>An index into the array of faces for the specified box.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=44342"> </A><TT CLASS="cv">faceAttributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=4995"> </A> The desired set of attributes for the specified face.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=4996"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=4997"> </A>The <TT CLASS="cv">Q3Box_SetFacetAttributeSet</TT> function sets the attribute set of the face having index <TT CLASS="cv">faceIndex</TT> of the box specified by the <TT CLASS="cv">box</TT> parameter to the set specified by the <TT CLASS="cv">faceAttributeSet</TT> parameter.<A NAME="marker=4998"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>