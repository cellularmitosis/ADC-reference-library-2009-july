<HTML><head><script language="JavaScript" src="../../RM/frametest.js"></script><TITLE> Multiprocessor (MP) Support</TITLE><script language=javascript> window.parent.focus(); </script></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><!-- QTnavbar start --><P><I>What's New in QuickTime 5</I><P>| <A HREF="Max.48.htm">Previous</A> | <A HREF="Max.1.htm">Chapter Contents</A> | <A HREF="Max.htm">Chapter Top</A> | <A HREF="Max.4a.htm">Next</A> |</P></DIV><!-- QTnavbar end --><H1 CLASS="H1.Heading1"><A NAME="pgfId=61984"> </A>Multiprocessor (MP) Support</H1><P CLASS="T1.Text1"><A NAME="pgfId=68706"> </A>QuickTime&nbsp;5 provides support for accelerating video compression and decompression on <A NAME="multiprocessor"> </A>multiprocessor computers, such as the Power Mac G4 MP.</P><P CLASS="T1.Text1"><A NAME="pgfId=68710"> </A>Image compressor and decompressor components must be revised to take advantage of MP. There are two ways to approach this. If the component is modified to split a single compression or decompression operation into several MP tasks, this will improve performance for all applications. Some algorithms are not easily divided into independent units of work, however, so this is not always feasible. Alternatively, components may be modified so that they are able to work asynchronously and permit the application to continue working in the blue task (the MP task on Mac OS 9) while work is in progress.</P><P CLASS="T1.Text1"><A NAME="pgfId=68719"> </A>If the codec is not written to take advantage of MP, then processing work will run in the application's task, as illustrated in <A HREF="Max.49.htm#81314" CLASS="XRef">Figure&nbsp;35</A>. (On Mac OS 9, this MP task is called the blue task.)</P><P CLASS="Fg.Figure"><A NAME="pgfId=68950"> </A>Figure&nbsp;35 <A NAME="81314"> </A>If your codec doesn't take advantage of MP, processing work runs in the application's task. </P><DIV><IMG SRC="Max-36.gif"></DIV><P CLASS="Note"><A NAME="pgfId=68725"> </A>This diagram is intended as a conceptual aid only. In reality, all tasks, including the blue task, may migrate between processors as necessary. </P><P CLASS="T1.Text1"><A NAME="pgfId=68729"> </A>Now suppose the codec is modified to create a number of MP tasks and split each compression or decompression operation between them. This is illustrated in <A HREF="Max.49.htm#43244" CLASS="XRef">Figure&nbsp;36</A>. Assuming no other MP tasks are running, the total time taken for the operation could be decreased by a factor of up to the number of processors -- for example, on a two-processor machine, the time taken could be halved.</P><P CLASS="Fg.Figure"><A NAME="pgfId=69004"> </A>Figure&nbsp;36 <A NAME="43244"> </A>A codec that splits its work into multiple processes</P><DIV><IMG SRC="Max-37.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=68738"> </A>The client application does not need to have been modified to take advantage of such an accelerated component. As on a single-processor computer, the compression or decompression request does not return until after it is complete.</P><P CLASS="T1.Text1"><A NAME="pgfId=68743"> </A>In QuickTime 5, the DV compressor and decompressor components have been modified to divide their work between a number of processors in this manner.</P><P CLASS="T1.Text1"><A NAME="pgfId=68746"> </A>Some compression or decompression algorithms do not lend themselves to such division. Often there may be major data dependencies between sub-stages that mean that one step cannot be started until the previous one is complete.</P><P CLASS="T1.Text1"><A NAME="pgfId=68751"> </A>In such a case, the codec can often still be modified to support multiprocessor computers by performing its work in a single MP task while the application continues to execute in its own task. Rather than accelerating a single operation, this increases the number of operations that may be performed at once. In order to see an overall performance improvement, the application must call asynchronous versions of the compression or decompression APIs. This is illustrated in <A HREF="Max.49.htm#85695" CLASS="XRef">Figure&nbsp;37</A>.</P><P CLASS="Fg.Figure"><A NAME="pgfId=69094"> </A>Figure&nbsp;37 A codec revised to support asynchronous mode of work <A NAME="85695"> </A></P><DIV><IMG SRC="Max-38.gif"></DIV><P CLASS="T1.Text1"><A NAME="pgfId=69100"> </A>When the operation is complete, the application's asynchronous completion routine is called. Completion routines are often called at deferred task time, so they must be written with care not to make any calls that might move or purge memory. (See Technote 1104, &quot;Interrupt-Safe Routines,&quot; at <TT CLASS="cv">http://developer.apple.com/technotes/tn/tn1104.html</TT> for more information on this topic.)</P><H2 CLASS="H2.Heading2TOC"><A HREF="Max.4a.htm#pgfId=68779" CLASS="Hypertext">Enabling Asynchronous MP Decompression  Using the Base Decompressor</A></H2><H2 CLASS="H2.Heading2TOC"><A HREF="Max.4b.htm#pgfId=68800" CLASS="Hypertext">Taking Advantage of Asynchronous MP Codecs  in Your Application</A></H2><hr>&#169; 2001 Apple Computer, Inc.<!-- QTnavbar start --><P><I>What's New in QuickTime 5</I><P>| <A HREF="Max.48.htm">Previous</A> | <A HREF="Max.1.htm">Chapter Contents</A> | <A HREF="Max.htm">Chapter Top</A> | <A HREF="Max.4a.htm">Next</A> |</P></DIV><!-- QTnavbar end --></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>