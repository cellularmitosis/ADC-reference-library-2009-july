<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Creating Storage Pixmaps</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=26880"> </A>Creating Storage Pixmaps</H1><P CLASS="T1.Text1"><A NAME="pgfId=26912"> </A><A NAME="marker=26909"> </A>The data passed to the <TT CLASS="cv">Q3PixmapTexture_New</TT> function (as in <A HREF="qd3dshading.8.htm#11161" CLASS="XRef">Listing&nbsp;7</A>) is a storage pixmap, of type <TT CLASS="cv">TQ3StoragePixmap</TT>. The <TT CLASS="cv">image</TT> field of a storage pixmap specifies a storage object that contains the pixmap data to be applied as a texture. You can call either <TT CLASS="cv">Q3MemoryStorage_New</TT> or <TT CLASS="cv">Q3MemoryStorage_NewBuffer</TT> to create a storage object. Which function you use depends on whether (1) you want QuickDraw&nbsp;3D to maintain the image data in an internal buffer or&nbsp;(2) you want to maintain the data in your own buffer.</P><P CLASS="T1.Text1"><A NAME="pgfId=26926"> </A>To let QuickDraw&nbsp;3D manage the pixmap data, you can assign the <TT CLASS="cv">image</TT> field of a storage pixmap using code like this:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=35874"> </A>myStoragePixmap.image = Q3MemoryStorage_New(myBuffer, mySize);<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=26977"> </A>This code asks QuickDraw&nbsp;3D to allocate a buffer internally, of the specified size. Once <TT CLASS="cv">Q3MemoryStorage_New</TT> returns successfully, you can dispose of the buffer <TT CLASS="cv">myBuffer</TT>, because QuickDraw&nbsp;3D has copied the texture pixmap data into its own internal memory.</P><P CLASS="T1.Text1"><A NAME="pgfId=13832"> </A>If you prefer, you can maintain the pixmap data in your application's memory partition and avoid the overhead of having the data copied to internal QuickDraw&nbsp;3D memory. (This is especially useful if you want to animate a texture by changing the texture pixmap data from frame to frame.) To do this, you create a storage object by calling the <TT CLASS="cv">Q3MemoryStorage_NewBuffer</TT> function, like this:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=35878"> </A>myStoragePixmap.image = Q3MemoryStorage_NewBuffer<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(myBuffer, mySize, mySize);<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=13890"> </A>In this case, you should <I CLASS="italics">not</I> dispose of the data buffer. You can change the pixmap data by calling <TT CLASS="cv">Q3MemoryStorage_SetBuffer</TT>.</P><CODE CLASS="Cv.Code"><A NAME="pgfId=35882"> </A>Q3MemoryStorage_SetBuffer<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(myStoragePixmap.image, myBuffer, mySize, mySize);<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=27031"> </A><A NAME="marker=35884"> </A>You need to call <TT CLASS="cv">Q3MemoryStorage_SetBuffer</TT> to force QuickDraw&nbsp;3D to update any caches.</P><P CLASS="Note"><A NAME="pgfId=27039"> </A>You can also change the data of a storage object created by a call to <TT CLASS="cv">Q3MemoryStorage_New</TT>, by calling <TT CLASS="cv">Q3MemoryStorage_Set</TT>. </P><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>