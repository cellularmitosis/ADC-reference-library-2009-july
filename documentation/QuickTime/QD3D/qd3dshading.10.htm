<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing Shader Characteristics</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3480"> </A>Managing Shader Characteristics</H1><P CLASS="T1.Text1"><A NAME="pgfId=3484"> </A>QuickDraw&nbsp;3D provides routines for getting and setting characteristics that define how a shader affects a surface.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3529"> </A>Q3Shader_GetUVTransform</H2><P CLASS="T1.Text1"><A NAME="pgfId=3530"> </A>You can use the <TT CLASS="cv">Q3Shader_GetUVTransform</TT> function to get the current transform in <I CLASS="italics">uv</I> parametric space.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=35957"> </A>TQ3Status Q3Shader_GetUVTransform (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderObject shader, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Matrix3x3 *uvTransform);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=35959"> </A><TT CLASS="cv">shader</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3532"> </A>A shader.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=35968"> </A><TT CLASS="cv">uvTransform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3533"> </A>On exit, a pointer to the current transform in <I CLASS="italics">uv</I> parametric space.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3534"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3535"> </A>The <TT CLASS="cv">Q3Shader_GetUVTransform</TT> function returns, in the <TT CLASS="cv">uvTransform</TT> parameter, the current transform in <I CLASS="italics">uv</I> parametric space for the shader specified by the <TT CLASS="cv">shader</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3536"> </A>Q3Shader_SetUVTransform</H2><P CLASS="T1.Text1"><A NAME="pgfId=3537"> </A>You can use the <TT CLASS="cv">Q3Shader_SetUVTransform</TT> function to set the transform in <I CLASS="italics">uv</I> parametric space.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=35979"> </A>TQ3Status Q3Shader_SetUVTransform (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderObject shader, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Matrix3x3 *uvTransform);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=35981"> </A><TT CLASS="cv">shader</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3539"> </A>A shader.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=35990"> </A><TT CLASS="cv">uvTransform</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3540"> </A>A pointer to the desired transform in <I CLASS="italics">uv</I> parametric space.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3541"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3542"> </A>The <TT CLASS="cv">Q3Shader_SetUVTransform</TT> function sets the transform in <I CLASS="italics">uv</I> parametric space for the shader specified by the <TT CLASS="cv">shader</TT> parameter to the transform specified by the <TT CLASS="cv">uvTransform</TT> parameter. For example, a texture shader that relies on <I CLASS="italics">uv</I> values to index a texture mapping can rotate, scale, or translate the texture by setting appropriate values in the <I CLASS="italics">uv</I> transform.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3543"> </A>Q3Shader_GetUBoundary</H2><P CLASS="T1.Text1"><A NAME="pgfId=3544"> </A>You can use the <TT CLASS="cv">Q3Shader_GetUBoundary</TT> function to get the current boundary-handling method for <I CLASS="italics">u</I> values that are outside the range 0 to 1.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=36001"> </A>TQ3Status Q3Shader_GetUBoundary (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderObject shader, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderUVBoundary *uBoundary);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=36003"> </A><TT CLASS="cv">shader</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3546"> </A>A shader.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=36012"> </A><TT CLASS="cv">uBoundary</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3547"> </A>On exit, a value that indicates the current method of handling <I CLASS="italics">u</I> values that are outside the range 0 to 1. See <A HREF="qd3dshading.d.htm#20939" CLASS="XRef">&quot;Boundary-Handling Methods&quot;</A> for a description of the values that can be returned.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3551"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3552"> </A>The <TT CLASS="cv">Q3Shader_GetUBoundary</TT> function returns, in the <TT CLASS="cv">uBoundary</TT> parameter, the current method used by the shader specified by the <TT CLASS="cv">shader</TT> parameter of handling <I CLASS="italics">u</I> values that are outside the range 0 to 1. If <TT CLASS="cv">Q3Shader_GetUBoundary</TT> completes successfully, the <TT CLASS="cv">uBoundary</TT> parameter contains one of these values:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=36023"> </A>typedef enum TQ3ShaderUVBoundary {<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ShaderUVBoundaryWrap,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ShaderUVBoundaryClamp<BR>} TQ3ShaderUVBoundary;<BR></CODE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3554"> </A>Q3Shader_SetUBoundary</H2><P CLASS="T1.Text1"><A NAME="pgfId=3555"> </A>You can use the <TT CLASS="cv">Q3Shader_SetUBoundary</TT> function to set the current boundary-handling method for <I CLASS="italics">u</I> values that are outside the range 0 to 1.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=36027"> </A>TQ3Status Q3Shader_SetUBoundary (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderObject shader, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderUVBoundary uBoundary);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=36029"> </A><TT CLASS="cv">shader</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3557"> </A>A shader.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=36038"> </A><TT CLASS="cv">uBoundary</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3558"> </A>A value that indicates the desired method of handling <I CLASS="italics">u</I> values that are outside the range 0 to 1. See <A HREF="qd3dshading.d.htm#20939" CLASS="XRef">&quot;Boundary-Handling Methods&quot;</A> for a description of the values that you can pass in this parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3562"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3563"> </A>The <TT CLASS="cv">Q3Shader_SetUBoundary</TT> function sets the boundary-handling method for <I CLASS="italics">u</I> values to be used by the shader specified by the <TT CLASS="cv">shader</TT> parameter to the method specified by the <TT CLASS="cv">uBoundary</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3564"> </A>Q3Shader_GetVBoundary</H2><P CLASS="T1.Text1"><A NAME="pgfId=3565"> </A>You can use the <TT CLASS="cv">Q3Shader_GetVBoundary</TT> function to get the current boundary-handling mode for <I CLASS="italics">v</I> values that are outside the range 0 to 1.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=36049"> </A>TQ3Status Q3Shader_GetVBoundary (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderObject shader, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderUVBoundary *vBoundary);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=36051"> </A><TT CLASS="cv">shader</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3567"> </A>A shader.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=36060"> </A><TT CLASS="cv">vBoundary</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3568"> </A>On exit, a value that indicates the current method of handling <I CLASS="italics">v</I> values that are outside the range 0 to 1. See <A HREF="qd3dshading.d.htm#20939" CLASS="XRef">&quot;Boundary-Handling Methods&quot;</A> for a description of the values that can be returned.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3572"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3573"> </A>The <TT CLASS="cv">Q3Shader_GetVBoundary</TT> function returns, in the <TT CLASS="cv">vBoundary</TT> parameter, the current method used by the shader specified by the <TT CLASS="cv">shader</TT> parameter of handling <I CLASS="italics">v</I> values that are outside the range 0 to 1. If <TT CLASS="cv">Q3Shader_GetVBoundary</TT> completes successfully, the <TT CLASS="cv">vBoundary</TT> parameter contains one of these values:</P><CODE CLASS="Cv.Code"><A NAME="pgfId=36071"> </A>typedef enum TQ3ShaderUVBoundary {<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ShaderUVBoundaryWrap,<BR>&nbsp;&nbsp;&nbsp;&nbsp;kQ3ShaderUVBoundaryClamp<BR>} TQ3ShaderUVBoundary;<BR></CODE></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3575"> </A>Q3Shader_SetVBoundary</H2><P CLASS="T1.Text1"><A NAME="pgfId=3576"> </A>You can use the <TT CLASS="cv">Q3Shader_SetVBoundary</TT> function to set the current boundary-handling mode for <I CLASS="italics">v</I> values that are outside the range 0 to 1.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=36075"> </A>TQ3Status Q3Shader_SetVBoundary (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderObject shader, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ShaderUVBoundary vBoundary);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=36077"> </A><TT CLASS="cv">shader</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3578"> </A>A shader.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=36086"> </A><TT CLASS="cv">vBoundary</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3579"> </A>A value that indicates the desired method of handling <I CLASS="italics">v</I> values that are outside the range 0 to 1. See <A HREF="qd3dshading.d.htm#20939" CLASS="XRef">&quot;Boundary-Handling Methods&quot;</A> for a description of the values that you can pass in this parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3583"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3584"> </A>The <TT CLASS="cv">Q3Shader_SetVBoundary</TT> function sets the boundary-handling method for <I CLASS="italics">v</I> values to be used by the shader specified by the <TT CLASS="cv">shader</TT> parameter to the method specified by the <TT CLASS="cv">vBoundary</TT> parameter.</P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>