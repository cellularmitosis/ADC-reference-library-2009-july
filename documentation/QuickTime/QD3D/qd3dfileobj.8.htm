<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE> Reading Data from a File Object</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="H2.Heading2"><A NAME="pgfId=3130"> </A>Reading Data from a File Object</H1><P CLASS="T1.Text1"><A NAME="pgfId=4812"> </A><A NAME="marker=4811"> </A>The data in an 3DMF file is organized into discrete units called <B CLASS="bold">metafile objects</B> (or, more briefly, and despite the risk of confusion with QuickDraw&nbsp;3D objects, <B CLASS="bold">objects</B>). You read data from an 3DMF file by reading each individual metafile object in it (by calling the <TT CLASS="cv">Q3File_ReadObject</TT> function), until you reach the end of the file. <A HREF="qd3dfileobj.8.htm#42191" CLASS="XRef">Listing&nbsp;5</A> illustrates how to read the metafile objects in an 3DMF file.</P><P CLASS="T1.Text1"><A NAME="pgfId=4822"> </A>The <TT CLASS="cv">My</TT>Read3DMFModel function defined in <A HREF="qd3dfileobj.8.htm#42191" CLASS="XRef">Listing&nbsp;5</A> opens a file object and sequentially reads each metafile object in the 3DMF file into a QuickDraw&nbsp;3D object. <TT CLASS="cv">My</TT>Read3DMFModel determines the type of the QuickDraw&nbsp;3D object read. If the object is a view hints object, <TT CLASS="cv">My</TT>Read3DMFModel returns that object in the <TT CLASS="cv">viewHints</TT> parameter. If the object isn't a view object, it must be some other drawable QuickDraw&nbsp;3D object. In that case, <TT CLASS="cv">My</TT>Read3DMFModel either returns that object in the <TT CLASS="cv">model</TT> parameter (if there are no more objects in the 3DMF file) or adds it to a display group. When it executes successfully, <TT CLASS="cv">My</TT>Read3DMFModel returns both a 3D model and a view hints object to its caller.</P><P CLASS="L.Listing"><A NAME="pgfId=3153"> </A>Listing&nbsp;5<A NAME="42191"> </A>Reading metafile objects</P><CODE CLASS="CvF.CodeFull"><A NAME="pgfId=11632"> </A>TQ3Status MyRead3DMFModel <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(TQ3FileObject file, TQ3Object *model, TQ3Object *viewHints)<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myGroup;<BR>&nbsp;&nbsp;&nbsp;&nbsp;TQ3Object&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myObject;<BR><BR>&nbsp;&nbsp;&nbsp;&nbsp;/*Initialize view hints and model to be returned.*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;*viewHints = NULL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;*model = NULL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;myGroup = NULL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;myObject = NULL;<BR></CODE><CODE CLASS="CvF.CodeFull"><A NAME="pgfId=11638"> </A>&nbsp;&nbsp;&nbsp;&nbsp;/*Open the file object and exit gracefully if unsuccessful.*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;if (Q3File_OpenRead(file, NULL) != kQ3Success)<BR>&nbsp;&nbsp;&nbsp;&nbsp;{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoError(&quot;MyRead3DMFModel&quot;, &quot;Reading failed %s&quot;, filename);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return kQ3Failure;<BR>&nbsp;&nbsp;&nbsp;&nbsp;}<BR></CODE><CODE CLASS="CvF.CodeFull"><A NAME="pgfId=11644"> </A>&nbsp;&nbsp;&nbsp;&nbsp;while (Q3File_IsEndOfFile(file) == kQ3False)<BR>&nbsp;&nbsp;&nbsp;&nbsp;{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myObject = NULL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*Read a metafile object from the file object.*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myObject = Q3File_ReadObject(file);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (myObject == NULL)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<BR></CODE><CODE CLASS="CvF.CodeFull"><A NAME="pgfId=11650"> </A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*Save a view hints object, and add any drawable objects to a group.*/<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (Q3Object_IsType(myObject, kQ3SharedTypeViewHints))<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (*viewHints == NULL)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*viewHints = myObject;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myObject = NULL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (Q3Object_IsDrawable(myObject))<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (myGroup)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Group_AddObject(myGroup, myObject);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (*model == NULL)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*model = myObject;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myObject = NULL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myGroup = Q3DisplayGroup_New();<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Group_AddObject(myGroup, *model);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Group_AddObject(myGroup, myObject);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Object_Dispose(*model);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*model = myGroup;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (myObject != NULL) <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Object_Dispose(myObject);<BR>&nbsp;&nbsp;&nbsp;&nbsp;}<BR>&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;if (Q3Error_Get(NULL) != kQ3ErrorNone)<BR>&nbsp;&nbsp;&nbsp;&nbsp;{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (*model != NULL) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Object_Dispose(*model); <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*model = NULL; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (*viewHints != NULL) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Q3Object_Dispose(*viewHints); <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*viewHints = NULL; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (kQ3Failure);<BR>&nbsp;&nbsp;&nbsp;&nbsp;}<BR> return kQ3Success;<BR>}<BR></CODE><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>