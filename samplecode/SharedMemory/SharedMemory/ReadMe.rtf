{\rtf1\mac\ansicpg10000{\fonttbl\f0\froman\fcharset77 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\f0\b\fs48 \cf0 About SharedMemory\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\b0\fs28 \cf0 version: 1.0.0\
last modified: August 28, 2000\
SharedMemory is a sample that demonstrates multiple applications using the same memory for IPC under Mac OS X using the Unix shmget() system call.  To test this sample, build it and then launch multiple copies of the built program. The "Key" field is an integer that identifies a shared memory segment.  This can be arbitrary but must be the same in all programs that wish to share that memory.  The "Size" field is the size of the shared memory segment.  If the key is not currently allocated then this field will specify the amount of shared memory to allocate in bytes.  If the key is already allocated and the size requested is more than the actual size of the segment an error will occur, but if it is less than the actual size of the segment then this value is ignored and the program will fill that field with the actual size of the segment.  The "Raw Character Data" field at the bottom represents the current contents of the shared memory segment as a Character string.  Clicking on the "Start Editing" button sets a semaphore to protect the memory and allows you to change the shared memory string.  When you click "Stop Editing" the semaphore is released and copies of the program attached to the same shared memory segment will update their display.  To release the memory simply detach all copies of the program from the shared memory and the last one to detach will attempt to free the memory.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\b\fs36 \cf0 Building the Code\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\b0\fs28 \cf0 The code was built using a standard Cocoa Application project in project builder.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\b\fs36 \cf0 Restrictions\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\b0\fs28 \cf0 none.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\b\fs36 \cf0 Other Code Notes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\b0\fs28 \cf0 The sample is written in Objective-C using Cocoa;However, the shared memory calls(shmget(),shmat(),shmctl() and shmdt()) are standard System V Unix calls and could be used in a Mach-O Carbon application as well.  If you know C it shouldn't be too difficult to read through the source and comments to pick up how to use the system calls even if you don't know Objective-C.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\b\fs36 \cf0 Known Bugs\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\b0\fs28 \cf0 none.
\b\fs36 \
Possible Future Enhancements\

\b0\fs28 none.
\b\fs36 \
Other Sources of Reference\

\b0\fs28 the man pages for shmget(), shmat() and shmctl() are probably the first place to look for more detailed descriptions of the calls.  Beyond that try a web search for "shmget", "shmat", "shmctl" or "System V shared memory" which should reveal many links to lecture materials or linux programming resources which can be helpful if you are looking for more examples.  There is also another way of doing shared memory using the BSD mmap() system call which may be of interest but it's more of a hack for sharing page files rather than an API provided for doing Shared memory explicitly like shmget.  Info on using mmap() for shared memory can be found easily with a web search.
\b\fs36 \
Version History\

\b0\fs28 8/16/00-Created\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ri-2040\ql\qnatural

\b\fs36 \cf0 Credits
\b0\fs28 \
Karl Groethe\
Apple Developer Technical Support\
\
\
}
