<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Tori</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=22393"> </A><A NAME="25421"> </A>Creating and Editing Tori</H1><P CLASS="T1.Text1"><A NAME="pgfId=22398"> </A><A NAME="marker=22394"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate tori. See <A HREF="qd3dgeometry.34.htm#34505" CLASS="XRef">&quot;Tori&quot;</A> for the definition of a torus.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22402"> </A>Q3Torus_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=22404"> </A><A NAME="marker=22403"> </A>You can use the <TT CLASS="cv">Q3Torus_New</TT> function to create a new torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49153"> </A>TQ3GeometryObject Q3Torus_New (const TQ3TorusData *torusData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49155"> </A><TT CLASS="cv">torusData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22406"> </A>A pointer to a <TT CLASS="cv">TQ3TorusData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22407"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22408"> </A>The <TT CLASS="cv">Q3Torus_New</TT> function returns, as its function result, a new torus having the shape attributes specified by the <TT CLASS="cv">torusData</TT> parameter. If a new torus could not be created, <TT CLASS="cv">Q3Torus_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22409"> </A>Q3Torus_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=22411"> </A><A NAME="marker=22410"> </A>You can use the <TT CLASS="cv">Q3Torus_Submit</TT> function to submit an immediate torus for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49166"> </A>TQ3Status Q3Torus_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3TorusData *torusData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49168"> </A><TT CLASS="cv">torusData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22413"> </A>A pointer to a <TT CLASS="cv">TQ3TorusData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49177"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22414"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22415"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22416"> </A>The <TT CLASS="cv">Q3Torus_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate torus whose shape and attribute set are specified by the <TT CLASS="cv">torusData</TT> parameter. The torus is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22417"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=22418"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22419"> </A>Q3Torus_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=22421"> </A><A NAME="marker=22420"> </A>You can use the <TT CLASS="cv">Q3Torus_GetData</TT> function to get the data that defines a torus and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49188"> </A>TQ3Status Q3Torus_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3TorusData *torusData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49190"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22423"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49199"> </A><TT CLASS="cv">torusData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22424"> </A>On exit, a pointer to a <TT CLASS="cv">TQ3TorusData</TT> structure that contains information about the torus specified by the <TT CLASS="cv">torus</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22425"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22426"> </A>The <TT CLASS="cv">Q3Torus_GetData</TT> function returns, through the <TT CLASS="cv">torusData</TT> parameter, information about the torus specified by the <TT CLASS="cv">torus</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3TorusData</TT> structure internally; you must call <TT CLASS="cv">Q3Torus_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22430"> </A>Q3Torus_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=22432"> </A><A NAME="marker=22431"> </A>You can use the <TT CLASS="cv">Q3Torus_SetData</TT> function to set the data that defines a torus and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49210"> </A>TQ3Status Q3Torus_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3TorusData *torusData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49212"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22434"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49221"> </A><TT CLASS="cv">torusData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22435"> </A>A pointer to a <TT CLASS="cv">TQ3TorusData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22436"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22437"> </A>The <TT CLASS="cv">Q3Torus_SetData</TT> function sets the data associated with the torus specified by the <TT CLASS="cv">torus</TT> parameter to the data specified by the <TT CLASS="cv">torusData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22438"> </A>Q3Torus_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=22440"> </A><A NAME="marker=22439"> </A>You can use the <TT CLASS="cv">Q3Torus_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3Torus_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49232"> </A>TQ3Status Q3Torus_EmptyData (TQ3TorusData *torusData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49234"> </A><TT CLASS="cv">torusData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22442"> </A>A pointer to a <TT CLASS="cv">TQ3TorusData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22443"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22444"> </A>The <TT CLASS="cv">Q3Torus_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3TorusData</TT> structure pointed to by the <TT CLASS="cv">torusData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3Torus_GetData</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22445"> </A>Q3Torus_GetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=22447"> </A><A NAME="marker=22446"> </A>You can use the <TT CLASS="cv">Q3Torus_GetOrigin</TT> function to get the origin of a torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49245"> </A>TQ3Status Q3Torus_GetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49247"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22449"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49256"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22450"> </A>On exit, the origin of the specified torus.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22451"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22452"> </A>The <TT CLASS="cv">Q3Torus_GetOrigin</TT> function returns, in the <TT CLASS="cv">origin</TT> parameter, the origin of the torus specified by the <TT CLASS="cv">torus</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22453"> </A>Q3Torus_SetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=22455"> </A><A NAME="marker=22454"> </A>You can use the <TT CLASS="cv">Q3Torus_SetOrigin</TT> function to set the origin of a torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49267"> </A>TQ3Status Q3Torus_SetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49269"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22457"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49278"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22458"> </A>The desired origin of the specified torus.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22459"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22460"> </A>The <TT CLASS="cv">Q3Torus_SetOrigin</TT> function sets the origin of the torus specified by the <TT CLASS="cv">torus</TT> parameter to the point specified in the <TT CLASS="cv">origin</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22461"> </A>Q3Torus_GetOrientation</H2><P CLASS="T1.Text1"><A NAME="pgfId=22463"> </A><A NAME="marker=22462"> </A>You can use the <TT CLASS="cv">Q3Torus_GetOrientation</TT> function to get the orientation of a torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49289"> </A>TQ3Status Q3Torus_GetOrientation (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *orientation);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49291"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22465"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49300"> </A><TT CLASS="cv">orientation</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22466"> </A>On exit, the orientation of the specified torus.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22467"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22468"> </A>The <TT CLASS="cv">Q3Torus_GetOrientation</TT> function returns, in the <TT CLASS="cv">orientation</TT> parameter, the orientation of the torus specified by the <TT CLASS="cv">torus</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22469"> </A>Q3Torus_SetOrientation</H2><P CLASS="T1.Text1"><A NAME="pgfId=22471"> </A><A NAME="marker=22470"> </A>You can use the <TT CLASS="cv">Q3Torus_SetOrientation</TT> function to set the orientation of a torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49311"> </A>TQ3Status Q3Torus_SetOrientation (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *orientation);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49313"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22473"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49322"> </A><TT CLASS="cv">orientation</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22474"> </A>The desired orientation of the specified torus.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22475"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22476"> </A>The <TT CLASS="cv">Q3Torus_SetOrientation</TT> function sets the orientation of the torus specified by the <TT CLASS="cv">torus</TT> parameter to the vector specified in the <TT CLASS="cv">orientation</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22477"> </A>Q3Torus_GetMajorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22479"> </A><A NAME="marker=22478"> </A>You can use the <TT CLASS="cv">Q3Torus_GetMajorRadius</TT> function to get the major radius of a torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49333"> </A>TQ3Status Q3Torus_GetMajorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *majorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49335"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22481"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49344"> </A><TT CLASS="cv">majorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22482"> </A>On exit, the major radius of the specified torus.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22483"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22484"> </A>The <TT CLASS="cv">Q3Torus_GetMajorRadius</TT> function returns, in the <TT CLASS="cv">majorRadius</TT> parameter, the major radius of the torus specified by the <TT CLASS="cv">torus</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22485"> </A>Q3Torus_SetMajorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22487"> </A><A NAME="marker=22486"> </A>You can use the <TT CLASS="cv">Q3Torus_SetMajorRadius</TT> function to set the major radius of a torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49355"> </A>TQ3Status Q3Torus_SetMajorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *majorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49357"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22489"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49366"> </A><TT CLASS="cv">majorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22490"> </A>The desired major radius of the specified torus.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22491"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22492"> </A>The <TT CLASS="cv">Q3Torus_SetMajorRadius</TT> function sets the major radius of the torus specified by the <TT CLASS="cv">torus</TT> parameter to the vector specified in the <TT CLASS="cv">majorRadius</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22493"> </A>Q3Torus_GetMinorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22495"> </A><A NAME="marker=22494"> </A>You can use the <TT CLASS="cv">Q3Torus_GetMinorRadius</TT> function to get the minor radius of a torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49377"> </A>TQ3Status Q3Torus_GetMinorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *minorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49379"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22497"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49388"> </A><TT CLASS="cv">minorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22498"> </A>On exit, the minor radius of the specified torus.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22499"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22500"> </A>The <TT CLASS="cv">Q3Torus_GetMinorRadius</TT> function returns, in the <TT CLASS="cv">minorRadius</TT> parameter, the minor radius of the torus specified by the <TT CLASS="cv">torus</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22501"> </A>Q3Torus_SetMinorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22503"> </A><A NAME="marker=22502"> </A>You can use the <TT CLASS="cv">Q3Torus_SetMinorRadius</TT> function to set the minor radius of a torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49399"> </A>TQ3Status Q3Torus_SetMinorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *minorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49401"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22505"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49410"> </A><TT CLASS="cv">minorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22506"> </A>The desired minor radius of the specified torus.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22507"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22508"> </A>The <TT CLASS="cv">Q3Torus_SetMinorRadius</TT> function sets the minor radius of the torus specified by the <TT CLASS="cv">torus</TT> parameter to the vector specified in the <TT CLASS="cv">minorRadius</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22509"> </A>Q3Torus_GetRatio</H2><P CLASS="T1.Text1"><A NAME="pgfId=22511"> </A><A NAME="marker=22510"> </A>You can use the <TT CLASS="cv">Q3Torus_GetRatio</TT> function to get the ratio of a torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49421"> </A>TQ3Status Q3Torus_GetRatio (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float *ratio);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49423"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22513"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49432"> </A><TT CLASS="cv">ratio</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22514"> </A>On exit, the ratio of the specified torus.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22515"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22516"> </A>The <TT CLASS="cv">Q3Torus_GetRatio</TT> function returns, in the <TT CLASS="cv">ratio</TT> parameter, the ratio of the torus specified by the <TT CLASS="cv">torus</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22517"> </A>Q3Torus_SetRatio</H2><P CLASS="T1.Text1"><A NAME="pgfId=22519"> </A><A NAME="marker=22518"> </A>You can use the <TT CLASS="cv">Q3Torus_SetRatio</TT> function to set the ratio of a torus.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49443"> </A>TQ3Status Q3Torus_SetRatio (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject torus, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float ratio);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49445"> </A><TT CLASS="cv">torus</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22521"> </A>A torus.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49454"> </A><TT CLASS="cv">ratio</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22522"> </A>The desired ratio of the specified torus.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22523"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22524"> </A>The <TT CLASS="cv">Q3Torus_SetRatio</TT> function sets the ratio of the torus specified by the <TT CLASS="cv">torus</TT> parameter to the value passed in the <TT CLASS="cv">ratio</TT> parameter.<A NAME="marker=36832"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>