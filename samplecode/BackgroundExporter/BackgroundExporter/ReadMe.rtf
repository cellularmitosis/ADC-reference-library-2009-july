{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset77 Arial-BoldMT;\f1\fswiss\fcharset77 ArialMT;}
{\colortbl;\red255\green255\blue255;}
\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs24 \cf0 Background Exporter Sample
\f1\b0\fs20 :\
\
MovieExportClient - A bundled application containing both the main application and an auxiliary executable called MovieExportServer.\
MovieExportServer - The auxilary application which is copied into the MovieExportClient applications bundle.\

\f0\b\fs24 \
Change History
\f1\b0\fs20 :\
\
07/21/2004 updated to Xcode 2.1, now builds universal binary\
07/20/2004 initial release
\f0\b\fs24 \
\
Description
\f1\b0\fs20 :\
\
This sample demonstrates a straight forward technique which can be used to export QuickTime movies in a separate export process. \
\
This may be useful in situations where exporting on separate threads isn't practical , for example in cases where a Movie contains media requiring one or more non-thread safe components to render, and the export applications UI cannot be blocked waiting for the export to happen on the main thread. As an example, earlier version of QuickTime (6.5.2) could not export Sound Media on separate threads. QuickTime 7+ no longer has this limitation.\
\
MovieExportClient launches a background application called MovieExportServer on startup (MovieExportServer is located in the Client apps bundle). The Client let's you select a Movie, configure the QuickTime Movie exporter component and send an export request to the server application. MovieExportServer  queues up requests and actually does all the work by calling ConvertMovieToDataRef on the main thread. The Server also sends progress messages back to the client for display in a status window during the export process.\
\
A relatively simple approach the techniques presented here can be expanded to perform batch processing, export from procedures or any other export activity which needs to be on the main thread but is not practical to do from the main application.\
\

\f0\b\fs24 Contents
\f1\b0\fs20 :\
\
BackgroundExporter.xcode - Main Xcode project file containing 3 targets.\
\
	Build Application - This is an aggregate target which first builds the MovieExportServer, then builds and bundles the main application which is the MovieExportClient app. Finally it deletes the separately built MovieExportServer which was copied into the main application bundle.\
\
	MovieExportClient - Builds the MovieExportClient application with an added Copy Build Phase which copies the MovieExportServer application into it's bundle\
\
	MovieExportServer - Builds the MoveExportServer application.\
\
MovieExportServer.xcode - Xcode project containing a single target that builds the MovieExportServer application. This isn't really needed unless you want to specifically debug the Server application and need a way to launch it separate from the Client application.}