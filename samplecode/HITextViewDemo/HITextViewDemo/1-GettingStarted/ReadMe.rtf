{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica-Oblique;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listlevel\levelnfc23\levelnfcn23\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww12760\viewh10480\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qc\pardirnatural

\f0\b\fs24 \cf0 WWDC 2005 session 111 -- HITextView Unleashed
\f1\i\b0 \

\f2\i0 Companion Sample Code\
\
Milestone 1: Getting Started\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \
The example starts with a project created from scratch in Xcode, using the default "Carbon Application" template project. The following steps are used to set up an HITextView in the main window:\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\ql\qnatural\pardirnatural
\ls1\ilvl0\cf0 {\listtext	1.	}Create a new Carbon Application project in Xcode.\
{\listtext	2.	}Edit the NIB in Interface Builder. Press command-shift-I to show the inspector window. Select outline view in the \'d2main.nib\'d3 window for easy selection of objects.\
{\listtext	3.	}Select the main window, and ensure "Compositing" is enabled in the "Attributes" area of the inspector window.\
{\listtext	4.	}Drag a TextView from the palette into it. Resize it to take up the whole window. (Note that even though Interface Builder refers to the text view as merely "TextView", this is actually an HITextView.)\
{\listtext	5.	}In the Inspector, select "Attributes" and set the following options for the TextView:\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\ql\qnatural\pardirnatural
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}Output Text in Unicode		(kOutputTextInUnicodeEncodingMask)\
{\listtext	\uc0\u8259 	}Always Wraps at View Edge	(kTXNAlwaysWrapAtViewEdgeMask)\
{\listtext	\uc0\u8259 	}Do Font Substitution		(kTXNDoFontSubstitutionMask)\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\ql\qnatural\pardirnatural
\ls1\ilvl0\cf0 {\listtext	6.	}Also in the Inspector, select "Layout" and bind the TextView's layout to the parent view on all sides (the top edge is bound to "Top", the bottom edge is bound to "Bottom", and so on).\
{\listtext	7.	}Build and run the project.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\ls2\ilvl0\cf0 \
You can now click in the main window and type. Items in the \'d2Edit\'d3 menu are updated and respond automatically. You can also resize the window and the text will wrap automatically.\
\
The file "Extras-2.c" in this folder contains example code demonstrating how to perform the above steps using code instead of InterfaceBuilder.}