<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing Lights</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=3305"> </A>Managing Lights</H1><P CLASS="T1.Text1"><A NAME="pgfId=3310"> </A><A NAME="marker=3306"> </A>QuickDraw&nbsp;3D provides a number of general routines for managing lights of any kind.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3311"> </A><A NAME="22527"> </A>Q3Light_GetType</H2><P CLASS="T1.Text1"><A NAME="pgfId=3313"> </A><A NAME="marker=3312"> </A><A NAME="marker=702"> </A>You can use the <TT CLASS="cv">Q3Light_GetType</TT> function to get the type of a light object.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=4972"> </A>TQ3ObjectType Q3Light_GetType (TQ3LightObject light);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=4976"> </A><TT CLASS="cv">light</TT><A NAME="33702"> </A></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3315"> </A>A light object.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3316"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3317"> </A>The <TT CLASS="cv">Q3Light_GetType</TT> function returns, as its function result, the type of the light object specified by the <TT CLASS="cv">light</TT> parameter. The types of light objects currently supported by QuickDraw&nbsp;3D are defined by these constants:<A NAME="marker=3321"> </A></P><CODE CLASS="Cv.Code"><A NAME="pgfId=4992"> </A>kQ3LightTypeAmbient<BR>kQ3LightTypeDirectional<BR>kQ3LightTypePoint<BR>kQ3LightTypeSpot<BR></CODE><P CLASS="T1.Text1"><A NAME="pgfId=3323"> </A>If the specified light object is invalid or is not one of these types, <TT CLASS="cv">Q3Light_GetType</TT> returns the value <TT CLASS="cv">kQ3ObjectTypeInvalid</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3324"> </A>Q3Light_GetState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3326"> </A><A NAME="marker=3325"> </A><A NAME="marker=717"> </A>You can use the <TT CLASS="cv">Q3Light_GetState</TT> function to get the current state of a light.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=4998"> </A>TQ3Status Q3Light_GetState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LightObject light, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean *isOn);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5000"> </A><TT CLASS="cv">light</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3328"> </A>A light object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5009"> </A><TT CLASS="cv">isOn</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3329"> </A>On exit, the current state of the light specified by the <TT CLASS="cv">light</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3330"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3331"> </A>The <TT CLASS="cv">Q3Light_GetState</TT> function returns, in the <TT CLASS="cv">isOn</TT> parameter, a Boolean value that indicates whether the light specified by the <TT CLASS="cv">light</TT> parameter is active (<TT CLASS="cv">kQ3True</TT>) or inactive (<TT CLASS="cv">kQ3False</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3332"> </A>Q3Light_SetState</H2><P CLASS="T1.Text1"><A NAME="pgfId=3334"> </A><A NAME="marker=3333"> </A><A NAME="marker=727"> </A>You can use the <TT CLASS="cv">Q3Light_SetState</TT> function to set the state of a light.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5020"> </A>TQ3Status Q3Light_SetState (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LightObject light, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Boolean isOn);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5022"> </A><TT CLASS="cv">light</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3336"> </A>A light object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5031"> </A><TT CLASS="cv">isOn</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3337"> </A>The desired state of the specified light.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3338"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3339"> </A>The <TT CLASS="cv">Q3Light_SetState</TT> function sets the state of the light specified by the <TT CLASS="cv">light</TT> parameter to the value specified by the <TT CLASS="cv">isOn</TT> parameter. If <TT CLASS="cv">isOn</TT> is set to <TT CLASS="cv">kQ3True</TT>, the light is made active; if <TT CLASS="cv">isOn</TT> is set to <TT CLASS="cv">kQ3False</TT>, the light is made inactive.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3340"> </A>Q3Light_GetBrightness</H2><P CLASS="T1.Text1"><A NAME="pgfId=3342"> </A><A NAME="marker=3341"> </A><A NAME="marker=737"> </A>You can use the <TT CLASS="cv">Q3Light_GetBrightness</TT> function to get the current brightness of a light.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5042"> </A>TQ3Status Q3Light_GetBrightness (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LightObject light, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float *brightness);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5044"> </A><TT CLASS="cv">light</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3344"> </A>A light object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5053"> </A><TT CLASS="cv">brightness</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3345"> </A>On exit, the current brightness of the specified light.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3346"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3347"> </A>The <TT CLASS="cv">Q3Light_GetBrightness</TT> function returns, in the <TT CLASS="cv">brightness</TT> parameter, a value that indicates the current brightness of the light specified by the <TT CLASS="cv">light</TT> parameter. The value should be between 0.0 and 1.0, inclusive. Some renderers may allow you to specify overbright lights (where the value in this field is greater than 1.0) or lights with negative brightness (where the value in this field is less than 0.0). If you have a light that has non-linear distance attenuation, you may need brightness values above 1.0 for realistic modeling (imagine the sun). The effects produced by out-of-range brightness values are renderer-specific.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3348"> </A>Q3Light_SetBrightness</H2><P CLASS="T1.Text1"><A NAME="pgfId=3350"> </A><A NAME="marker=3349"> </A><A NAME="marker=747"> </A>You can use the <TT CLASS="cv">Q3Light_SetBrightness</TT> function to set the brightness of a light.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5064"> </A>TQ3Status Q3Light_SetBrightness (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LightObject light, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float brightness);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5066"> </A><TT CLASS="cv">light</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3352"> </A>A light object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5075"> </A><TT CLASS="cv">brightness</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3353"> </A>The desired brightness of the specified light.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3354"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3355"> </A>The <TT CLASS="cv">Q3Light_SetBrightness</TT> function sets the brightness of the light specified by the <TT CLASS="cv">light</TT> parameter to the value specified by the <TT CLASS="cv">brightness</TT> parameter. The value should be between 0.0 and 1.0, inclusive. Some renderers may allow you to specify overbright lights (where the value in this field is greater than 1.0) or lights with negative brightness (where the value in this field is less than 0.0). If you have a light that has non-linear distance attenuation, you may need brightness values above 1.0 for realistic modeling (imagine the sun). The effects produced by out-of-range brightness values are renderer-specific.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3356"> </A>Q3Light_GetColor</H2><P CLASS="T1.Text1"><A NAME="pgfId=3358"> </A><A NAME="marker=3357"> </A><A NAME="marker=757"> </A>You can use the <TT CLASS="cv">Q3Light_GetColor</TT> function to get the current color of a light.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5086"> </A>TQ3Status Q3Light_GetColor (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LightObject light, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ColorRGB *color);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5088"> </A><TT CLASS="cv">light</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3360"> </A>A light object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5097"> </A><TT CLASS="cv">color</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3361"> </A>On exit, a pointer to a <TT CLASS="cv">TQ3ColorRGB</TT> structure specifying the current color of the specified light.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3362"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3363"> </A>The <TT CLASS="cv">Q3Light_GetColor</TT> function returns, in the <TT CLASS="cv">color</TT> parameter, the current color of the light specified by the <TT CLASS="cv">light</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3364"> </A>Q3Light_SetColor</H2><P CLASS="T1.Text1"><A NAME="pgfId=3366"> </A><A NAME="marker=3365"> </A><A NAME="marker=767"> </A>You can use the <TT CLASS="cv">Q3Light_SetColor</TT> function to set the color of a light.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5108"> </A>TQ3Status Q3Light_SetColor (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LightObject light, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3ColorRGB *color);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5110"> </A><TT CLASS="cv">light</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3368"> </A>A light object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5119"> </A><TT CLASS="cv">color</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3369"> </A>A pointer to a <TT CLASS="cv">TQ3ColorRGB</TT> structure specifying the desired color of the specified light.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3370"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3371"> </A>The <TT CLASS="cv">Q3Light_SetColor</TT> function sets the color of the light specified by the <TT CLASS="cv">light</TT> parameter to the value specified by the <TT CLASS="cv">color</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3372"> </A>Q3Light_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=3374"> </A><A NAME="marker=3373"> </A><A NAME="marker=777"> </A>You can use the <TT CLASS="cv">Q3Light_GetData</TT> function to get the basic data associated with a light.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5130"> </A>TQ3Status Q3Light_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LightObject light, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LightData *lightData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5132"> </A><TT CLASS="cv">light</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3376"> </A>A light object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5141"> </A><TT CLASS="cv">lightData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3377"> </A>On exit, a pointer to a light data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3378"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3379"> </A>The <TT CLASS="cv">Q3Light_GetData</TT> function returns, through the <TT CLASS="cv">lightData</TT> parameter, basic information about the light specified by the <TT CLASS="cv">light</TT> parameter. See <A HREF="qd3dlights.f.htm#31489" CLASS="XRef">&quot;Light Data Structure&quot;</A> for a description of a light data structure.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=3383"> </A>Q3Light_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=3385"> </A><A NAME="marker=3384"> </A><A NAME="marker=790"> </A>You can use the <TT CLASS="cv">Q3Light_SetData</TT> function to set the basic data associated with a light.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=5152"> </A>TQ3Status Q3Light_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3LightObject light, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3LightData *lightData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5154"> </A><TT CLASS="cv">light</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3387"> </A>A light object.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=5163"> </A><TT CLASS="cv">lightData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=3388"> </A>A pointer to a light data structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=3389"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=3390"> </A>The <TT CLASS="cv">Q3Light_SetData</TT> function sets the data associated with the light specified by the <TT CLASS="cv">light</TT> parameter to the data specified by the <TT CLASS="cv">lightData</TT> parameter.<A NAME="marker=3391"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>