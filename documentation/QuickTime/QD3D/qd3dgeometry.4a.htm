<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Cones</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=22227"> </A><A NAME="34142"> </A>Creating and Editing Cones</H1><P CLASS="T1.Text1"><A NAME="pgfId=22232"> </A><A NAME="marker=22228"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate cones. See <A HREF="qd3dgeometry.33.htm#32175" CLASS="XRef">&quot;Cones&quot;</A> for the definition of a cone.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22236"> </A>Q3Cone_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=22238"> </A><A NAME="marker=22237"> </A>You can use the <TT CLASS="cv">Q3Cone_New</TT> function to create a new cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48745"> </A>TQ3GeometryObject Q3Cone_New (const TQ3ConeData *coneData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48747"> </A><TT CLASS="cv">coneData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22240"> </A>A pointer to a <TT CLASS="cv">TQ3ConeData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22241"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22242"> </A>The <TT CLASS="cv">Q3Cone_New</TT> function returns, as its function result, a new cone having the shape and attributes specified by the <TT CLASS="cv">coneData</TT> parameter. If a new cone could not be created, <TT CLASS="cv">Q3Cone_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22243"> </A>Q3Cone_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=22245"> </A><A NAME="marker=22244"> </A>You can use the <TT CLASS="cv">Q3Cone_Submit</TT> function to submit an immediate cone for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48758"> </A>TQ3Status Q3Cone_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3ConeData *coneData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48760"> </A><TT CLASS="cv">coneData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=23611"> </A>A pointer to a <TT CLASS="cv">TQ3ConeData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48769"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22248"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22249"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22250"> </A>The <TT CLASS="cv">Q3Cone_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate cone whose shape and attribute set are specified by the <TT CLASS="cv">coneData</TT> parameter. The cone is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22251"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=22252"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22253"> </A>Q3Cone_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=22255"> </A><A NAME="marker=22254"> </A>You can use the <TT CLASS="cv">Q3Cone_GetData</TT> function to get the data that defines a cone and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48780"> </A>TQ3Status Q3Cone_GetData (TQ3GeometryObject cone, TQ3ConeData *coneData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48782"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22257"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48791"> </A><TT CLASS="cv">coneData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22258"> </A>On exit, a pointer to a <TT CLASS="cv">TQ3ConeData</TT> structure that contains information about the cone specified by the <TT CLASS="cv">cone</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22259"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22260"> </A>The <TT CLASS="cv">Q3Cone_GetData</TT> function returns, through the <TT CLASS="cv">coneData</TT> parameter, information about the cone specified by the <TT CLASS="cv">cone</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3ConeData</TT> structure internally; you must call <TT CLASS="cv">Q3Cone_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22264"> </A>Q3Cone_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=22266"> </A><A NAME="marker=22265"> </A>You can use the <TT CLASS="cv">Q3Cone_SetData</TT> function to set the data that defines a cone and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48802"> </A>TQ3Status Q3Cone_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3ConeData *coneData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48804"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=23613"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48817"> </A><TT CLASS="cv">coneData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22269"> </A>A pointer to a <TT CLASS="cv">TQ3ConeData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22270"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22271"> </A>The <TT CLASS="cv">Q3Cone_SetData</TT> function sets the data associated with the cone specified by the <TT CLASS="cv">cone</TT> parameter to the data specified by the <TT CLASS="cv">coneData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22272"> </A>Q3Cone_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=22274"> </A><A NAME="marker=22273"> </A>You can use the <TT CLASS="cv">Q3Cone_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3Cone_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48828"> </A>TQ3Status Q3Cone_EmptyData (TQ3ConeData *coneData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48830"> </A><TT CLASS="cv">coneData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22276"> </A>A pointer to a <TT CLASS="cv">TQ3ConeData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22277"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22278"> </A>The <TT CLASS="cv">Q3Cone_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3ConeData</TT> structure pointed to by the <TT CLASS="cv">coneData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3Cone_GetData</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22279"> </A>Q3Cone_GetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=22281"> </A><A NAME="marker=22280"> </A>You can use the <TT CLASS="cv">Q3Cone_GetOrigin</TT> function to get the origin of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48841"> </A>TQ3Status Q3Cone_GetOrigin (TQ3GeometryObject cone, TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48843"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22283"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48852"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22284"> </A>On exit, the origin of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22285"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22286"> </A>The <TT CLASS="cv">Q3Cone_GetOrigin</TT> function returns, in the <TT CLASS="cv">origin</TT> parameter, the origin of the cone specified by the <TT CLASS="cv">cone</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22287"> </A>Q3Cone_SetOrigin</H2><P CLASS="T1.Text1"><A NAME="pgfId=22289"> </A><A NAME="marker=22288"> </A>You can use the <TT CLASS="cv">Q3Cone_SetOrigin</TT> function to set the origin of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48863"> </A>TQ3Status Q3Cone_SetOrigin (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *origin);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48865"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22291"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48874"> </A><TT CLASS="cv">origin</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22292"> </A>The desired origin of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22293"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22294"> </A>The <TT CLASS="cv">Q3Cone_SetOrigin</TT> function sets the origin of the cone specified by the <TT CLASS="cv">cone</TT> parameter to that specified in the <TT CLASS="cv">origin</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22295"> </A>Q3Cone_GetOrientation</H2><P CLASS="T1.Text1"><A NAME="pgfId=22297"> </A><A NAME="marker=22296"> </A>You can use the <TT CLASS="cv">Q3Cone_GetOrientation</TT> function to get the orientation of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48885"> </A>TQ3Status Q3Cone_GetOrientation (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *orientation);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48887"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=23615"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48896"> </A><TT CLASS="cv">orientation</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22300"> </A>On exit, the orientation of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22301"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22302"> </A>The <TT CLASS="cv">Q3Cone_GetOrientation</TT> function returns, in the <TT CLASS="cv">orientation</TT> parameter, the orientation of the cone specified by the <TT CLASS="cv">cone</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22303"> </A>Q3Cone_SetOrientation</H2><P CLASS="T1.Text1"><A NAME="pgfId=22305"> </A><A NAME="marker=22304"> </A>You can use the <TT CLASS="cv">Q3Cone_SetOrientation</TT> function to set the orientation of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48907"> </A>TQ3Status Q3Cone_SetOrientation (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *orientation);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48909"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22307"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48918"> </A><TT CLASS="cv">orientation</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22308"> </A>The desired orientation of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22309"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22310"> </A>The <TT CLASS="cv">Q3Cone_SetOrientation</TT> function sets the orientation of the cone specified by the <TT CLASS="cv">cone</TT> parameter to that specified in the <TT CLASS="cv">orientation</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22311"> </A>Q3Cone_GetMajorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22313"> </A><A NAME="marker=22312"> </A>You can use the <TT CLASS="cv">Q3Cone_GetMajorRadius</TT> function to get the major radius of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48929"> </A>TQ3Status Q3Cone_GetMajorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *majorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48931"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22315"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48940"> </A><TT CLASS="cv">majorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22316"> </A>On exit, the major radius of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22317"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22318"> </A>The <TT CLASS="cv">Q3Cone_GetMajorRadius</TT> function returns, in the <TT CLASS="cv">majorRadius</TT> parameter, the major radius of the cone specified by the <TT CLASS="cv">cone</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22319"> </A>Q3Cone_SetMajorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22321"> </A><A NAME="marker=22320"> </A>You can use the <TT CLASS="cv">Q3Cone_SetMajorRadius</TT> function to set the major radius of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48951"> </A>TQ3Status Q3Cone_SetMajorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *majorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48953"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22323"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48962"> </A><TT CLASS="cv">majorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22324"> </A>The desired major radius of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22325"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22326"> </A>The <TT CLASS="cv">Q3Cone_SetMajorRadius</TT> function sets the major radius of the cone specified by the <TT CLASS="cv">cone</TT> parameter to that specified in the <TT CLASS="cv">majorRadius</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22327"> </A>Q3Cone_GetMinorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22329"> </A><A NAME="marker=22328"> </A>You can use the <TT CLASS="cv">Q3Cone_GetMinorRadius</TT> function to get the minor radius of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48973"> </A>TQ3Status Q3Cone_GetMinorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Vector3D *minorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48975"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22331"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48984"> </A><TT CLASS="cv">minorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22332"> </A>On exit, the minor radius of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22333"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22334"> </A>The <TT CLASS="cv">Q3Cone_GetMinorRadius</TT> function returns, in the <TT CLASS="cv">minorRadius</TT> parameter, the minor radius of the cone specified by the <TT CLASS="cv">cone</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22335"> </A>Q3Cone_SetMinorRadius</H2><P CLASS="T1.Text1"><A NAME="pgfId=22337"> </A><A NAME="marker=22336"> </A>You can use the <TT CLASS="cv">Q3Cone_SetMinorRadius</TT> function to set the minor radius of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=48995"> </A>TQ3Status Q3Cone_SetMinorRadius (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Vector3D *minorRadius);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=48997"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22339"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49006"> </A><TT CLASS="cv">minorRadius</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22340"> </A>The desired minor radius of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22341"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22342"> </A>The <TT CLASS="cv">Q3Cone_SetMinorRadius</TT> function sets the minor radius of the cone specified by the <TT CLASS="cv">cone</TT> parameter to that specified in the <TT CLASS="cv">minorRadius</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22343"> </A>Q3Cone_GetCaps</H2><P CLASS="T1.Text1"><A NAME="pgfId=22345"> </A><A NAME="marker=22344"> </A>You can use the <TT CLASS="cv">Q3Cone_GetCaps</TT> function to get the cap style of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49017"> </A>TQ3Status Q3Cone_GetCaps (TQ3GeometryObject cone, TQ3EndCap *caps);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49019"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22347"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49028"> </A><TT CLASS="cv">caps</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22348"> </A>On exit, the cap style of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22349"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22350"> </A>The <TT CLASS="cv">Q3Cone_GetCaps</TT> function returns, in the <TT CLASS="cv">caps</TT> parameter, the current cap style of the cone specified by the <TT CLASS="cv">cone</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22351"> </A>Q3Cone_SetCaps</H2><P CLASS="T1.Text1"><A NAME="pgfId=22353"> </A><A NAME="marker=22352"> </A>You can use the <TT CLASS="cv">Q3Cone_SetCaps</TT> function to set the cap style of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49039"> </A>TQ3Status Q3Cone_SetCaps (TQ3GeometryObject cone, TQ3EndCap caps);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49041"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22355"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49050"> </A><TT CLASS="cv">caps</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22356"> </A>The desired style of cone cap.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22357"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22358"> </A>The <TT CLASS="cv">Q3Cone_SetCaps</TT> function sets the cap of the cone specified by the <TT CLASS="cv">cone</TT> parameter to the style indicated by the <TT CLASS="cv">caps</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=25387"> </A>Q3Cone_GetFaceAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=22361"> </A><A NAME="marker=22360"> </A>You can use the <TT CLASS="cv">Q3Cone_GetFaceAttributeSet</TT> function to get the face attribute set of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49061"> </A>TQ3Status Q3Cone_GetFaceAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet *faceAttributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49063"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22363"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49072"> </A><TT CLASS="cv">faceAttributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22364"> </A> On exit, the attribute set of the face of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22365"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22366"> </A>The <TT CLASS="cv">Q3Cone_GetFaceAttributeSet</TT> function returns, in the <TT CLASS="cv">faceAttributeSet</TT> parameter, the attribute set of the face of the cone specified by the <TT CLASS="cv">cone</TT> parameter. The reference count of the set is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22367"> </A>Q3Cone_SetFaceAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=22369"> </A><A NAME="marker=22368"> </A>You can use the <TT CLASS="cv">Q3Cone_SetFaceAttributeSet</TT> function to set the face attribute set of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49084"> </A>TQ3Status Q3Cone_SetFaceAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet faceAttributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49086"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22371"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49095"> </A><TT CLASS="cv">faceAttributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22372"> </A> The desired attribute set of the face of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22373"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22374"> </A>The <TT CLASS="cv">Q3Cone_SetFaceAttributeSet</TT> function sets the attribute set of the face of the cone specified by the <TT CLASS="cv">cone</TT> parameter to that specified in the <TT CLASS="cv">faceAttributeSet</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22375"> </A>Q3Cone_GetBottomAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=22377"> </A><A NAME="marker=22376"> </A>You can use the <TT CLASS="cv">Q3Cone_GetBottomAttributeSet</TT> function to get the bottom attribute set of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49107"> </A>TQ3Status Q3Cone_GetBottomAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet *bottomAttributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49109"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22379"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49118"> </A><TT CLASS="cv">bottomAttributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22380"> </A> On exit, the attribute set of the bottom of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22381"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22382"> </A>The <TT CLASS="cv">Q3Cone_GetBottomAttributeSet</TT> function returns, in the <TT CLASS="cv">bottomAttributeSet</TT> parameter, the attribute set of the bottom of the cone specified by the <TT CLASS="cv">cone</TT> parameter. The reference count of the set is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=22383"> </A>Q3Cone_SetBottomAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=22385"> </A><A NAME="marker=22384"> </A>You can use the <TT CLASS="cv">Q3Cone_SetBottomAttributeSet</TT> function to set the bottom attribute set of a cone.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=49130"> </A>TQ3Status Q3Cone_SetBottomAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject cone, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet bottomAttributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49132"> </A><TT CLASS="cv">cone</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22387"> </A>A cone.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=49141"> </A><TT CLASS="cv">bottomAttributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=22388"> </A> The desired attribute set of the bottom of the specified cone.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=22389"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=22390"> </A>The <TT CLASS="cv">Q3Cone_SetBottomAttributeSet</TT> function sets the attribute set of the bottom of the cone specified by the <TT CLASS="cv">cone</TT> parameter to that specified in the <TT CLASS="cv">bottomAttributeSet</TT> parameter.<A NAME="marker=22391"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>