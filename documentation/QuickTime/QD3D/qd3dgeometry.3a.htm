<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Creating and Editing Polylines</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=10064"> </A><A NAME="11924"> </A>Creating and Editing Polylines</H1><P CLASS="T1.Text1"><A NAME="pgfId=10069"> </A><A NAME="marker=10065"> </A>QuickDraw&nbsp;3D provides routines that you can use to create and manipulate polylines. See <A HREF="qd3dgeometry.24.htm#19488" CLASS="XRef">&quot;Polylines&quot;</A> for the definition of a polyline.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10073"> </A>Q3PolyLine_New</H2><P CLASS="T1.Text1"><A NAME="pgfId=10074"> </A><A NAME="marker=2592"> </A>You can use the <TT CLASS="cv">Q3PolyLine_New</TT> function to create a new polyline.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42975"> </A>TQ3GeometryObject Q3PolyLine_New (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3PolyLineData *polyLineData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42977"> </A><TT CLASS="cv">polyLineData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10076"> </A> A pointer to a <TT CLASS="cv">TQ3PolyLineData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10077"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10078"> </A>The <TT CLASS="cv">Q3PolyLine_New</TT> function returns, as its function result, a new polyline having the vertices and attributes specified by the <TT CLASS="cv">polyLineData</TT> parameter. If a new polyline could not be created, <TT CLASS="cv">Q3PolyLine_New</TT> returns the value <TT CLASS="cv">NULL</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10079"> </A>Q3PolyLine_Submit</H2><P CLASS="T1.Text1"><A NAME="pgfId=10080"> </A><A NAME="marker=2600"> </A>You can use the <TT CLASS="cv">Q3PolyLine_Submit</TT> function to submit an immediate polyline for drawing, picking, bounding, or writing.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=42989"> </A>TQ3Status Q3PolyLine_Submit (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3PolyLineData *polyLineData, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3ViewObject view);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=42991"> </A><TT CLASS="cv">polyLineData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10082"> </A> A pointer to a <TT CLASS="cv">TQ3PolyLineData</TT> structure.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43001"> </A><TT CLASS="cv">view</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10083"> </A>A view.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10084"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10085"> </A>The <TT CLASS="cv">Q3PolyLine_Submit</TT> function submits for drawing, picking, bounding, or writing the immediate polyline whose shape and attribute sets are specified by the <TT CLASS="cv">polyLineData</TT> parameter. The polyline is drawn, picked, bounded, or written according to the view characteristics specified in the <TT CLASS="cv">view</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10086"> </A>SPECIAL CONSIDERATIONS</H3><P CLASS="T1.Text1"><A NAME="pgfId=10087"> </A>You should call this function only in a submitting loop.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10095"> </A>Q3PolyLine_GetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=10096"> </A><A NAME="marker=2620"> </A>You can use the <TT CLASS="cv">Q3PolyLine_GetData</TT> function to get the data that defines a polyline and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=43012"> </A>TQ3Status Q3PolyLine_GetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyLine, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3PolyLineData *polyLineData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43014"> </A><TT CLASS="cv">polyLine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10098"> </A>A polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43023"> </A><TT CLASS="cv">polyLineData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10099"> </A>On exit, a pointer to a <TT CLASS="cv">TQ3PolyLineData</TT> structure that contains information about the polyline specified by the <TT CLASS="cv">polyLine</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10100"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10101"> </A>The <TT CLASS="cv">Q3PolyLine_GetData</TT> function returns, through the <TT CLASS="cv">polyLineData</TT> parameter, information about the polyline specified by the <TT CLASS="cv">polyLine</TT> parameter. QuickDraw&nbsp;3D allocates memory for the <TT CLASS="cv">TQ3PolyLineData</TT> structure internally; you must call <TT CLASS="cv">Q3PolyLine_EmptyData</TT> to dispose of that memory.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10105"> </A>Q3PolyLine_SetData</H2><P CLASS="T1.Text1"><A NAME="pgfId=10106"> </A><A NAME="marker=2632"> </A>You can use the <TT CLASS="cv">Q3PolyLine_SetData</TT> function to set the data that defines a polyline and its attributes.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=43038"> </A>TQ3Status Q3PolyLine_SetData (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyLine, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3PolyLineData *polyLineData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43040"> </A><TT CLASS="cv">polyLine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10108"> </A>A polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43049"> </A><TT CLASS="cv">polyLineData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10109"> </A>A pointer to a <TT CLASS="cv">TQ3PolyLineData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10110"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10111"> </A>The <TT CLASS="cv">Q3PolyLine_SetData</TT> function sets the data associated with the polyline specified by the <TT CLASS="cv">polyLine</TT> parameter to the data specified by the <TT CLASS="cv">polyLineData</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10112"> </A>Q3PolyLine_EmptyData</H2><P CLASS="T1.Text1"><A NAME="pgfId=10113"> </A><A NAME="marker=2641"> </A>You can use the <TT CLASS="cv">Q3PolyLine_EmptyData</TT> function to release the memory occupied by the data structure returned by a previous call to <TT CLASS="cv">Q3PolyLine_GetData</TT>.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=43060"> </A>TQ3Status Q3PolyLine_EmptyData (TQ3PolyLineData *polyLineData);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43062"> </A><TT CLASS="cv">polyLineData</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10115"> </A>A pointer to a <TT CLASS="cv">TQ3PolyLineData</TT> structure.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10116"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10117"> </A>The <TT CLASS="cv">Q3PolyLine_EmptyData</TT> function releases the memory occupied by the <TT CLASS="cv">TQ3PolyLineData</TT> structure pointed to by the <TT CLASS="cv">polyLineData</TT> parameter; that memory was allocated by a previous call to <TT CLASS="cv">Q3PolyLine_GetData</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10118"> </A>Q3PolyLine_GetVertexPosition</H2><P CLASS="T1.Text1"><A NAME="pgfId=10119"> </A><A NAME="marker=2649"> </A>You can use the <TT CLASS="cv">Q3PolyLine_GetVertexPosition</TT> function to get the position of a vertex of a polyline.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=43073"> </A>TQ3Status Q3PolyLine_GetVertexPosition (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyLine, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long index, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3Point3D *position);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43075"> </A><TT CLASS="cv">polyLine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10121"> </A>A polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43084"> </A><TT CLASS="cv">index</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10122"> </A>An index into the <TT CLASS="cv">vertices</TT> array of the specified polyline. This index should be greater than or equal to 0 and less than the number of vertices in the array.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43093"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10123"> </A>On exit, the position of the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10124"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10125"> </A>The <TT CLASS="cv">Q3PolyLine_GetVertexPosition</TT> function returns, in the <TT CLASS="cv">position</TT> parameter, the position of the vertex having the index specified by the <TT CLASS="cv">index</TT> parameter in the <TT CLASS="cv">vertices</TT> array of the polyline specified by the <TT CLASS="cv">polyLine</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10126"> </A>Q3PolyLine_SetVertexPosition</H2><P CLASS="T1.Text1"><A NAME="pgfId=10127"> </A><A NAME="marker=2659"> </A>You can use the <TT CLASS="cv">Q3PolyLine_SetVertexPosition</TT> function to set the position of a vertex of a polyline.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=43104"> </A>TQ3Status Q3PolyLine_SetVertexPosition (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyLine, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long index, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQ3Point3D *position);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43106"> </A><TT CLASS="cv">polyLine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10129"> </A>A polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43115"> </A><TT CLASS="cv">index</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10130"> </A>An index into the <TT CLASS="cv">vertices</TT> array of the specified polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43124"> </A><TT CLASS="cv">position</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10131"> </A>The desired position of the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10132"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10133"> </A>The <TT CLASS="cv">Q3PolyLine_SetVertexPosition</TT> function sets the position of a vertex to that specified in the <TT CLASS="cv">position</TT> parameter. The vertex has the index specified by the <TT CLASS="cv">index</TT> parameter into the <TT CLASS="cv">vertices</TT> array of the polyline specified by the <TT CLASS="cv">polyLine</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10134"> </A>Q3PolyLine_GetVertexAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=10135"> </A><A NAME="marker=2669"> </A>You can use the <TT CLASS="cv">Q3PolyLine_GetVertexAttributeSet</TT> function to get the attribute set of a vertex of a polyline.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=43135"> </A>TQ3Status Q3PolyLine_GetVertexAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyLine, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long index, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet *attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43137"> </A><TT CLASS="cv">polyLine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=35107"> </A>A polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43146"> </A><TT CLASS="cv">index</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10138"> </A>An index into the <TT CLASS="cv">vertices</TT> array of the specified polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43155"> </A><TT CLASS="cv">attributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10139"> </A> On exit, a pointer to a vertex attribute set for the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10140"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10141"> </A>The <TT CLASS="cv">Q3PolyLine_GetVertexAttributeSet</TT> function returns, in the <TT CLASS="cv">attributeSet</TT> parameter, the set of attributes for the vertex having the index specified by the <TT CLASS="cv">index</TT> parameter in the <TT CLASS="cv">vertices</TT> array of the polyline specified by the <TT CLASS="cv">polyLine</TT> parameter. The reference count of the set is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10142"> </A>Q3PolyLine_SetVertexAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=10143"> </A><A NAME="marker=2679"> </A>You can use the <TT CLASS="cv">Q3PolyLine_SetVertexAttributeSet</TT> function to set the attribute set of a vertex of a polyline.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=43167"> </A>TQ3Status Q3PolyLine_SetVertexAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyLine, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long index, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43169"> </A><TT CLASS="cv">polyLine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10145"> </A>A polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43178"> </A><TT CLASS="cv">index</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10146"> </A>An index into the <TT CLASS="cv">vertices</TT> array of the specified polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43187"> </A><TT CLASS="cv">attributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10147"> </A> The desired set of attributes for the specified vertex.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10148"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10149"> </A>The <TT CLASS="cv">Q3PolyLine_SetVertexAttributeSet</TT> function sets the attribute set of the vertex having the index specified by the <TT CLASS="cv">index</TT> parameter in the <TT CLASS="cv">vertices</TT> array of the polyline specified by the <TT CLASS="cv">polyLine</TT> parameter to the set specified in the <TT CLASS="cv">attributeSet</TT> parameter.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10150"> </A>Q3PolyLine_GetSegmentAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=10151"> </A><A NAME="marker=2689"> </A>You can use the <TT CLASS="cv">Q3PolyLine_GetSegmentAttributeSet</TT> function to get the attribute set of a segment of a polyline.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=43199"> </A>TQ3Status Q3PolyLine_GetSegmentAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyLine, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long index, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet *attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43201"> </A><TT CLASS="cv">polyLine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10153"> </A>A polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43210"> </A><TT CLASS="cv">index</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10154"> </A>An index into the <TT CLASS="cv">vertices</TT> array of the specified polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43219"> </A><TT CLASS="cv">attributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10155"> </A> On exit, a pointer to an attribute set for the specified segment.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10156"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10157"> </A>The <TT CLASS="cv">Q3PolyLine_GetSegmentAttributeSet</TT> function returns, in the <TT CLASS="cv">attributeSet</TT> parameter, the set of attributes for a segment of a polyline. The segment is defined by the two vertices having indices <TT CLASS="cv">index</TT> and <TT CLASS="cv">index</TT>+1 in the <TT CLASS="cv">vertices</TT> array of the polyline specified by the <TT CLASS="cv">polyLine</TT> parameter. The reference count of the set is incremented.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=10158"> </A>Q3PolyLine_SetSegmentAttributeSet</H2><P CLASS="T1.Text1"><A NAME="pgfId=10159"> </A><A NAME="marker=2699"> </A>You can use the <TT CLASS="cv">Q3PolyLine_SetSegmentAttributeSet</TT> function to set the attribute set of a segment of a polyline.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=43231"> </A>TQ3Status Q3PolyLine_SetSegmentAttributeSet (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3GeometryObject polyLine, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long index, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQ3AttributeSet attributeSet);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43233"> </A><TT CLASS="cv">polyLine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10161"> </A>A polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43242"> </A><TT CLASS="cv">index</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10162"> </A>An index into the <TT CLASS="cv">vertices</TT> array of the specified polyline.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=43251"> </A><TT CLASS="cv">attributeSet</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=10163"> </A>The desired set of attributes for the specified segment.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=10164"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=10165"> </A>The <TT CLASS="cv">Q3PolyLine_SetSegmentAttributeSet</TT> function sets the attribute set of a segment of a polyline to the set specified in the <TT CLASS="cv">attributeSet</TT> parameter. The segment is defined by the two vertices having indices <TT CLASS="cv">index</TT> and <TT CLASS="cv">index</TT>+1 in the <TT CLASS="cv">vertices</TT> array of the polyline specified by the <TT CLASS="cv">polyLine</TT> parameter.<A NAME="marker=10166"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>