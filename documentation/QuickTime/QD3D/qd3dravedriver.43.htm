<HTML><HEAD><META NAME="GENERATOR" CONTENT="Adobe FrameMaker 5.5/HTML Export Filter"><script language="JavaScript" src="frametest.js"></script><TITLE>Managing Drawing Engines</TITLE></HEAD><BODY BGCOLOR="#ffffff"><!-- start of header --><!--#include virtual="/includes/framesetheader" --><!-- end of header --><!-- path goes here --><H1 CLASS="RH3.RoutineHd3"><A NAME="pgfId=33613"> </A>Managing Drawing Engines</H1><P CLASS="T1.Text1"><A NAME="pgfId=41135"> </A><A NAME="marker=51919"> </A>QuickDraw&nbsp;3D RAVE provides routines that you can use to manage drawing engines. For example, you can use these routines to find a drawing engine for a particular device.</P><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=40301"> </A>QADeviceGetFirstEngine</H2><P CLASS="T1.Text1"><A NAME="pgfId=40302"> </A><A NAME="marker=51836"> </A>You can use the <TT CLASS="cv">QADeviceGetFirstEngine</TT> function to get the first drawing engine that can draw to a particular device.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=67696"> </A>TQAEngine *QADeviceGetFirstEngine (const TQADevice *device);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67698"> </A><TT CLASS="cv">device</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40495"> </A>A device, or the value <TT CLASS="cv">NULL</TT>.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=40309"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=41417"> </A>The <TT CLASS="cv">QADeviceGetFirstEngine</TT> function returns, as its function result, the first drawing engine that is capable of drawing into the device specified by the <TT CLASS="cv">device</TT> parameter. The first engine is defined to be the first engine that satisfies one of these criteria:</P><OL><LI CLASS="N/.NList=1"><A NAME="pgfId=41418"> </A>The drawing engine selected by the user (for example, using the RAVE control panel).<A NAME="marker=57859"> </A></LI><LI CLASS="N.NList"><A NAME="pgfId=41164"> </A>The drawing engine that is tightly coupled to the specified device (that is, that can render only to that device).</LI><LI CLASS="N.NList"><A NAME="pgfId=41168"> </A>The drawing engine that accelerates more features than any other drawing engine.</LI></OL><P CLASS="T1.Text1"><A NAME="pgfId=41169"> </A>If you pass the value <TT CLASS="cv">NULL</TT> in the <TT CLASS="cv">device</TT> parameter, <TT CLASS="cv">QADeviceGetFirstEngine</TT> returns a drawing engine without regard for its ability to drive any particular device. You can use this technique to find all available engines.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=40311"> </A>QADeviceGetNextEngine</H2><P CLASS="T1.Text1"><A NAME="pgfId=40312"> </A><A NAME="marker=51831"> </A>You can use the <TT CLASS="cv">QADeviceGetNextEngine</TT> function to get the next drawing engine that can draw to a particular device.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=67709"> </A>TQAEngine *QADeviceGetNextEngine (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQADevice *device, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQAEngine *currentEngine);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67711"> </A><TT CLASS="cv">device</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=41191"> </A>A device, or the value <TT CLASS="cv">NULL</TT>.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67720"> </A><TT CLASS="cv">currentEngine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40485"> </A>A drawing engine.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=40316"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=40317"> </A>The <TT CLASS="cv">QADeviceGetNextEngine</TT> function returns, as its function result, the drawing engine that supports the device specified by the <TT CLASS="cv">device</TT> parameter that follows the engine specified by the <TT CLASS="cv">currentEngine</TT> parameter. The value you pass in the <TT CLASS="cv">currentEngine</TT> parameter should have been obtained from a previous call to <TT CLASS="cv">QADeviceGetFirstEngine</TT> or <TT CLASS="cv">QADeviceGetNextEngine</TT>.</P><P CLASS="T1.Text1"><A NAME="pgfId=41230"> </A>If you pass the value <TT CLASS="cv">NULL</TT> in the <TT CLASS="cv">device</TT> parameter, <TT CLASS="cv">QADeviceGetNextEngine</TT> returns a the next drawing engine without regard for its ability to drive any particular device. You can use this technique to find all available engines.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=40318"> </A>QAEngineCheckDevice</H2><P CLASS="T1.Text1"><A NAME="pgfId=40319"> </A><A NAME="marker=51826"> </A>You can use the <TT CLASS="cv">QAEngineCheckDevice</TT> function to determine whether a particular drawing engine can draw into a particular device.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=67731"> </A>TQAError QAEngineCheckDevice (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQAEngine *engine, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQADevice *device);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67733"> </A><TT CLASS="cv">engine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40697"> </A>A drawing engine.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67742"> </A><TT CLASS="cv">device</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40451"> </A>A device.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=40326"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=40327"> </A>The <TT CLASS="cv">QAEngineCheckDevice</TT> function returns, as its function result, a code that indicates whether the drawing engine specified by the <TT CLASS="cv">engine</TT> parameter can draw into the device specified by the <TT CLASS="cv">device</TT> parameter (<TT CLASS="cv">kQANoErr</TT>) or not (<TT CLASS="cv">kQAError</TT>).</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=40328"> </A>QAEngineGestalt</H2><P CLASS="T1.Text1"><A NAME="pgfId=40329"> </A><A NAME="marker=51821"> </A>You can use the <TT CLASS="cv">QAEngineGestalt</TT> function to get information about a drawing engine.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=67753"> </A>TQAError QAEngineGestalt (<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const TQAEngine *engine, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TQAGestaltSelector selector, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void *response);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67755"> </A><TT CLASS="cv">engine</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40701"> </A>A drawing engine.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67764"> </A><TT CLASS="cv">selector</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40414"> </A>A selector that determines what kind of information is to be returned about the specified drawing engine. See <A HREF="qd3dravedriver.28.htm#34472" CLASS="XRef">&quot;Gestalt Selectors&quot;</A> for complete information about the available selectors and the information they return.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67773"> </A><TT CLASS="cv">response</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40418"> </A>A pointer to a buffer into which the returned information is copied. Your application is responsible for allocating this buffer. The size and meaning of the data copied to the buffer depend on the selector you pass in the <TT CLASS="cv">selector</TT> parameter.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=40333"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=40334"> </A>The <TT CLASS="cv">QAEngineGestalt</TT> function returns, in the <TT CLASS="cv">response</TT> parameter, a buffer of information about features of the type specified by the <TT CLASS="cv">selector</TT> parameter associated with the drawing engine specified by the <TT CLASS="cv">engine</TT> parameter.</P></DIV><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=41284"> </A>SEE ALSO</H3><P CLASS="T1.Text1"><A NAME="pgfId=41285"> </A>See <A HREF="qd3dravedriver.7.htm#27446" CLASS="XRef">&quot;Finding a Drawing Engine&quot;</A> for code illustrating how to call <TT CLASS="cv">QAEngineGestalt</TT>.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=40335"> </A>QAEngineEnable</H2><P CLASS="T1.Text1"><A NAME="pgfId=40336"> </A><A NAME="marker=51816"> </A>You can use the <TT CLASS="cv">QAEngineEnable</TT> function to enable a drawing engine.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=67784"> </A>TQAError QAEngineEnable (long vendorID, long engineID);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67786"> </A><TT CLASS="cv">vendorID</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40390"> </A>A vendor ID.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67795"> </A><TT CLASS="cv">engineID</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40391"> </A>A drawing engine ID.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=40340"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=40341"> </A>The <TT CLASS="cv">QAEngineEnable</TT> function enables the drawing engine specified by the <TT CLASS="cv">vendorID</TT> and <TT CLASS="cv">engineID</TT> parameters.</P></DIV></DIV><DIV><H2 CLASS="RoH.RoutineHeading"><A NAME="pgfId=40342"> </A>QAEngineDisable</H2><P CLASS="T1.Text1"><A NAME="pgfId=40343"> </A><A NAME="marker=51811"> </A>You can use the <TT CLASS="cv">QAEngineDisable</TT> function to disable a drawing engine.</P><CODE CLASS="RD.RoutineDeclare"><A NAME="pgfId=67806"> </A>TQAError QAEngineDisable (long vendorID, long engineID);<BR></CODE><DL COMPACT><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67808"> </A><TT CLASS="cv">vendorID</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40366"> </A>A vendor ID.</DD><DT CLASS="DT.DefinitionTerm"><A NAME="pgfId=67817"> </A><TT CLASS="cv">engineID</TT></DT><DD CLASS="DD.DefinitionDef"><A NAME="pgfId=40367"> </A>An engine ID.</DD></DL COMPACT><DIV><H3 CLASS="RSb.RoutineSbhd"><A NAME="pgfId=40347"> </A>DESCRIPTION</H3><P CLASS="T1.Text1"><A NAME="pgfId=41300"> </A>The <TT CLASS="cv">QAEngineDisable</TT> function disables the drawing engine specified by the <TT CLASS="cv">vendorID</TT> and <TT CLASS="cv">engineID</TT> parameters.<A NAME="marker=51918"> </A></P></DIV></DIV><hr>&#169; 1997 Apple Computer, Inc.</DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><!-- start of footer --><!--#include virtual="/includes/framesetfooter" --><!-- end of footer --></BODY></HTML>